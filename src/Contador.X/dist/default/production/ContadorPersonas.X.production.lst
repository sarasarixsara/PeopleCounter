

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 25 20:34:09 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 30/04/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F15244 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011C                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  011F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  018E                     	;# 
   124  018F                     	;# 
   125  0190                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  020C                     	;# 
   129  020D                     	;# 
   130  020E                     	;# 
   131  020E                     	;# 
   132  020F                     	;# 
   133  020F                     	;# 
   134  0210                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  028C                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028D                     	;# 
   142  028E                     	;# 
   143  028F                     	;# 
   144  0290                     	;# 
   145  0291                     	;# 
   146  030C                     	;# 
   147  030C                     	;# 
   148  030D                     	;# 
   149  030E                     	;# 
   150  030F                     	;# 
   151  0310                     	;# 
   152  0310                     	;# 
   153  0311                     	;# 
   154  0312                     	;# 
   155  0313                     	;# 
   156  0314                     	;# 
   157  0314                     	;# 
   158  0315                     	;# 
   159  0316                     	;# 
   160  0318                     	;# 
   161  0318                     	;# 
   162  0319                     	;# 
   163  031A                     	;# 
   164  059C                     	;# 
   165  059C                     	;# 
   166  059D                     	;# 
   167  059D                     	;# 
   168  059E                     	;# 
   169  059F                     	;# 
   170  070C                     	;# 
   171  070D                     	;# 
   172  070E                     	;# 
   173  0716                     	;# 
   174  0717                     	;# 
   175  0718                     	;# 
   176  080C                     	;# 
   177  0811                     	;# 
   178  0813                     	;# 
   179  0814                     	;# 
   180  081A                     	;# 
   181  081A                     	;# 
   182  081B                     	;# 
   183  081C                     	;# 
   184  081C                     	;# 
   185  081D                     	;# 
   186  081E                     	;# 
   187  081F                     	;# 
   188  088E                     	;# 
   189  0890                     	;# 
   190  0891                     	;# 
   191  0892                     	;# 
   192  0893                     	;# 
   193  090C                     	;# 
   194  1E8F                     	;# 
   195  1E90                     	;# 
   196  1E91                     	;# 
   197  1E92                     	;# 
   198  1E93                     	;# 
   199  1E9C                     	;# 
   200  1EA1                     	;# 
   201  1EA2                     	;# 
   202  1EC3                     	;# 
   203  1EC5                     	;# 
   204  1EC6                     	;# 
   205  1EC7                     	;# 
   206  1ECB                     	;# 
   207  1ECB                     	;# 
   208  1ECB                     	;# 
   209  1ECC                     	;# 
   210  1ECC                     	;# 
   211  1ECC                     	;# 
   212  1F10                     	;# 
   213  1F11                     	;# 
   214  1F12                     	;# 
   215  1F14                     	;# 
   216  1F15                     	;# 
   217  1F1C                     	;# 
   218  1F1D                     	;# 
   219  1F1E                     	;# 
   220  1F1F                     	;# 
   221  1F20                     	;# 
   222  1F21                     	;# 
   223  1F22                     	;# 
   224  1F23                     	;# 
   225  1F24                     	;# 
   226  1F25                     	;# 
   227  1F26                     	;# 
   228  1F27                     	;# 
   229  1F38                     	;# 
   230  1F39                     	;# 
   231  1F3A                     	;# 
   232  1F3B                     	;# 
   233  1F3C                     	;# 
   234  1F3D                     	;# 
   235  1F3E                     	;# 
   236  1F3F                     	;# 
   237  1F43                     	;# 
   238  1F44                     	;# 
   239  1F45                     	;# 
   240  1F46                     	;# 
   241  1F47                     	;# 
   242  1F48                     	;# 
   243  1F49                     	;# 
   244  1F4A                     	;# 
   245  1F4E                     	;# 
   246  1F4F                     	;# 
   247  1F50                     	;# 
   248  1F51                     	;# 
   249  1F52                     	;# 
   250  1F53                     	;# 
   251  1F54                     	;# 
   252  1F55                     	;# 
   253  1FE4                     	;# 
   254  1FE5                     	;# 
   255  1FE6                     	;# 
   256  1FE7                     	;# 
   257  1FE8                     	;# 
   258  1FE8                     	;# 
   259  1FE9                     	;# 
   260  1FEA                     	;# 
   261  1FEB                     	;# 
   262  1FED                     	;# 
   263  1FEE                     	;# 
   264  1FEF                     	;# 
   265                           
   266                           	psect	idataBANK1
   267  0004                     __pidataBANK1:
   268                           
   269                           ;initializer for _maximo
   270  0004  3464               	retlw	100
   271  0018                     _LATAbits	set	24
   272  000C                     _PORTAbits	set	12
   273  0014                     _TRISC	set	20
   274  0013                     _TRISB	set	19
   275  0012                     _TRISA	set	18
   276  001A                     _LATC	set	26
   277  0019                     _LATB	set	25
   278  0018                     _LATA	set	24
   279  000D                     _PORTBbits	set	13
   280  000E                     _PORTCbits	set	14
   281  0013                     _TRISBbits	set	19
   282  0014                     _TRISCbits	set	20
   283  1F52                     _INLVLC	set	8018
   284  1F47                     _INLVLB	set	8007
   285  1F3C                     _INLVLA	set	7996
   286  1F51                     _SLRCONC	set	8017
   287  1F46                     _SLRCONB	set	8006
   288  1F3B                     _SLRCONA	set	7995
   289  1F50                     _ODCONC	set	8016
   290  1F45                     _ODCONB	set	8005
   291  1F3A                     _ODCONA	set	7994
   292  1F4F                     _WPUC	set	8015
   293  1F38                     _ANSELA	set	7992
   294  1F43                     _ANSELB	set	8003
   295  1F4E                     _ANSELC	set	8014
   296                           
   297                           	psect	stringtext1
   298  0800                     __pstringtext1:
   299  0800                     STR_6:
   300  0800  346C               	retlw	108	;'l'
   301  0801  3469               	retlw	105	;'i'
   302  0802  346D               	retlw	109	;'m'
   303  0803  3469               	retlw	105	;'i'
   304  0804  3474               	retlw	116	;'t'
   305  0805  3465               	retlw	101	;'e'
   306  0806  3420               	retlw	32	;' '
   307  0807  3464               	retlw	100	;'d'
   308  0808  3465               	retlw	101	;'e'
   309  0809  3420               	retlw	32	;' '
   310  080A  3461               	retlw	97	;'a'
   311  080B  3466               	retlw	102	;'f'
   312  080C  346F               	retlw	111	;'o'
   313  080D  3472               	retlw	114	;'r'
   314  080E  346F               	retlw	111	;'o'
   315  080F  3420               	retlw	32	;' '
   316  0810  3400               	retlw	0
   317                           
   318                           	psect	stringtext2
   319  0811                     __pstringtext2:
   320  0811                     STR_4:
   321  0811  344F               	retlw	79	;'O'
   322  0812  3470               	retlw	112	;'p'
   323  0813  3465               	retlw	101	;'e'
   324  0814  3472               	retlw	114	;'r'
   325  0815  3461               	retlw	97	;'a'
   326  0816  3463               	retlw	99	;'c'
   327  0817  3469               	retlw	105	;'i'
   328  0818  346F               	retlw	111	;'o'
   329  0819  346E               	retlw	110	;'n'
   330  081A  343A               	retlw	58	;':'
   331  081B  3420               	retlw	32	;' '
   332  081C  3452               	retlw	82	;'R'
   333  081D  3465               	retlw	101	;'e'
   334  081E  3473               	retlw	115	;'s'
   335  081F  3474               	retlw	116	;'t'
   336  0820  3461               	retlw	97	;'a'
   337  0821  3400               	retlw	0
   338                           
   339                           	psect	stringtext3
   340  0822                     __pstringtext3:
   341  0822                     STR_2:
   342  0822  344F               	retlw	79	;'O'
   343  0823  3470               	retlw	112	;'p'
   344  0824  3465               	retlw	101	;'e'
   345  0825  3472               	retlw	114	;'r'
   346  0826  3461               	retlw	97	;'a'
   347  0827  3463               	retlw	99	;'c'
   348  0828  3469               	retlw	105	;'i'
   349  0829  346F               	retlw	111	;'o'
   350  082A  346E               	retlw	110	;'n'
   351  082B  343A               	retlw	58	;':'
   352  082C  3420               	retlw	32	;' '
   353  082D  3453               	retlw	83	;'S'
   354  082E  3475               	retlw	117	;'u'
   355  082F  346D               	retlw	109	;'m'
   356  0830  3461               	retlw	97	;'a'
   357  0831  3400               	retlw	0
   358                           
   359                           	psect	stringtext4
   360  0832                     __pstringtext4:
   361  0832                     STR_5:
   362  0832  3445               	retlw	69	;'E'
   363  0833  3473               	retlw	115	;'s'
   364  0834  3474               	retlw	116	;'t'
   365  0835  3461               	retlw	97	;'a'
   366  0836  3462               	retlw	98	;'b'
   367  0837  346C               	retlw	108	;'l'
   368  0838  3465               	retlw	101	;'e'
   369  0839  347A               	retlw	122	;'z'
   370  083A  3463               	retlw	99	;'c'
   371  083B  3461               	retlw	97	;'a'
   372  083C  3420               	retlw	32	;' '
   373  083D  3465               	retlw	101	;'e'
   374  083E  346C               	retlw	108	;'l'
   375  083F  3420               	retlw	32	;' '
   376  0840  3400               	retlw	0
   377                           
   378                           	psect	stringtext5
   379  0841                     __pstringtext5:
   380  0841                     STR_11:
   381  0841  344D               	retlw	77	;'M'
   382  0842  346F               	retlw	111	;'o'
   383  0843  3464               	retlw	100	;'d'
   384  0844  346F               	retlw	111	;'o'
   385  0845  3420               	retlw	32	;' '
   386  0846  3463               	retlw	99	;'c'
   387  0847  346F               	retlw	111	;'o'
   388  0848  346E               	retlw	110	;'n'
   389  0849  3474               	retlw	116	;'t'
   390  084A  3461               	retlw	97	;'a'
   391  084B  3464               	retlw	100	;'d'
   392  084C  346F               	retlw	111	;'o'
   393  084D  3472               	retlw	114	;'r'
   394  084E  3420               	retlw	32	;' '
   395  084F  3400               	retlw	0
   396                           
   397                           	psect	stringtext6
   398  0850                     __pstringtext6:
   399  0850                     STR_17:
   400  0850  3463               	retlw	99	;'c'
   401  0851  346F               	retlw	111	;'o'
   402  0852  346E               	retlw	110	;'n'
   403  0853  3474               	retlw	116	;'t'
   404  0854  3461               	retlw	97	;'a'
   405  0855  3464               	retlw	100	;'d'
   406  0856  346F               	retlw	111	;'o'
   407  0857  3472               	retlw	114	;'r'
   408  0858  3420               	retlw	32	;' '
   409  0859  3420               	retlw	32	;' '
   410  085A  3420               	retlw	32	;' '
   411  085B  3420               	retlw	32	;' '
   412  085C  3425               	retlw	37	;'%'
   413  085D  3464               	retlw	100	;'d'
   414  085E  3400               	retlw	0
   415                           
   416                           	psect	stringtext7
   417  085F                     __pstringtext7:
   418  085F                     STR_15:
   419  085F  3463               	retlw	99	;'c'
   420  0860  346F               	retlw	111	;'o'
   421  0861  346E               	retlw	110	;'n'
   422  0862  3474               	retlw	116	;'t'
   423  0863  3461               	retlw	97	;'a'
   424  0864  3464               	retlw	100	;'d'
   425  0865  346F               	retlw	111	;'o'
   426  0866  3472               	retlw	114	;'r'
   427  0867  3420               	retlw	32	;' '
   428  0868  3420               	retlw	32	;' '
   429  0869  3420               	retlw	32	;' '
   430  086A  3425               	retlw	37	;'%'
   431  086B  3464               	retlw	100	;'d'
   432  086C  3400               	retlw	0
   433                           
   434                           	psect	stringtext8
   435  086D                     __pstringtext8:
   436  086D                     STR_1:
   437  086D  3443               	retlw	67	;'C'
   438  086E  346F               	retlw	111	;'o'
   439  086F  346E               	retlw	110	;'n'
   440  0870  3466               	retlw	102	;'f'
   441  0871  3469               	retlw	105	;'i'
   442  0872  3467               	retlw	103	;'g'
   443  0873  3475               	retlw	117	;'u'
   444  0874  3472               	retlw	114	;'r'
   445  0875  3461               	retlw	97	;'a'
   446  0876  3463               	retlw	99	;'c'
   447  0877  3469               	retlw	105	;'i'
   448  0878  346F               	retlw	111	;'o'
   449  0879  346E               	retlw	110	;'n'
   450  087A  3400               	retlw	0
   451                           
   452                           	psect	stringtext9
   453  087B                     __pstringtext9:
   454  087B                     STR_16:
   455  087B  346D               	retlw	109	;'m'
   456  087C  3461               	retlw	97	;'a'
   457  087D  3478               	retlw	120	;'x'
   458  087E  3469               	retlw	105	;'i'
   459  087F  346D               	retlw	109	;'m'
   460  0880  346F               	retlw	111	;'o'
   461  0881  3420               	retlw	32	;' '
   462  0882  3420               	retlw	32	;' '
   463  0883  3420               	retlw	32	;' '
   464  0884  3425               	retlw	37	;'%'
   465  0885  3464               	retlw	100	;'d'
   466  0886  3400               	retlw	0
   467                           
   468                           	psect	stringtext10
   469  0887                     __pstringtext10:
   470  0887                     STR_12:
   471  0887  3463               	retlw	99	;'c'
   472  0888  346F               	retlw	111	;'o'
   473  0889  346E               	retlw	110	;'n'
   474  088A  3474               	retlw	116	;'t'
   475  088B  3461               	retlw	97	;'a'
   476  088C  3464               	retlw	100	;'d'
   477  088D  346F               	retlw	111	;'o'
   478  088E  3472               	retlw	114	;'r'
   479  088F  3420               	retlw	32	;' '
   480  0890  3425               	retlw	37	;'%'
   481  0891  3464               	retlw	100	;'d'
   482  0892  3400               	retlw	0
   483                           
   484                           	psect	stringtext11
   485  0893                     __pstringtext11:
   486  0893                     STR_8:
   487  0893  344D               	retlw	77	;'M'
   488  0894  3461               	retlw	97	;'a'
   489  0895  3478               	retlw	120	;'x'
   490  0896  3469               	retlw	105	;'i'
   491  0897  346D               	retlw	109	;'m'
   492  0898  346F               	retlw	111	;'o'
   493  0899  343A               	retlw	58	;':'
   494  089A  3420               	retlw	32	;' '
   495  089B  3425               	retlw	37	;'%'
   496  089C  3464               	retlw	100	;'d'
   497  089D  3400               	retlw	0
   498                           
   499                           	psect	stringtext12
   500  089E                     __pstringtext12:
   501  089E                     STR_13:
   502  089E  346D               	retlw	109	;'m'
   503  089F  3461               	retlw	97	;'a'
   504  08A0  3478               	retlw	120	;'x'
   505  08A1  3469               	retlw	105	;'i'
   506  08A2  346D               	retlw	109	;'m'
   507  08A3  346F               	retlw	111	;'o'
   508  08A4  3420               	retlw	32	;' '
   509  08A5  3425               	retlw	37	;'%'
   510  08A6  3464               	retlw	100	;'d'
   511  08A7  3400               	retlw	0
   512                           
   513                           	psect	stringtext13
   514  0000                     __pstringtext13:
   515  087B                     
   516                           	psect	cinit
   517  07E5                     start_initialization:	
   518                           ; #config settings
   519                           
   520  07E5                     __initialization:
   521                           
   522                           ; Initialize objects allocated to BANK1
   523  07E5  0141               	movlb	1	; select bank1
   524  07E6  3180  2004  3187   	fcall	__pidataBANK1	;fetch initializer
   525  07E9  00D5               	movwf	__pdataBANK1& (0+127)
   526                           
   527                           ; Clear objects allocated to BANK0
   528  07EA  0140               	movlb	0	; select bank0
   529  07EB  01EE               	clrf	__pbssBANK0& (0+127)
   530  07EC  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   531                           
   532                           ; Clear objects allocated to BANK1
   533  07ED  30A0               	movlw	low __pbssBANK1
   534  07EE  0084               	movwf	4
   535  07EF  3000               	movlw	high __pbssBANK1
   536  07F0  0085               	movwf	5
   537  07F1  301B               	movlw	27
   538  07F2  318C  2458  3187   	fcall	clear_ram0
   539                           
   540                           ; Clear objects allocated to BANK2
   541  07F5  3020               	movlw	low __pbssBANK2
   542  07F6  0084               	movwf	4
   543  07F7  3001               	movlw	high __pbssBANK2
   544  07F8  0085               	movwf	5
   545  07F9  3020               	movlw	32
   546  07FA  318C  2458  3187   	fcall	clear_ram0
   547  07FD                     end_of_initialization:	
   548                           ;End of C runtime variable initialization code
   549                           
   550  07FD                     __end_of__initialization:
   551  07FD  0140               	movlb	0
   552  07FE  3184  2C09         	ljmp	_main	;jump to C main() function
   553                           
   554                           	psect	bssBANK0
   555  006E                     __pbssBANK0:
   556  006E                     _flags:
   557  006E                     	ds	2
   558                           
   559                           	psect	bssBANK1
   560  00A0                     __pbssBANK1:
   561  00A0                     _nout:
   562  00A0                     	ds	2
   563  00A2                     _width:
   564  00A2                     	ds	2
   565  00A4                     _prec:
   566  00A4                     	ds	2
   567  00A6                     _contador:
   568  00A6                     	ds	1
   569  00A7                     _s:
   570  00A7                     	ds	20
   571                           
   572                           	psect	dataBANK1
   573  00D5                     __pdataBANK1:
   574  00D5                     _maximo:
   575  00D5                     	ds	1
   576                           
   577                           	psect	bssBANK2
   578  0120                     __pbssBANK2:
   579  0120                     _dbuf:
   580  0120                     	ds	32
   581                           
   582                           	psect	clrtext
   583  0C58                     clear_ram0:	
   584                           ;	Called with FSR0 containing the base address, and
   585                           ;	WREG with the size to clear
   586                           
   587  0C58  0064               	clrwdt	;clear the watchdog before getting into this loop
   588  0C59                     clrloop0:
   589  0C59  0180               	clrf	0	;clear RAM location pointed to by FSR
   590  0C5A  3101               	addfsr 0,1
   591  0C5B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   592  0C5C  2C59               	goto	clrloop0	;have we reached the end yet?
   593  0C5D  3400               	retlw	0	;all done for this memory range, return
   594                           
   595                           	psect	cstackBANK1
   596  00BB                     __pcstackBANK1:
   597  00BB                     	ds	2
   598  00BD                     sprintf@ap:
   599                           
   600                           ; 1 bytes @ 0x2
   601  00BD                     	ds	1
   602  00BE                     sprintf@f:
   603                           
   604                           ; 5 bytes @ 0x3
   605  00BE                     	ds	5
   606  00C3                     sprintf@s:
   607                           
   608                           ; 1 bytes @ 0x8
   609  00C3                     	ds	1
   610  00C4                     cambio@variable:
   611                           
   612                           ; 3 bytes @ 0x9
   613  00C4                     	ds	3
   614  00C7                     cambio@operacion:
   615                           
   616                           ; 1 bytes @ 0xC
   617  00C7                     	ds	1
   618  00C8                     cambio@ok:
   619                           
   620                           ; 2 bytes @ 0xD
   621  00C8                     	ds	2
   622  00CA                     main@aux:
   623                           
   624                           ; 3 bytes @ 0xF
   625  00CA                     	ds	3
   626  00CD                     main@A2:
   627                           
   628                           ; 2 bytes @ 0x12
   629  00CD                     	ds	2
   630  00CF                     main@A4:
   631                           
   632                           ; 2 bytes @ 0x14
   633  00CF                     	ds	2
   634  00D1                     main@A1:
   635                           
   636                           ; 2 bytes @ 0x16
   637  00D1                     	ds	2
   638  00D3                     main@A3:
   639                           
   640                           ; 2 bytes @ 0x18
   641  00D3                     	ds	2
   642                           
   643                           	psect	cstackCOMMON
   644  0070                     __pcstackCOMMON:
   645  0070                     ?_Lcd_Cmd:
   646  0070                     ??_Lcd_Cmd:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Chr_CP:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_Lcd_Chr_CP:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_putch:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_putch:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Lcd_Init:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_PIN_MANAGER_Initialize:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_PIN_MANAGER_Initialize:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_cambio:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_main:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??___aodiv:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??___aomod:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_fputc:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_strlen:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     putch@c:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     fputc@c:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 2 bytes @ 0x0
   696  0070                     	ds	1
   697  0071                     ___aodiv@counter:
   698  0071                     ___aomod@counter:	
   699                           ; 1 bytes @ 0x1
   700                           
   701                           
   702                           ; 1 bytes @ 0x1
   703  0071                     	ds	1
   704  0072                     ??_strlen:
   705  0072                     Lcd_Chr_CP@data:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     Lcd_Cmd@data:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0072                     ___aodiv@sign:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     ___aomod@sign:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     fputc@fp:	
   718                           ; 1 bytes @ 0x2
   719                           
   720                           
   721                           ; 1 bytes @ 0x2
   722  0072                     	ds	1
   723  0073                     ??_fputc:
   724  0073                     ??_Lcd_Init:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     ?_Lcd_Out2:	
   728                           ; 1 bytes @ 0x3
   729                           
   730  0073                     ?_abs:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     Lcd_Out2@x:	
   734                           ; 2 bytes @ 0x3
   735                           
   736  0073                     strlen@a:	
   737                           ; 1 bytes @ 0x3
   738                           
   739  0073                     abs@a:	
   740                           ; 1 bytes @ 0x3
   741                           
   742  0073                     ___aodiv@quotient:	
   743                           ; 2 bytes @ 0x3
   744                           
   745                           
   746                           ; 8 bytes @ 0x3
   747  0073                     	ds	1
   748  0074                     Lcd_Init@data:
   749  0074                     Lcd_Out2@buffer:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     strlen@s:	
   753                           ; 1 bytes @ 0x4
   754                           
   755                           
   756                           ; 1 bytes @ 0x4
   757  0074                     	ds	1
   758  0075                     ??_abs:
   759  0075                     ??_Lcd_Out2:	
   760                           ; 1 bytes @ 0x5
   761                           
   762                           
   763                           ; 1 bytes @ 0x5
   764  0075                     	ds	2
   765  0077                     Lcd_Out2@y:
   766                           
   767                           ; 1 bytes @ 0x7
   768  0077                     	ds	1
   769  0078                     ?_fputs:
   770  0078                     Lcd_Out2@data:	
   771                           ; 2 bytes @ 0x8
   772                           
   773  0078                     fputs@fp:	
   774                           ; 1 bytes @ 0x8
   775                           
   776                           
   777                           ; 1 bytes @ 0x8
   778  0078                     	ds	1
   779  0079                     ??_fputs:
   780                           
   781                           ; 1 bytes @ 0x9
   782  0079                     	ds	3
   783  007C                     ??_pad:
   784                           
   785                           ; 1 bytes @ 0xC
   786  007C                     	ds	1
   787  007D                     ??_sprintf:
   788                           
   789                           ; 1 bytes @ 0xD
   790  007D                     	ds	1
   791                           
   792                           	psect	cstackBANK0
   793  0020                     __pcstackBANK0:
   794  0020                     ?___aodiv:
   795  0020                     ?___aomod:	
   796                           ; 8 bytes @ 0x0
   797                           
   798  0020                     fputs@c:	
   799                           ; 8 bytes @ 0x0
   800                           
   801  0020                     ___aodiv@divisor:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0020                     ___aomod@divisor:	
   805                           ; 8 bytes @ 0x0
   806                           
   807                           
   808                           ; 8 bytes @ 0x0
   809  0020                     	ds	1
   810  0021                     fputs@i:
   811                           
   812                           ; 2 bytes @ 0x1
   813  0021                     	ds	2
   814  0023                     fputs@s:
   815                           
   816                           ; 1 bytes @ 0x3
   817  0023                     	ds	1
   818  0024                     ?_pad:
   819  0024                     pad@buf:	
   820                           ; 2 bytes @ 0x4
   821                           
   822                           
   823                           ; 1 bytes @ 0x4
   824  0024                     	ds	1
   825  0025                     pad@p:
   826                           
   827                           ; 2 bytes @ 0x5
   828  0025                     	ds	2
   829  0027                     pad@i:
   830                           
   831                           ; 2 bytes @ 0x7
   832  0027                     	ds	1
   833  0028                     ___aodiv@dividend:
   834  0028                     ___aomod@dividend:	
   835                           ; 8 bytes @ 0x8
   836                           
   837                           
   838                           ; 8 bytes @ 0x8
   839  0028                     	ds	1
   840  0029                     pad@w:
   841                           
   842                           ; 2 bytes @ 0x9
   843  0029                     	ds	2
   844  002B                     pad@fp:
   845                           
   846                           ; 1 bytes @ 0xB
   847  002B                     	ds	5
   848  0030                     ?_dtoa:
   849  0030                     dtoa@d:	
   850                           ; 2 bytes @ 0x10
   851                           
   852                           
   853                           ; 8 bytes @ 0x10
   854  0030                     	ds	8
   855  0038                     ??_dtoa:
   856                           
   857                           ; 1 bytes @ 0x18
   858  0038                     	ds	3
   859  003B                     _dtoa$648:
   860                           
   861                           ; 2 bytes @ 0x1B
   862  003B                     	ds	2
   863  003D                     dtoa@fp:
   864                           
   865                           ; 1 bytes @ 0x1D
   866  003D                     	ds	1
   867  003E                     dtoa@p:
   868                           
   869                           ; 2 bytes @ 0x1E
   870  003E                     	ds	2
   871  0040                     dtoa@w:
   872                           
   873                           ; 2 bytes @ 0x20
   874  0040                     	ds	2
   875  0042                     dtoa@s:
   876                           
   877                           ; 2 bytes @ 0x22
   878  0042                     	ds	2
   879  0044                     dtoa@n:
   880                           
   881                           ; 8 bytes @ 0x24
   882  0044                     	ds	8
   883  004C                     dtoa@i:
   884                           
   885                           ; 2 bytes @ 0x2C
   886  004C                     	ds	2
   887  004E                     ?_vfpfcnvrt:
   888  004E                     vfpfcnvrt@fmt:	
   889                           ; 2 bytes @ 0x2E
   890                           
   891                           
   892                           ; 1 bytes @ 0x2E
   893  004E                     	ds	1
   894  004F                     vfpfcnvrt@ap:
   895                           
   896                           ; 1 bytes @ 0x2F
   897  004F                     	ds	1
   898  0050                     ??_vfpfcnvrt:
   899                           
   900                           ; 1 bytes @ 0x30
   901  0050                     	ds	5
   902  0055                     vfpfcnvrt@ll:
   903                           
   904                           ; 8 bytes @ 0x35
   905  0055                     	ds	8
   906  005D                     vfpfcnvrt@fp:
   907                           
   908                           ; 1 bytes @ 0x3D
   909  005D                     	ds	1
   910  005E                     ?_vfprintf:
   911  005E                     vfprintf@fmt:	
   912                           ; 2 bytes @ 0x3E
   913                           
   914                           
   915                           ; 2 bytes @ 0x3E
   916  005E                     	ds	2
   917  0060                     vfprintf@ap:
   918                           
   919                           ; 1 bytes @ 0x40
   920  0060                     	ds	1
   921  0061                     ??_vfprintf:
   922                           
   923                           ; 1 bytes @ 0x41
   924  0061                     	ds	2
   925  0063                     vfprintf@fp:
   926                           
   927                           ; 1 bytes @ 0x43
   928  0063                     	ds	1
   929  0064                     vfprintf@cfmt:
   930                           
   931                           ; 2 bytes @ 0x44
   932  0064                     	ds	2
   933  0066                     ?_sprintf:
   934  0066                     sprintf@fmt:	
   935                           ; 2 bytes @ 0x46
   936                           
   937                           
   938                           ; 2 bytes @ 0x46
   939  0066                     	ds	4
   940  006A                     ??_cambio:
   941                           
   942                           ; 1 bytes @ 0x4A
   943  006A                     	ds	2
   944  006C                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x4C
   947  006C                     	ds	2
   948                           
   949                           	psect	maintext
   950  0409                     __pmaintext:	
   951 ;;
   952 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   953 ;;
   954 ;; *************** function _main *****************
   955 ;; Defined at:
   956 ;;		line 226 in file "Contador1.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  aux             3   15[BANK1 ] unsigned um
   961 ;;  A3              2   24[BANK1 ] int 
   962 ;;  A1              2   22[BANK1 ] int 
   963 ;;  A4              2   20[BANK1 ] int 
   964 ;;  A2              2   18[BANK1 ] int 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : B3F/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   974 ;;      Params:         0       0       0       0       0       0       0       0
   975 ;;      Locals:         0       0      11       0       0       0       0       0
   976 ;;      Temps:          0       2       0       0       0       0       0       0
   977 ;;      Totals:         0       2      11       0       0       0       0       0
   978 ;;Total ram usage:       13 bytes
   979 ;; Hardware stack levels required when called:    9
   980 ;; This function calls:
   981 ;;		_Lcd_Cmd
   982 ;;		_Lcd_Init
   983 ;;		_Lcd_Out2
   984 ;;		_PIN_MANAGER_Initialize
   985 ;;		_cambio
   986 ;;		_sprintf
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _main
   994  0409                     _main:
   995  0409                     l2041:	
   996                           ;incstack = 0
   997                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   998                           
   999                           
  1000                           ;Contador1.c: 227:   PIN_MANAGER_Initialize();
  1001  0409  318C  2478  3184   	fcall	_PIN_MANAGER_Initialize
  1002  040C                     l2043:
  1003                           
  1004                           ;Contador1.c: 228:   LATAbits.LATA2 = 1;
  1005  040C  0140               	movlb	0	; select bank0
  1006  040D  1518               	bsf	24,2	;volatile
  1007                           
  1008                           ;Contador1.c: 230:   Lcd_Init();
  1009  040E  318E  2605  3184   	fcall	_Lcd_Init
  1010                           
  1011                           ;Contador1.c: 231:   Lcd_Cmd(1);
  1012  0411  3001               	movlw	1
  1013  0412  318E  2691  3184   	fcall	_Lcd_Cmd
  1014                           
  1015                           ;Contador1.c: 232:   Lcd_Cmd(12);
  1016  0415  300C               	movlw	12
  1017  0416  318E  2691  3184   	fcall	_Lcd_Cmd
  1018                           
  1019                           ;Contador1.c: 233:   Lcd_Cmd(14);
  1020  0419  300E               	movlw	14
  1021  041A  318E  2691  3184   	fcall	_Lcd_Cmd
  1022  041D                     l2045:
  1023                           
  1024                           ;Contador1.c: 234:   int A1, A2, A3, A4 = 0;
  1025  041D  0141               	movlb	1	; select bank1
  1026  041E  01CF               	clrf	main@A4^(0+128)
  1027  041F  01D0               	clrf	(main@A4+1)^(0+128)
  1028  0420                     l2047:
  1029                           
  1030                           ;Contador1.c: 235:   uint24_t aux = 0;
  1031  0420  3000               	movlw	0
  1032  0421  00CA               	movwf	main@aux^(0+128)
  1033  0422  3000               	movlw	0
  1034  0423  00CB               	movwf	(main@aux+1)^(0+128)
  1035  0424  3000               	movlw	0
  1036  0425  00CC               	movwf	(main@aux+2)^(0+128)
  1037  0426                     l2049:
  1038                           
  1039                           ;Contador1.c: 238:     if(PORTAbits.RA4==0){
  1040  0426  0140               	movlb	0	; select bank0
  1041  0427  1A0C               	btfsc	12,4	;volatile
  1042  0428  2C2A               	goto	u1961
  1043  0429  2C2B               	goto	u1960
  1044  042A                     u1961:
  1045  042A  2C70               	goto	l2067
  1046  042B                     u1960:
  1047  042B                     l2051:
  1048                           
  1049                           ;Contador1.c: 239:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1050  042B  30A3               	movlw	163
  1051  042C  0140               	movlb	0	; select bank0
  1052  042D  00EC               	movwf	??_main
  1053  042E  3055               	movlw	85
  1054  042F                     u2217:
  1055  042F  0B89               	decfsz	9,f
  1056  0430  2C2F               	goto	u2217
  1057  0431  0BEC               	decfsz	??_main,f
  1058  0432  2C2F               	goto	u2217
  1059  0433                     l2053:
  1060                           
  1061                           ;Contador1.c: 240:         if (PORTAbits.RA4!=0){
  1062  0433  0140               	movlb	0	; select bank0
  1063  0434  1E0C               	btfss	12,4	;volatile
  1064  0435  2C37               	goto	u1971
  1065  0436  2C38               	goto	u1970
  1066  0437                     u1971:
  1067  0437  2C70               	goto	l2067
  1068  0438                     u1970:
  1069  0438                     l2055:
  1070                           
  1071                           ;Contador1.c: 241:         contador=0;
  1072  0438  0141               	movlb	1	; select bank1
  1073  0439  01A6               	clrf	_contador^(0+128)
  1074  043A                     l2057:
  1075                           
  1076                           ;Contador1.c: 242:         Lcd_Cmd(1);
  1077  043A  3001               	movlw	1
  1078  043B  318E  2691  3184   	fcall	_Lcd_Cmd
  1079  043E                     l2059:
  1080                           
  1081                           ;Contador1.c: 244:         sprintf(s, "contador %d",contador);
  1082  043E  3087               	movlw	low (STR_12| (0+32768))
  1083  043F  0140               	movlb	0	; select bank0
  1084  0440  00E6               	movwf	sprintf@fmt
  1085  0441  3088               	movlw	high (STR_12| (0+32768))
  1086  0442  00E7               	movwf	sprintf@fmt+1
  1087  0443  3000               	movlw	0
  1088  0444  00E8               	movwf	?_sprintf+2
  1089  0445  00E9               	movwf	?_sprintf+3
  1090  0446  30A7               	movlw	(low (_s| 0))& (0+255)
  1091  0447  318C  2499  3184   	fcall	_sprintf
  1092  044A                     l2061:
  1093                           
  1094                           ;Contador1.c: 245:         Lcd_Out2(1, 0, s);
  1095  044A  01F3               	clrf	Lcd_Out2@x
  1096  044B  30A7               	movlw	(low (_s| 0))& (0+255)
  1097  044C  0140               	movlb	0	; select bank0
  1098  044D  00EC               	movwf	??_main
  1099  044E  086C               	movf	??_main,w
  1100  044F  00F4               	movwf	Lcd_Out2@buffer
  1101  0450  3001               	movlw	1
  1102  0451  318D  2517  3184   	fcall	_Lcd_Out2
  1103  0454                     l2063:
  1104                           
  1105                           ;Contador1.c: 246:         sprintf(s, "maximo %d",maximo);
  1106  0454  309E               	movlw	low (STR_13| (0+32768))
  1107  0455  0140               	movlb	0	; select bank0
  1108  0456  00E6               	movwf	sprintf@fmt
  1109  0457  3088               	movlw	high (STR_13| (0+32768))
  1110  0458  00E7               	movwf	sprintf@fmt+1
  1111  0459  0141               	movlb	1	; select bank1
  1112  045A  0855               	movf	_maximo^(0+128),w
  1113  045B  0140               	movlb	0	; select bank0
  1114  045C  00EC               	movwf	??_main
  1115  045D  01ED               	clrf	??_main+1
  1116  045E  086C               	movf	??_main,w
  1117  045F  00E8               	movwf	?_sprintf+2
  1118  0460  086D               	movf	??_main+1,w
  1119  0461  00E9               	movwf	?_sprintf+3
  1120  0462  30A7               	movlw	(low (_s| 0))& (0+255)
  1121  0463  318C  2499  3184   	fcall	_sprintf
  1122  0466                     l2065:
  1123                           
  1124                           ;Contador1.c: 247:         Lcd_Out2(2, 0, s);
  1125  0466  01F3               	clrf	Lcd_Out2@x
  1126  0467  30A7               	movlw	(low (_s| 0))& (0+255)
  1127  0468  0140               	movlb	0	; select bank0
  1128  0469  00EC               	movwf	??_main
  1129  046A  086C               	movf	??_main,w
  1130  046B  00F4               	movwf	Lcd_Out2@buffer
  1131  046C  3002               	movlw	2
  1132  046D  318D  2517  3184   	fcall	_Lcd_Out2
  1133  0470                     l2067:
  1134                           
  1135                           ;Contador1.c: 251:     if (contador > maximo) {
  1136  0470  0141               	movlb	1	; select bank1
  1137  0471  0826               	movf	_contador^(0+128),w
  1138  0472  0255               	subwf	_maximo^(0+128),w
  1139  0473  1803               	skipnc
  1140  0474  2C76               	goto	u1981
  1141  0475  2C77               	goto	u1980
  1142  0476                     u1981:
  1143  0476  2C7A               	goto	l144
  1144  0477                     u1980:
  1145  0477                     l2069:
  1146                           
  1147                           ;Contador1.c: 252:       LATAbits.LATA2 = 0;
  1148  0477  0140               	movlb	0	; select bank0
  1149  0478  1118               	bcf	24,2	;volatile
  1150                           
  1151                           ;Contador1.c: 253:     }
  1152  0479  2CB2               	goto	l2085
  1153  047A                     l144:	
  1154                           ;Contador1.c: 254:     else{
  1155                           
  1156                           
  1157                           ;Contador1.c: 255:        LATAbits.LATA2 = 1;
  1158  047A  0140               	movlb	0	; select bank0
  1159  047B  1518               	bsf	24,2	;volatile
  1160  047C  2CB2               	goto	l2085
  1161  047D                     l2071:
  1162                           
  1163                           ;Contador1.c: 258:       aux++;
  1164  047D  3001               	movlw	1
  1165  047E  0141               	movlb	1	; select bank1
  1166  047F  07CA               	addwf	main@aux^(0+128),f
  1167  0480  3000               	movlw	0
  1168  0481  1803               	skipnc
  1169  0482  3001               	movlw	1
  1170  0483  07CB               	addwf	(main@aux+1)^(0+128),f
  1171  0484  3000               	movlw	0
  1172  0485  1803               	skipnc
  1173  0486  3001               	movlw	1
  1174  0487  07CC               	addwf	(main@aux+2)^(0+128),f
  1175  0488                     l2073:
  1176                           
  1177                           ;Contador1.c: 259:       if (aux == 30000) {
  1178  0488  3030               	movlw	48
  1179  0489  064A               	xorwf	main@aux^(0+128),w
  1180  048A  3075               	movlw	117
  1181  048B  1903               	skipnz
  1182  048C  064B               	xorwf	(main@aux+1)^(0+128),w
  1183  048D  044C               	iorwf	(main@aux+2)^(0+128),w
  1184  048E  1D03               	btfss	3,2
  1185  048F  2C91               	goto	u1991
  1186  0490  2C92               	goto	u1990
  1187  0491                     u1991:
  1188  0491  2CB2               	goto	l2085
  1189  0492                     u1990:
  1190  0492                     l2075:
  1191                           
  1192                           ;Contador1.c: 260:         aux = 0;
  1193  0492  3000               	movlw	0
  1194  0493  00CA               	movwf	main@aux^(0+128)
  1195  0494  3000               	movlw	0
  1196  0495  00CB               	movwf	(main@aux+1)^(0+128)
  1197  0496  3000               	movlw	0
  1198  0497  00CC               	movwf	(main@aux+2)^(0+128)
  1199  0498                     l2077:
  1200                           
  1201                           ;Contador1.c: 262:         Lcd_Cmd(1);
  1202  0498  3001               	movlw	1
  1203  0499  318E  2691  3184   	fcall	_Lcd_Cmd
  1204  049C                     l2079:
  1205                           
  1206                           ;Contador1.c: 264:         sprintf(s, "Configuracion");
  1207  049C  306D               	movlw	low (STR_1| (0+32768))
  1208  049D  0140               	movlb	0	; select bank0
  1209  049E  00E6               	movwf	sprintf@fmt
  1210  049F  3088               	movlw	high (STR_1| (0+32768))
  1211  04A0  00E7               	movwf	sprintf@fmt+1
  1212  04A1  30A7               	movlw	(low (_s| 0))& (0+255)
  1213  04A2  318C  2499  3184   	fcall	_sprintf
  1214  04A5                     l2081:
  1215                           
  1216                           ;Contador1.c: 265:         Lcd_Out2(1, 0, s);
  1217  04A5  01F3               	clrf	Lcd_Out2@x
  1218  04A6  30A7               	movlw	(low (_s| 0))& (0+255)
  1219  04A7  0140               	movlb	0	; select bank0
  1220  04A8  00EC               	movwf	??_main
  1221  04A9  086C               	movf	??_main,w
  1222  04AA  00F4               	movwf	Lcd_Out2@buffer
  1223  04AB  3001               	movlw	1
  1224  04AC  318D  2517  3184   	fcall	_Lcd_Out2
  1225  04AF                     l2083:
  1226                           
  1227                           ;Contador1.c: 267:         cambio();
  1228  04AF  3185  25EA  3184   	fcall	_cambio
  1229  04B2                     l2085:
  1230                           
  1231                           ;Contador1.c: 257:     while (PORTAbits.RA4 == 0) {
  1232  04B2  0140               	movlb	0	; select bank0
  1233  04B3  1E0C               	btfss	12,4	;volatile
  1234  04B4  2CB6               	goto	u2001
  1235  04B5  2CB7               	goto	u2000
  1236  04B6                     u2001:
  1237  04B6  2C7D               	goto	l2071
  1238  04B7                     u2000:
  1239  04B7                     l2087:
  1240                           
  1241                           ;Contador1.c: 271:     aux=0;
  1242  04B7  3000               	movlw	0
  1243  04B8  0141               	movlb	1	; select bank1
  1244  04B9  00CA               	movwf	main@aux^(0+128)
  1245  04BA  3000               	movlw	0
  1246  04BB  00CB               	movwf	(main@aux+1)^(0+128)
  1247  04BC  3000               	movlw	0
  1248  04BD  00CC               	movwf	(main@aux+2)^(0+128)
  1249  04BE                     l2089:
  1250                           
  1251                           ;Contador1.c: 273:     if (PORTBbits.RB5 == 0 && A3 == 0 && A4 == 0) {
  1252  04BE  0140               	movlb	0	; select bank0
  1253  04BF  1A8D               	btfsc	13,5	;volatile
  1254  04C0  2CC2               	goto	u2011
  1255  04C1  2CC3               	goto	u2010
  1256  04C2                     u2011:
  1257  04C2  2CD8               	goto	l2097
  1258  04C3                     u2010:
  1259  04C3                     l2091:
  1260  04C3  0141               	movlb	1	; select bank1
  1261  04C4  0853               	movf	main@A3^(0+128),w
  1262  04C5  0454               	iorwf	(main@A3+1)^(0+128),w
  1263  04C6  1D03               	btfss	3,2
  1264  04C7  2CC9               	goto	u2021
  1265  04C8  2CCA               	goto	u2020
  1266  04C9                     u2021:
  1267  04C9  2CD8               	goto	l2097
  1268  04CA                     u2020:
  1269  04CA                     l2093:
  1270  04CA  084F               	movf	main@A4^(0+128),w
  1271  04CB  0450               	iorwf	(main@A4+1)^(0+128),w
  1272  04CC  1D03               	btfss	3,2
  1273  04CD  2CCF               	goto	u2031
  1274  04CE  2CD0               	goto	u2030
  1275  04CF                     u2031:
  1276  04CF  2CD8               	goto	l2097
  1277  04D0                     u2030:
  1278  04D0                     l2095:
  1279                           
  1280                           ;Contador1.c: 274:       A3 = 1;
  1281  04D0  3001               	movlw	1
  1282  04D1  00D3               	movwf	main@A3^(0+128)
  1283  04D2  3000               	movlw	0
  1284  04D3  00D4               	movwf	(main@A3^(0+128)+1)
  1285                           
  1286                           ;Contador1.c: 275:       A2 = 1;
  1287  04D4  3001               	movlw	1
  1288  04D5  00CD               	movwf	main@A2^(0+128)
  1289  04D6  3000               	movlw	0
  1290  04D7  00CE               	movwf	(main@A2^(0+128)+1)
  1291  04D8                     l2097:
  1292                           
  1293                           ;Contador1.c: 277:     if (PORTBbits.RB7 == 0 && A3 == 1) {
  1294  04D8  0140               	movlb	0	; select bank0
  1295  04D9  1B8D               	btfsc	13,7	;volatile
  1296  04DA  2CDC               	goto	u2041
  1297  04DB  2CDD               	goto	u2040
  1298  04DC                     u2041:
  1299  04DC  2CE8               	goto	l2103
  1300  04DD                     u2040:
  1301  04DD                     l2099:
  1302  04DD  0141               	movlb	1	; select bank1
  1303  04DE  0353               	decf	main@A3^(0+128),w
  1304  04DF  0454               	iorwf	(main@A3+1)^(0+128),w
  1305  04E0  1D03               	btfss	3,2
  1306  04E1  2CE3               	goto	u2051
  1307  04E2  2CE4               	goto	u2050
  1308  04E3                     u2051:
  1309  04E3  2CE8               	goto	l2103
  1310  04E4                     u2050:
  1311  04E4                     l2101:
  1312                           
  1313                           ;Contador1.c: 278:       A4 = 1;
  1314  04E4  3001               	movlw	1
  1315  04E5  00CF               	movwf	main@A4^(0+128)
  1316  04E6  3000               	movlw	0
  1317  04E7  00D0               	movwf	(main@A4^(0+128)+1)
  1318  04E8                     l2103:
  1319                           
  1320                           ;Contador1.c: 280:     if (PORTBbits.RB7 == 1 && PORTBbits.RB5 == 1 && A3 == 1 && A4 == 
      +                          1) {
  1321  04E8  0140               	movlb	0	; select bank0
  1322  04E9  1F8D               	btfss	13,7	;volatile
  1323  04EA  2CEC               	goto	u2061
  1324  04EB  2CED               	goto	u2060
  1325  04EC                     u2061:
  1326  04EC  2D4C               	goto	l2135
  1327  04ED                     u2060:
  1328  04ED                     l2105:
  1329  04ED  1E8D               	btfss	13,5	;volatile
  1330  04EE  2CF0               	goto	u2071
  1331  04EF  2CF1               	goto	u2070
  1332  04F0                     u2071:
  1333  04F0  2D4C               	goto	l2135
  1334  04F1                     u2070:
  1335  04F1                     l2107:
  1336  04F1  0141               	movlb	1	; select bank1
  1337  04F2  0353               	decf	main@A3^(0+128),w
  1338  04F3  0454               	iorwf	(main@A3+1)^(0+128),w
  1339  04F4  1D03               	btfss	3,2
  1340  04F5  2CF7               	goto	u2081
  1341  04F6  2CF8               	goto	u2080
  1342  04F7                     u2081:
  1343  04F7  2D4C               	goto	l2135
  1344  04F8                     u2080:
  1345  04F8                     l2109:
  1346  04F8  034F               	decf	main@A4^(0+128),w
  1347  04F9  0450               	iorwf	(main@A4+1)^(0+128),w
  1348  04FA  1D03               	btfss	3,2
  1349  04FB  2CFD               	goto	u2091
  1350  04FC  2CFE               	goto	u2090
  1351  04FD                     u2091:
  1352  04FD  2D4C               	goto	l2135
  1353  04FE                     u2090:
  1354  04FE                     l2111:
  1355                           
  1356                           ;Contador1.c: 281:       if (contador == 0) {
  1357  04FE  0826               	movf	_contador^(0+128),w
  1358  04FF  1D03               	btfss	3,2
  1359  0500  2D02               	goto	u2101
  1360  0501  2D03               	goto	u2100
  1361  0502                     u2101:
  1362  0502  2D05               	goto	l2115
  1363  0503                     u2100:
  1364  0503                     l2113:
  1365                           
  1366                           ;Contador1.c: 282:         contador = 0;
  1367  0503  01A6               	clrf	_contador^(0+128)
  1368                           
  1369                           ;Contador1.c: 283:       }
  1370  0504  2D07               	goto	l2117
  1371  0505                     l2115:
  1372                           
  1373                           ;Contador1.c: 285:          contador--;
  1374  0505  3001               	movlw	1
  1375  0506  02A6               	subwf	_contador^(0+128),f
  1376  0507                     l2117:
  1377                           
  1378                           ;Contador1.c: 287:       Lcd_Cmd(1);
  1379  0507  3001               	movlw	1
  1380  0508  318E  2691  3184   	fcall	_Lcd_Cmd
  1381  050B                     l2119:
  1382                           
  1383                           ;Contador1.c: 289:       sprintf(s, "contador   %d", contador);
  1384  050B  305F               	movlw	low (STR_15| (0+32768))
  1385  050C  0140               	movlb	0	; select bank0
  1386  050D  00E6               	movwf	sprintf@fmt
  1387  050E  3088               	movlw	high (STR_15| (0+32768))
  1388  050F  00E7               	movwf	sprintf@fmt+1
  1389  0510  0141               	movlb	1	; select bank1
  1390  0511  0826               	movf	_contador^(0+128),w
  1391  0512  0140               	movlb	0	; select bank0
  1392  0513  00EC               	movwf	??_main
  1393  0514  01ED               	clrf	??_main+1
  1394  0515  086C               	movf	??_main,w
  1395  0516  00E8               	movwf	?_sprintf+2
  1396  0517  086D               	movf	??_main+1,w
  1397  0518  00E9               	movwf	?_sprintf+3
  1398  0519  30A7               	movlw	(low (_s| 0))& (0+255)
  1399  051A  318C  2499  3184   	fcall	_sprintf
  1400  051D                     l2121:
  1401                           
  1402                           ;Contador1.c: 290:       Lcd_Out2(1, 0, s);
  1403  051D  01F3               	clrf	Lcd_Out2@x
  1404  051E  30A7               	movlw	(low (_s| 0))& (0+255)
  1405  051F  0140               	movlb	0	; select bank0
  1406  0520  00EC               	movwf	??_main
  1407  0521  086C               	movf	??_main,w
  1408  0522  00F4               	movwf	Lcd_Out2@buffer
  1409  0523  3001               	movlw	1
  1410  0524  318D  2517  3184   	fcall	_Lcd_Out2
  1411  0527                     l2123:
  1412                           
  1413                           ;Contador1.c: 291:       sprintf(s, "maximo   %d", maximo);
  1414  0527  307B               	movlw	low (STR_16| (0+32768))
  1415  0528  0140               	movlb	0	; select bank0
  1416  0529  00E6               	movwf	sprintf@fmt
  1417  052A  3088               	movlw	high (STR_16| (0+32768))
  1418  052B  00E7               	movwf	sprintf@fmt+1
  1419  052C  0141               	movlb	1	; select bank1
  1420  052D  0855               	movf	_maximo^(0+128),w
  1421  052E  0140               	movlb	0	; select bank0
  1422  052F  00EC               	movwf	??_main
  1423  0530  01ED               	clrf	??_main+1
  1424  0531  086C               	movf	??_main,w
  1425  0532  00E8               	movwf	?_sprintf+2
  1426  0533  086D               	movf	??_main+1,w
  1427  0534  00E9               	movwf	?_sprintf+3
  1428  0535  30A7               	movlw	(low (_s| 0))& (0+255)
  1429  0536  318C  2499  3184   	fcall	_sprintf
  1430  0539                     l2125:
  1431                           
  1432                           ;Contador1.c: 292:       Lcd_Out2(2, 0, s);
  1433  0539  01F3               	clrf	Lcd_Out2@x
  1434  053A  30A7               	movlw	(low (_s| 0))& (0+255)
  1435  053B  0140               	movlb	0	; select bank0
  1436  053C  00EC               	movwf	??_main
  1437  053D  086C               	movf	??_main,w
  1438  053E  00F4               	movwf	Lcd_Out2@buffer
  1439  053F  3002               	movlw	2
  1440  0540  318D  2517  3184   	fcall	_Lcd_Out2
  1441  0543                     l2127:
  1442                           
  1443                           ;Contador1.c: 295:       A3 = 0;
  1444  0543  0141               	movlb	1	; select bank1
  1445  0544  01D3               	clrf	main@A3^(0+128)
  1446  0545  01D4               	clrf	(main@A3+1)^(0+128)
  1447  0546                     l2129:
  1448                           
  1449                           ;Contador1.c: 296:       A4 = 0;
  1450  0546  01CF               	clrf	main@A4^(0+128)
  1451  0547  01D0               	clrf	(main@A4+1)^(0+128)
  1452  0548                     l2131:
  1453                           
  1454                           ;Contador1.c: 297:       A2 = 0;
  1455  0548  01CD               	clrf	main@A2^(0+128)
  1456  0549  01CE               	clrf	(main@A2+1)^(0+128)
  1457  054A                     l2133:
  1458                           
  1459                           ;Contador1.c: 298:       A1 = 0;
  1460  054A  01D1               	clrf	main@A1^(0+128)
  1461  054B  01D2               	clrf	(main@A1+1)^(0+128)
  1462  054C                     l2135:
  1463                           
  1464                           ;Contador1.c: 301:     if (PORTBbits.RB7 == 0 && A1 == 0 && A2 == 0) {
  1465  054C  0140               	movlb	0	; select bank0
  1466  054D  1B8D               	btfsc	13,7	;volatile
  1467  054E  2D50               	goto	u2111
  1468  054F  2D51               	goto	u2110
  1469  0550                     u2111:
  1470  0550  2D66               	goto	l2143
  1471  0551                     u2110:
  1472  0551                     l2137:
  1473  0551  0141               	movlb	1	; select bank1
  1474  0552  0851               	movf	main@A1^(0+128),w
  1475  0553  0452               	iorwf	(main@A1+1)^(0+128),w
  1476  0554  1D03               	btfss	3,2
  1477  0555  2D57               	goto	u2121
  1478  0556  2D58               	goto	u2120
  1479  0557                     u2121:
  1480  0557  2D66               	goto	l2143
  1481  0558                     u2120:
  1482  0558                     l2139:
  1483  0558  084D               	movf	main@A2^(0+128),w
  1484  0559  044E               	iorwf	(main@A2+1)^(0+128),w
  1485  055A  1D03               	btfss	3,2
  1486  055B  2D5D               	goto	u2131
  1487  055C  2D5E               	goto	u2130
  1488  055D                     u2131:
  1489  055D  2D66               	goto	l2143
  1490  055E                     u2130:
  1491  055E                     l2141:
  1492                           
  1493                           ;Contador1.c: 302:       A1 = 1;
  1494  055E  3001               	movlw	1
  1495  055F  00D1               	movwf	main@A1^(0+128)
  1496  0560  3000               	movlw	0
  1497  0561  00D2               	movwf	(main@A1^(0+128)+1)
  1498                           
  1499                           ;Contador1.c: 303:       A4 = 1;
  1500  0562  3001               	movlw	1
  1501  0563  00CF               	movwf	main@A4^(0+128)
  1502  0564  3000               	movlw	0
  1503  0565  00D0               	movwf	(main@A4^(0+128)+1)
  1504  0566                     l2143:
  1505                           
  1506                           ;Contador1.c: 305:     if (PORTBbits.RB5 == 0 && A1 == 1) {
  1507  0566  0140               	movlb	0	; select bank0
  1508  0567  1A8D               	btfsc	13,5	;volatile
  1509  0568  2D6A               	goto	u2141
  1510  0569  2D6B               	goto	u2140
  1511  056A                     u2141:
  1512  056A  2D76               	goto	l2149
  1513  056B                     u2140:
  1514  056B                     l2145:
  1515  056B  0141               	movlb	1	; select bank1
  1516  056C  0351               	decf	main@A1^(0+128),w
  1517  056D  0452               	iorwf	(main@A1+1)^(0+128),w
  1518  056E  1D03               	btfss	3,2
  1519  056F  2D71               	goto	u2151
  1520  0570  2D72               	goto	u2150
  1521  0571                     u2151:
  1522  0571  2D76               	goto	l2149
  1523  0572                     u2150:
  1524  0572                     l2147:
  1525                           
  1526                           ;Contador1.c: 306:       A2 = 1;
  1527  0572  3001               	movlw	1
  1528  0573  00CD               	movwf	main@A2^(0+128)
  1529  0574  3000               	movlw	0
  1530  0575  00CE               	movwf	(main@A2^(0+128)+1)
  1531  0576                     l2149:
  1532                           
  1533                           ;Contador1.c: 308:     if (PORTBbits.RB7 == 1 && PORTBbits.RB5 == 1 && A1 == 1 && A2 == 
      +                          1) {
  1534  0576  0140               	movlb	0	; select bank0
  1535  0577  1F8D               	btfss	13,7	;volatile
  1536  0578  2D7A               	goto	u2161
  1537  0579  2D7B               	goto	u2160
  1538  057A                     u2161:
  1539  057A  2C26               	goto	l2049
  1540  057B                     u2160:
  1541  057B                     l2151:
  1542  057B  1E8D               	btfss	13,5	;volatile
  1543  057C  2D7E               	goto	u2171
  1544  057D  2D7F               	goto	u2170
  1545  057E                     u2171:
  1546  057E  2C26               	goto	l2049
  1547  057F                     u2170:
  1548  057F                     l2153:
  1549  057F  0141               	movlb	1	; select bank1
  1550  0580  0351               	decf	main@A1^(0+128),w
  1551  0581  0452               	iorwf	(main@A1+1)^(0+128),w
  1552  0582  1D03               	btfss	3,2
  1553  0583  2D85               	goto	u2181
  1554  0584  2D86               	goto	u2180
  1555  0585                     u2181:
  1556  0585  2C26               	goto	l2049
  1557  0586                     u2180:
  1558  0586                     l2155:
  1559  0586  034D               	decf	main@A2^(0+128),w
  1560  0587  044E               	iorwf	(main@A2+1)^(0+128),w
  1561  0588  1D03               	btfss	3,2
  1562  0589  2D8B               	goto	u2191
  1563  058A  2D8C               	goto	u2190
  1564  058B                     u2191:
  1565  058B  2C26               	goto	l2049
  1566  058C                     u2190:
  1567  058C                     l2157:
  1568                           
  1569                           ;Contador1.c: 309:         if(contador==255){
  1570  058C  0A26               	incf	_contador^(0+128),w
  1571  058D  1D03               	btfss	3,2
  1572  058E  2D90               	goto	u2201
  1573  058F  2D91               	goto	u2200
  1574  0590                     u2201:
  1575  0590  2D98               	goto	l2161
  1576  0591                     u2200:
  1577  0591                     l2159:
  1578                           
  1579                           ;Contador1.c: 310:                       contador=255;
  1580  0591  30FF               	movlw	255
  1581  0592  0140               	movlb	0	; select bank0
  1582  0593  00EC               	movwf	??_main
  1583  0594  086C               	movf	??_main,w
  1584  0595  0141               	movlb	1	; select bank1
  1585  0596  00A6               	movwf	_contador^(0+128)
  1586                           
  1587                           ;Contador1.c: 311:                   }
  1588  0597  2D9E               	goto	l2163
  1589  0598                     l2161:
  1590                           
  1591                           ;Contador1.c: 313:                       contador++;
  1592  0598  3001               	movlw	1
  1593  0599  0140               	movlb	0	; select bank0
  1594  059A  00EC               	movwf	??_main
  1595  059B  086C               	movf	??_main,w
  1596  059C  0141               	movlb	1	; select bank1
  1597  059D  07A6               	addwf	_contador^(0+128),f
  1598  059E                     l2163:
  1599                           
  1600                           ;Contador1.c: 317:       Lcd_Cmd(1);
  1601  059E  3001               	movlw	1
  1602  059F  318E  2691  3184   	fcall	_Lcd_Cmd
  1603  05A2                     l2165:
  1604                           
  1605                           ;Contador1.c: 318:       Lcd_Cmd(14);
  1606  05A2  300E               	movlw	14
  1607  05A3  318E  2691  3184   	fcall	_Lcd_Cmd
  1608  05A6                     l2167:
  1609                           
  1610                           ;Contador1.c: 319:       sprintf(s, "contador    %d", contador);
  1611  05A6  3050               	movlw	low (STR_17| (0+32768))
  1612  05A7  0140               	movlb	0	; select bank0
  1613  05A8  00E6               	movwf	sprintf@fmt
  1614  05A9  3088               	movlw	high (STR_17| (0+32768))
  1615  05AA  00E7               	movwf	sprintf@fmt+1
  1616  05AB  0141               	movlb	1	; select bank1
  1617  05AC  0826               	movf	_contador^(0+128),w
  1618  05AD  0140               	movlb	0	; select bank0
  1619  05AE  00EC               	movwf	??_main
  1620  05AF  01ED               	clrf	??_main+1
  1621  05B0  086C               	movf	??_main,w
  1622  05B1  00E8               	movwf	?_sprintf+2
  1623  05B2  086D               	movf	??_main+1,w
  1624  05B3  00E9               	movwf	?_sprintf+3
  1625  05B4  30A7               	movlw	(low (_s| 0))& (0+255)
  1626  05B5  318C  2499  3184   	fcall	_sprintf
  1627  05B8                     l2169:
  1628                           
  1629                           ;Contador1.c: 320:       Lcd_Out2(1, 0, s);
  1630  05B8  01F3               	clrf	Lcd_Out2@x
  1631  05B9  30A7               	movlw	(low (_s| 0))& (0+255)
  1632  05BA  0140               	movlb	0	; select bank0
  1633  05BB  00EC               	movwf	??_main
  1634  05BC  086C               	movf	??_main,w
  1635  05BD  00F4               	movwf	Lcd_Out2@buffer
  1636  05BE  3001               	movlw	1
  1637  05BF  318D  2517  3184   	fcall	_Lcd_Out2
  1638  05C2                     l2171:
  1639                           
  1640                           ;Contador1.c: 321:       sprintf(s, "maximo   %d", maximo);
  1641  05C2  307B               	movlw	low (STR_16| (0+32768))
  1642  05C3  0140               	movlb	0	; select bank0
  1643  05C4  00E6               	movwf	sprintf@fmt
  1644  05C5  3088               	movlw	high (STR_16| (0+32768))
  1645  05C6  00E7               	movwf	sprintf@fmt+1
  1646  05C7  0141               	movlb	1	; select bank1
  1647  05C8  0855               	movf	_maximo^(0+128),w
  1648  05C9  0140               	movlb	0	; select bank0
  1649  05CA  00EC               	movwf	??_main
  1650  05CB  01ED               	clrf	??_main+1
  1651  05CC  086C               	movf	??_main,w
  1652  05CD  00E8               	movwf	?_sprintf+2
  1653  05CE  086D               	movf	??_main+1,w
  1654  05CF  00E9               	movwf	?_sprintf+3
  1655  05D0  30A7               	movlw	(low (_s| 0))& (0+255)
  1656  05D1  318C  2499  3184   	fcall	_sprintf
  1657  05D4                     l2173:
  1658                           
  1659                           ;Contador1.c: 322:       Lcd_Out2(2, 0, s);
  1660  05D4  01F3               	clrf	Lcd_Out2@x
  1661  05D5  30A7               	movlw	(low (_s| 0))& (0+255)
  1662  05D6  0140               	movlb	0	; select bank0
  1663  05D7  00EC               	movwf	??_main
  1664  05D8  086C               	movf	??_main,w
  1665  05D9  00F4               	movwf	Lcd_Out2@buffer
  1666  05DA  3002               	movlw	2
  1667  05DB  318D  2517  3184   	fcall	_Lcd_Out2
  1668  05DE                     l2175:
  1669                           
  1670                           ;Contador1.c: 324:       A1 = 0;
  1671  05DE  0141               	movlb	1	; select bank1
  1672  05DF  01D1               	clrf	main@A1^(0+128)
  1673  05E0  01D2               	clrf	(main@A1+1)^(0+128)
  1674  05E1                     l2177:
  1675                           
  1676                           ;Contador1.c: 325:       A2 = 0;
  1677  05E1  01CD               	clrf	main@A2^(0+128)
  1678  05E2  01CE               	clrf	(main@A2+1)^(0+128)
  1679  05E3                     l2179:
  1680                           
  1681                           ;Contador1.c: 326:       A4 = 0;
  1682  05E3  01CF               	clrf	main@A4^(0+128)
  1683  05E4  01D0               	clrf	(main@A4+1)^(0+128)
  1684  05E5                     l2181:
  1685                           
  1686                           ;Contador1.c: 327:       A3 = 0;
  1687  05E5  01D3               	clrf	main@A3^(0+128)
  1688  05E6  01D4               	clrf	(main@A3+1)^(0+128)
  1689  05E7  2C26               	goto	l2049
  1690  05E8  3180  2802         	ljmp	start
  1691  05EA                     __end_of_main:
  1692                           
  1693                           	psect	text1
  1694  05EA                     __ptext1:	
  1695 ;; *************** function _cambio *****************
  1696 ;; Defined at:
  1697 ;;		line 107 in file "Contador1.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  variable        3    9[BANK1 ] unsigned um
  1702 ;;  ok              2   13[BANK1 ] int 
  1703 ;;  operacion       1   12[BANK1 ] _Bool 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1713 ;;      Params:         0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       6       0       0       0       0       0
  1715 ;;      Temps:          0       2       0       0       0       0       0       0
  1716 ;;      Totals:         0       2       6       0       0       0       0       0
  1717 ;;Total ram usage:        8 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    8
  1720 ;; This function calls:
  1721 ;;		_Lcd_Cmd
  1722 ;;		_Lcd_Out2
  1723 ;;		_sprintf
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _cambio
  1731  05EA                     _cambio:
  1732  05EA                     l1889:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _cambio: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1735                           
  1736                           
  1737                           ;Contador1.c: 109:   uint24_t variable = 0;
  1738  05EA  3000               	movlw	0
  1739  05EB  0141               	movlb	1	; select bank1
  1740  05EC  00C4               	movwf	cambio@variable^(0+128)
  1741  05ED  3000               	movlw	0
  1742  05EE  00C5               	movwf	(cambio@variable+1)^(0+128)
  1743  05EF  3000               	movlw	0
  1744  05F0  00C6               	movwf	(cambio@variable+2)^(0+128)
  1745  05F1                     l1891:
  1746                           
  1747                           ;Contador1.c: 110:   _Bool operacion = 0;
  1748  05F1  01C7               	clrf	cambio@operacion^(0+128)
  1749  05F2                     l1893:
  1750                           
  1751                           ;Contador1.c: 111:   int ok = 0;
  1752  05F2  01C8               	clrf	cambio@ok^(0+128)
  1753  05F3  01C9               	clrf	(cambio@ok+1)^(0+128)
  1754  05F4                     l1895:
  1755                           
  1756                           ;Contador1.c: 115:     if (PORTAbits.RA4 == 0) {
  1757  05F4  0140               	movlb	0	; select bank0
  1758  05F5  1A0C               	btfsc	12,4	;volatile
  1759  05F6  2DF8               	goto	u1781
  1760  05F7  2DF9               	goto	u1780
  1761  05F8                     u1781:
  1762  05F8  2FAB               	goto	l112
  1763  05F9                     u1780:
  1764  05F9                     l1897:
  1765                           
  1766                           ;Contador1.c: 116:       _delay((unsigned long)((1000)*(1000000/4000.0)));
  1767  05F9  3002               	movlw	2
  1768  05FA  0140               	movlb	0	; select bank0
  1769  05FB  00EB               	movwf	??_cambio+1
  1770  05FC  3045               	movlw	69
  1771  05FD  00EA               	movwf	??_cambio
  1772  05FE  30A9               	movlw	169
  1773  05FF                     u2227:
  1774  05FF  0B89               	decfsz	9,f
  1775  0600  2DFF               	goto	u2227
  1776  0601  0BEA               	decfsz	??_cambio,f
  1777  0602  2DFF               	goto	u2227
  1778  0603  0BEB               	decfsz	??_cambio+1,f
  1779  0604  2DFF               	goto	u2227
  1780  0605  3200               	nop2
  1781  0606                     l1899:
  1782                           
  1783                           ;Contador1.c: 118:       if (PORTAbits.RA4 != 0) {
  1784  0606  0140               	movlb	0	; select bank0
  1785  0607  1E0C               	btfss	12,4	;volatile
  1786  0608  2E0A               	goto	u1791
  1787  0609  2E0B               	goto	u1790
  1788  060A                     u1791:
  1789  060A  2FAB               	goto	l112
  1790  060B                     u1790:
  1791  060B                     l1901:
  1792                           
  1793                           ;Contador1.c: 119:         operacion = !operacion;
  1794  060B  0141               	movlb	1	; select bank1
  1795  060C  0847               	movf	cambio@operacion^(0+128),w
  1796  060D  1903               	btfsc	3,2
  1797  060E  2E10               	goto	u1801
  1798  060F  2E12               	goto	u1800
  1799  0610                     u1801:
  1800  0610  3001               	movlw	1
  1801  0611  2E13               	goto	u1810
  1802  0612                     u1800:
  1803  0612  3000               	movlw	0
  1804  0613                     u1810:
  1805  0613  0140               	movlb	0	; select bank0
  1806  0614  00EA               	movwf	??_cambio
  1807  0615  086A               	movf	??_cambio,w
  1808  0616  0141               	movlb	1	; select bank1
  1809  0617  00C7               	movwf	cambio@operacion^(0+128)
  1810                           
  1811                           ;Contador1.c: 121:         if (operacion) {
  1812  0618  0847               	movf	cambio@operacion^(0+128),w
  1813  0619  1903               	btfsc	3,2
  1814  061A  2E1C               	goto	u1821
  1815  061B  2E1D               	goto	u1820
  1816  061C                     u1821:
  1817  061C  2E48               	goto	l1913
  1818  061D                     u1820:
  1819  061D                     l1903:
  1820                           
  1821                           ;Contador1.c: 122:           Lcd_Cmd(1);
  1822  061D  3001               	movlw	1
  1823  061E  318E  2691  3185   	fcall	_Lcd_Cmd
  1824  0621                     l1905:
  1825                           
  1826                           ;Contador1.c: 123:           sprintf(s, "Configuracion");
  1827  0621  306D               	movlw	low (STR_1| (0+32768))
  1828  0622  0140               	movlb	0	; select bank0
  1829  0623  00E6               	movwf	sprintf@fmt
  1830  0624  3088               	movlw	high (STR_1| (0+32768))
  1831  0625  00E7               	movwf	sprintf@fmt+1
  1832  0626  30A7               	movlw	(low (_s| 0))& (0+255)
  1833  0627  318C  2499  3185   	fcall	_sprintf
  1834  062A                     l1907:
  1835                           
  1836                           ;Contador1.c: 124:           Lcd_Out2(1, 0, s);
  1837  062A  01F3               	clrf	Lcd_Out2@x
  1838  062B  30A7               	movlw	(low (_s| 0))& (0+255)
  1839  062C  0140               	movlb	0	; select bank0
  1840  062D  00EA               	movwf	??_cambio
  1841  062E  086A               	movf	??_cambio,w
  1842  062F  00F4               	movwf	Lcd_Out2@buffer
  1843  0630  3001               	movlw	1
  1844  0631  318D  2517  3185   	fcall	_Lcd_Out2
  1845  0634                     l1909:
  1846                           
  1847                           ;Contador1.c: 125:           sprintf(s, "Operacion: Suma");
  1848  0634  3022               	movlw	low (STR_2| (0+32768))
  1849  0635  0140               	movlb	0	; select bank0
  1850  0636  00E6               	movwf	sprintf@fmt
  1851  0637  3088               	movlw	high (STR_2| (0+32768))
  1852  0638  00E7               	movwf	sprintf@fmt+1
  1853  0639  30A7               	movlw	(low (_s| 0))& (0+255)
  1854  063A  318C  2499  3185   	fcall	_sprintf
  1855  063D                     l1911:
  1856                           
  1857                           ;Contador1.c: 126:           Lcd_Out2(2, 0, s);
  1858  063D  01F3               	clrf	Lcd_Out2@x
  1859  063E  30A7               	movlw	(low (_s| 0))& (0+255)
  1860  063F  0140               	movlb	0	; select bank0
  1861  0640  00EA               	movwf	??_cambio
  1862  0641  086A               	movf	??_cambio,w
  1863  0642  00F4               	movwf	Lcd_Out2@buffer
  1864  0643  3002               	movlw	2
  1865  0644  318D  2517  3185   	fcall	_Lcd_Out2
  1866                           
  1867                           ;Contador1.c: 127:         } else {
  1868  0647  2FAB               	goto	l112
  1869  0648                     l1913:
  1870                           
  1871                           ;Contador1.c: 128:           Lcd_Cmd(1);
  1872  0648  3001               	movlw	1
  1873  0649  318E  2691  3185   	fcall	_Lcd_Cmd
  1874  064C                     l1915:
  1875                           
  1876                           ;Contador1.c: 129:           sprintf(s, "Configuracion");
  1877  064C  306D               	movlw	low (STR_1| (0+32768))
  1878  064D  0140               	movlb	0	; select bank0
  1879  064E  00E6               	movwf	sprintf@fmt
  1880  064F  3088               	movlw	high (STR_1| (0+32768))
  1881  0650  00E7               	movwf	sprintf@fmt+1
  1882  0651  30A7               	movlw	(low (_s| 0))& (0+255)
  1883  0652  318C  2499  3185   	fcall	_sprintf
  1884  0655                     l1917:
  1885                           
  1886                           ;Contador1.c: 130:           Lcd_Out2(1, 0, s);
  1887  0655  01F3               	clrf	Lcd_Out2@x
  1888  0656  30A7               	movlw	(low (_s| 0))& (0+255)
  1889  0657  0140               	movlb	0	; select bank0
  1890  0658  00EA               	movwf	??_cambio
  1891  0659  086A               	movf	??_cambio,w
  1892  065A  00F4               	movwf	Lcd_Out2@buffer
  1893  065B  3001               	movlw	1
  1894  065C  318D  2517  3185   	fcall	_Lcd_Out2
  1895  065F                     l1919:
  1896                           
  1897                           ;Contador1.c: 131:           sprintf(s, "Operacion: Resta");
  1898  065F  3011               	movlw	low (STR_4| (0+32768))
  1899  0660  0140               	movlb	0	; select bank0
  1900  0661  00E6               	movwf	sprintf@fmt
  1901  0662  3088               	movlw	high (STR_4| (0+32768))
  1902  0663  00E7               	movwf	sprintf@fmt+1
  1903  0664  30A7               	movlw	(low (_s| 0))& (0+255)
  1904  0665  318C  2499  3185   	fcall	_sprintf
  1905  0668                     l1921:
  1906                           
  1907                           ;Contador1.c: 132:           Lcd_Out2(2, 0, s);
  1908  0668  01F3               	clrf	Lcd_Out2@x
  1909  0669  30A7               	movlw	(low (_s| 0))& (0+255)
  1910  066A  0140               	movlb	0	; select bank0
  1911  066B  00EA               	movwf	??_cambio
  1912  066C  086A               	movf	??_cambio,w
  1913  066D  00F4               	movwf	Lcd_Out2@buffer
  1914  066E  3002               	movlw	2
  1915  066F  318D  2517  3185   	fcall	_Lcd_Out2
  1916  0672  2FAB               	goto	l112
  1917  0673                     l1923:
  1918                           
  1919                           ;Contador1.c: 139:       variable++;
  1920  0673  3001               	movlw	1
  1921  0674  0141               	movlb	1	; select bank1
  1922  0675  07C4               	addwf	cambio@variable^(0+128),f
  1923  0676  3000               	movlw	0
  1924  0677  1803               	skipnc
  1925  0678  3001               	movlw	1
  1926  0679  07C5               	addwf	(cambio@variable+1)^(0+128),f
  1927  067A  3000               	movlw	0
  1928  067B  1803               	skipnc
  1929  067C  3001               	movlw	1
  1930  067D  07C6               	addwf	(cambio@variable+2)^(0+128),f
  1931  067E                     l1925:
  1932                           
  1933                           ;Contador1.c: 141:       if (variable == 27174) {
  1934  067E  3026               	movlw	38
  1935  067F  0644               	xorwf	cambio@variable^(0+128),w
  1936  0680  306A               	movlw	106
  1937  0681  1903               	skipnz
  1938  0682  0645               	xorwf	(cambio@variable+1)^(0+128),w
  1939  0683  0446               	iorwf	(cambio@variable+2)^(0+128),w
  1940  0684  1D03               	btfss	3,2
  1941  0685  2E87               	goto	u1831
  1942  0686  2E88               	goto	u1830
  1943  0687                     u1831:
  1944  0687  2F9F               	goto	l1995
  1945  0688                     u1830:
  1946  0688                     l1927:
  1947                           
  1948                           ;Contador1.c: 142:         variable = 0;
  1949  0688  3000               	movlw	0
  1950  0689  00C4               	movwf	cambio@variable^(0+128)
  1951  068A  3000               	movlw	0
  1952  068B  00C5               	movwf	(cambio@variable+1)^(0+128)
  1953  068C  3000               	movlw	0
  1954  068D  00C6               	movwf	(cambio@variable+2)^(0+128)
  1955  068E                     l1929:
  1956                           
  1957                           ;Contador1.c: 143:         Lcd_Cmd(1);
  1958  068E  3001               	movlw	1
  1959  068F  318E  2691  3185   	fcall	_Lcd_Cmd
  1960  0692                     l1931:
  1961                           
  1962                           ;Contador1.c: 144:         sprintf(s, "Establezca el ");
  1963  0692  3032               	movlw	low (STR_5| (0+32768))
  1964  0693  0140               	movlb	0	; select bank0
  1965  0694  00E6               	movwf	sprintf@fmt
  1966  0695  3088               	movlw	high (STR_5| (0+32768))
  1967  0696  00E7               	movwf	sprintf@fmt+1
  1968  0697  30A7               	movlw	(low (_s| 0))& (0+255)
  1969  0698  318C  2499  3185   	fcall	_sprintf
  1970  069B                     l1933:
  1971                           
  1972                           ;Contador1.c: 145:         Lcd_Out2(1, 0, s);
  1973  069B  01F3               	clrf	Lcd_Out2@x
  1974  069C  30A7               	movlw	(low (_s| 0))& (0+255)
  1975  069D  0140               	movlb	0	; select bank0
  1976  069E  00EA               	movwf	??_cambio
  1977  069F  086A               	movf	??_cambio,w
  1978  06A0  00F4               	movwf	Lcd_Out2@buffer
  1979  06A1  3001               	movlw	1
  1980  06A2  318D  2517  3185   	fcall	_Lcd_Out2
  1981  06A5                     l1935:
  1982                           
  1983                           ;Contador1.c: 146:         sprintf(s, "limite de aforo ");
  1984  06A5  3000               	movlw	low (STR_6| (0+32768))
  1985  06A6  0140               	movlb	0	; select bank0
  1986  06A7  00E6               	movwf	sprintf@fmt
  1987  06A8  3088               	movlw	high (STR_6| (0+32768))
  1988  06A9  00E7               	movwf	sprintf@fmt+1
  1989  06AA  30A7               	movlw	(low (_s| 0))& (0+255)
  1990  06AB  318C  2499  3185   	fcall	_sprintf
  1991  06AE                     l1937:
  1992                           
  1993                           ;Contador1.c: 147:         Lcd_Out2(2, 0, s);
  1994  06AE  01F3               	clrf	Lcd_Out2@x
  1995  06AF  30A7               	movlw	(low (_s| 0))& (0+255)
  1996  06B0  0140               	movlb	0	; select bank0
  1997  06B1  00EA               	movwf	??_cambio
  1998  06B2  086A               	movf	??_cambio,w
  1999  06B3  00F4               	movwf	Lcd_Out2@buffer
  2000  06B4  3002               	movlw	2
  2001  06B5  318D  2517  3185   	fcall	_Lcd_Out2
  2002  06B8                     l1939:
  2003                           
  2004                           ;Contador1.c: 148:        _delay((unsigned long)((2000)*(1000000/4000.0)));
  2005  06B8  3003               	movlw	3
  2006  06B9  0140               	movlb	0	; select bank0
  2007  06BA  00EB               	movwf	??_cambio+1
  2008  06BB  308A               	movlw	138
  2009  06BC  00EA               	movwf	??_cambio
  2010  06BD  3055               	movlw	85
  2011  06BE                     u2237:
  2012  06BE  0B89               	decfsz	9,f
  2013  06BF  2EBE               	goto	u2237
  2014  06C0  0BEA               	decfsz	??_cambio,f
  2015  06C1  2EBE               	goto	u2237
  2016  06C2  0BEB               	decfsz	??_cambio+1,f
  2017  06C3  2EBE               	goto	u2237
  2018  06C4  3200               	nop2
  2019  06C5                     l1941:
  2020                           
  2021                           ;Contador1.c: 152:           if (PORTAbits.RA4 == 0) {
  2022  06C5  0140               	movlb	0	; select bank0
  2023  06C6  1A0C               	btfsc	12,4	;volatile
  2024  06C7  2EC9               	goto	u1841
  2025  06C8  2ECA               	goto	u1840
  2026  06C9                     u1841:
  2027  06C9  2F89               	goto	l124
  2028  06CA                     u1840:
  2029  06CA                     l1943:
  2030                           
  2031                           ;Contador1.c: 153:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  2032  06CA  3002               	movlw	2
  2033  06CB  0140               	movlb	0	; select bank0
  2034  06CC  00EB               	movwf	??_cambio+1
  2035  06CD  3045               	movlw	69
  2036  06CE  00EA               	movwf	??_cambio
  2037  06CF  30A9               	movlw	169
  2038  06D0                     u2247:
  2039  06D0  0B89               	decfsz	9,f
  2040  06D1  2ED0               	goto	u2247
  2041  06D2  0BEA               	decfsz	??_cambio,f
  2042  06D3  2ED0               	goto	u2247
  2043  06D4  0BEB               	decfsz	??_cambio+1,f
  2044  06D5  2ED0               	goto	u2247
  2045  06D6  3200               	nop2
  2046  06D7                     l1945:
  2047                           
  2048                           ;Contador1.c: 154:             if (PORTAbits.RA4 != 0) {
  2049  06D7  0140               	movlb	0	; select bank0
  2050  06D8  1E0C               	btfss	12,4	;volatile
  2051  06D9  2EDB               	goto	u1851
  2052  06DA  2EDC               	goto	u1850
  2053  06DB                     u1851:
  2054  06DB  2F89               	goto	l124
  2055  06DC                     u1850:
  2056  06DC                     l1947:
  2057                           
  2058                           ;Contador1.c: 155:               if (operacion == 1) {
  2059  06DC  0141               	movlb	1	; select bank1
  2060  06DD  0347               	decf	cambio@operacion^(0+128),w
  2061  06DE  1D03               	btfss	3,2
  2062  06DF  2EE1               	goto	u1861
  2063  06E0  2EE2               	goto	u1860
  2064  06E1                     u1861:
  2065  06E1  2F29               	goto	l1965
  2066  06E2                     u1860:
  2067  06E2                     l1949:
  2068                           
  2069                           ;Contador1.c: 156:                   if(maximo==255){
  2070  06E2  0A55               	incf	_maximo^(0+128),w
  2071  06E3  1D03               	btfss	3,2
  2072  06E4  2EE6               	goto	u1871
  2073  06E5  2EE7               	goto	u1870
  2074  06E6                     u1871:
  2075  06E6  2EEE               	goto	l1953
  2076  06E7                     u1870:
  2077  06E7                     l1951:
  2078                           
  2079                           ;Contador1.c: 157:                       maximo=255;
  2080  06E7  30FF               	movlw	255
  2081  06E8  0140               	movlb	0	; select bank0
  2082  06E9  00EA               	movwf	??_cambio
  2083  06EA  086A               	movf	??_cambio,w
  2084  06EB  0141               	movlb	1	; select bank1
  2085  06EC  00D5               	movwf	_maximo^(0+128)
  2086                           
  2087                           ;Contador1.c: 158:                   }
  2088  06ED  2EF5               	goto	l1955
  2089  06EE                     l1953:
  2090                           
  2091                           ;Contador1.c: 160:                       maximo=maximo+10;
  2092  06EE  0855               	movf	_maximo^(0+128),w
  2093  06EF  3E0A               	addlw	10
  2094  06F0  0140               	movlb	0	; select bank0
  2095  06F1  00EA               	movwf	??_cambio
  2096  06F2  086A               	movf	??_cambio,w
  2097  06F3  0141               	movlb	1	; select bank1
  2098  06F4  00D5               	movwf	_maximo^(0+128)
  2099  06F5                     l1955:
  2100                           
  2101                           ;Contador1.c: 163:                 Lcd_Cmd(1);
  2102  06F5  3001               	movlw	1
  2103  06F6  318E  2691  3185   	fcall	_Lcd_Cmd
  2104  06F9                     l1957:
  2105                           
  2106                           ;Contador1.c: 164:                 sprintf(s, "Configuracion");
  2107  06F9  306D               	movlw	low (STR_1| (0+32768))
  2108  06FA  0140               	movlb	0	; select bank0
  2109  06FB  00E6               	movwf	sprintf@fmt
  2110  06FC  3088               	movlw	high (STR_1| (0+32768))
  2111  06FD  00E7               	movwf	sprintf@fmt+1
  2112  06FE  30A7               	movlw	(low (_s| 0))& (0+255)
  2113  06FF  318C  2499  3185   	fcall	_sprintf
  2114  0702                     l1959:
  2115                           
  2116                           ;Contador1.c: 165:                 Lcd_Out2(1, 0, s);
  2117  0702  01F3               	clrf	Lcd_Out2@x
  2118  0703  30A7               	movlw	(low (_s| 0))& (0+255)
  2119  0704  0140               	movlb	0	; select bank0
  2120  0705  00EA               	movwf	??_cambio
  2121  0706  086A               	movf	??_cambio,w
  2122  0707  00F4               	movwf	Lcd_Out2@buffer
  2123  0708  3001               	movlw	1
  2124  0709  318D  2517  3185   	fcall	_Lcd_Out2
  2125  070C                     l1961:
  2126                           
  2127                           ;Contador1.c: 166:                 sprintf(s, "Maximo: %d", maximo);
  2128  070C  3093               	movlw	low (STR_8| (0+32768))
  2129  070D  0140               	movlb	0	; select bank0
  2130  070E  00E6               	movwf	sprintf@fmt
  2131  070F  3088               	movlw	high (STR_8| (0+32768))
  2132  0710  00E7               	movwf	sprintf@fmt+1
  2133  0711  0141               	movlb	1	; select bank1
  2134  0712  0855               	movf	_maximo^(0+128),w
  2135  0713  0140               	movlb	0	; select bank0
  2136  0714  00EA               	movwf	??_cambio
  2137  0715  01EB               	clrf	??_cambio+1
  2138  0716  086A               	movf	??_cambio,w
  2139  0717  00E8               	movwf	?_sprintf+2
  2140  0718  086B               	movf	??_cambio+1,w
  2141  0719  00E9               	movwf	?_sprintf+3
  2142  071A  30A7               	movlw	(low (_s| 0))& (0+255)
  2143  071B  318C  2499  3185   	fcall	_sprintf
  2144  071E                     l1963:
  2145                           
  2146                           ;Contador1.c: 167:                 Lcd_Out2(2, 0, s);
  2147  071E  01F3               	clrf	Lcd_Out2@x
  2148  071F  30A7               	movlw	(low (_s| 0))& (0+255)
  2149  0720  0140               	movlb	0	; select bank0
  2150  0721  00EA               	movwf	??_cambio
  2151  0722  086A               	movf	??_cambio,w
  2152  0723  00F4               	movwf	Lcd_Out2@buffer
  2153  0724  3002               	movlw	2
  2154  0725  318D  2517  3185   	fcall	_Lcd_Out2
  2155                           
  2156                           ;Contador1.c: 169:               } else {
  2157  0728  2F89               	goto	l124
  2158  0729                     l1965:
  2159                           
  2160                           ;Contador1.c: 170:                 if (maximo == 0) {
  2161  0729  0855               	movf	_maximo^(0+128),w
  2162  072A  1D03               	btfss	3,2
  2163  072B  2F2D               	goto	u1881
  2164  072C  2F2E               	goto	u1880
  2165  072D                     u1881:
  2166  072D  2F30               	goto	l1969
  2167  072E                     u1880:
  2168  072E                     l1967:
  2169                           
  2170                           ;Contador1.c: 171:                   maximo = 0;
  2171  072E  01D5               	clrf	_maximo^(0+128)
  2172                           
  2173                           ;Contador1.c: 172:                 } else {
  2174  072F  2F37               	goto	l1971
  2175  0730                     l1969:
  2176                           
  2177                           ;Contador1.c: 173:                   maximo = maximo - 10;
  2178  0730  0855               	movf	_maximo^(0+128),w
  2179  0731  3EF6               	addlw	246
  2180  0732  0140               	movlb	0	; select bank0
  2181  0733  00EA               	movwf	??_cambio
  2182  0734  086A               	movf	??_cambio,w
  2183  0735  0141               	movlb	1	; select bank1
  2184  0736  00D5               	movwf	_maximo^(0+128)
  2185  0737                     l1971:
  2186                           
  2187                           ;Contador1.c: 177:                 Lcd_Cmd(1);
  2188  0737  3001               	movlw	1
  2189  0738  318E  2691  3185   	fcall	_Lcd_Cmd
  2190  073B                     l1973:
  2191                           
  2192                           ;Contador1.c: 178:                  sprintf(s, "Configuracion");
  2193  073B  306D               	movlw	low (STR_1| (0+32768))
  2194  073C  0140               	movlb	0	; select bank0
  2195  073D  00E6               	movwf	sprintf@fmt
  2196  073E  3088               	movlw	high (STR_1| (0+32768))
  2197  073F  00E7               	movwf	sprintf@fmt+1
  2198  0740  30A7               	movlw	(low (_s| 0))& (0+255)
  2199  0741  318C  2499  3185   	fcall	_sprintf
  2200  0744                     l1975:
  2201                           
  2202                           ;Contador1.c: 179:                 Lcd_Out2(1, 0, s);
  2203  0744  01F3               	clrf	Lcd_Out2@x
  2204  0745  30A7               	movlw	(low (_s| 0))& (0+255)
  2205  0746  0140               	movlb	0	; select bank0
  2206  0747  00EA               	movwf	??_cambio
  2207  0748  086A               	movf	??_cambio,w
  2208  0749  00F4               	movwf	Lcd_Out2@buffer
  2209  074A  3001               	movlw	1
  2210  074B  318D  2517  3185   	fcall	_Lcd_Out2
  2211  074E                     l1977:
  2212                           
  2213                           ;Contador1.c: 180:                 sprintf(s, "Maximo: %d", maximo);
  2214  074E  3093               	movlw	low (STR_8| (0+32768))
  2215  074F  0140               	movlb	0	; select bank0
  2216  0750  00E6               	movwf	sprintf@fmt
  2217  0751  3088               	movlw	high (STR_8| (0+32768))
  2218  0752  00E7               	movwf	sprintf@fmt+1
  2219  0753  0141               	movlb	1	; select bank1
  2220  0754  0855               	movf	_maximo^(0+128),w
  2221  0755  0140               	movlb	0	; select bank0
  2222  0756  00EA               	movwf	??_cambio
  2223  0757  01EB               	clrf	??_cambio+1
  2224  0758  086A               	movf	??_cambio,w
  2225  0759  00E8               	movwf	?_sprintf+2
  2226  075A  086B               	movf	??_cambio+1,w
  2227  075B  00E9               	movwf	?_sprintf+3
  2228  075C  30A7               	movlw	(low (_s| 0))& (0+255)
  2229  075D  318C  2499  3185   	fcall	_sprintf
  2230  0760                     l1979:
  2231                           
  2232                           ;Contador1.c: 181:                 Lcd_Out2(2, 0, s);
  2233  0760  01F3               	clrf	Lcd_Out2@x
  2234  0761  30A7               	movlw	(low (_s| 0))& (0+255)
  2235  0762  0140               	movlb	0	; select bank0
  2236  0763  00EA               	movwf	??_cambio
  2237  0764  086A               	movf	??_cambio,w
  2238  0765  00F4               	movwf	Lcd_Out2@buffer
  2239  0766  3002               	movlw	2
  2240  0767  318D  2517  3185   	fcall	_Lcd_Out2
  2241  076A  2F89               	goto	l124
  2242  076B                     l1981:
  2243                           
  2244                           ;Contador1.c: 187:             variable++;
  2245  076B  3001               	movlw	1
  2246  076C  0141               	movlb	1	; select bank1
  2247  076D  07C4               	addwf	cambio@variable^(0+128),f
  2248  076E  3000               	movlw	0
  2249  076F  1803               	skipnc
  2250  0770  3001               	movlw	1
  2251  0771  07C5               	addwf	(cambio@variable+1)^(0+128),f
  2252  0772  3000               	movlw	0
  2253  0773  1803               	skipnc
  2254  0774  3001               	movlw	1
  2255  0775  07C6               	addwf	(cambio@variable+2)^(0+128),f
  2256  0776                     l1983:
  2257                           
  2258                           ;Contador1.c: 188:             if (variable == 44643) {
  2259  0776  3063               	movlw	99
  2260  0777  0644               	xorwf	cambio@variable^(0+128),w
  2261  0778  30AE               	movlw	174
  2262  0779  1903               	skipnz
  2263  077A  0645               	xorwf	(cambio@variable+1)^(0+128),w
  2264  077B  0446               	iorwf	(cambio@variable+2)^(0+128),w
  2265  077C  1D03               	btfss	3,2
  2266  077D  2F7F               	goto	u1891
  2267  077E  2F80               	goto	u1890
  2268  077F                     u1891:
  2269  077F  2F89               	goto	l124
  2270  0780                     u1890:
  2271  0780                     l1985:
  2272                           
  2273                           ;Contador1.c: 191:               ok = 1;
  2274  0780  3001               	movlw	1
  2275  0781  00C8               	movwf	cambio@ok^(0+128)
  2276  0782  3000               	movlw	0
  2277  0783  00C9               	movwf	(cambio@ok^(0+128)+1)
  2278  0784                     l1987:
  2279                           
  2280                           ;Contador1.c: 192:                Lcd_Cmd(1);
  2281  0784  3001               	movlw	1
  2282  0785  318E  2691  3185   	fcall	_Lcd_Cmd
  2283                           
  2284                           ;Contador1.c: 195:               break;
  2285  0788  2F8E               	goto	l1989
  2286  0789                     l124:	
  2287                           ;Contador1.c: 198:           }
  2288                           
  2289                           
  2290                           ;Contador1.c: 186:           while (PORTAbits.RA4 == 0) {
  2291  0789  0140               	movlb	0	; select bank0
  2292  078A  1E0C               	btfss	12,4	;volatile
  2293  078B  2F8D               	goto	u1901
  2294  078C  2F8E               	goto	u1900
  2295  078D                     u1901:
  2296  078D  2F6B               	goto	l1981
  2297  078E                     u1900:
  2298  078E                     l1989:
  2299                           
  2300                           ;Contador1.c: 199:           variable=0;
  2301  078E  3000               	movlw	0
  2302  078F  0141               	movlb	1	; select bank1
  2303  0790  00C4               	movwf	cambio@variable^(0+128)
  2304  0791  3000               	movlw	0
  2305  0792  00C5               	movwf	(cambio@variable+1)^(0+128)
  2306  0793  3000               	movlw	0
  2307  0794  00C6               	movwf	(cambio@variable+2)^(0+128)
  2308  0795                     l1991:
  2309                           
  2310                           ;Contador1.c: 200:           if (ok == 1) {
  2311  0795  0348               	decf	cambio@ok^(0+128),w
  2312  0796  0449               	iorwf	(cambio@ok+1)^(0+128),w
  2313  0797  1D03               	btfss	3,2
  2314  0798  2F9A               	goto	u1911
  2315  0799  2F9B               	goto	u1910
  2316  079A                     u1911:
  2317  079A  2EC5               	goto	l1941
  2318  079B                     u1910:
  2319  079B                     l1993:
  2320                           
  2321                           ;Contador1.c: 201:             ok = 2;
  2322  079B  3002               	movlw	2
  2323  079C  00C8               	movwf	cambio@ok^(0+128)
  2324  079D  3000               	movlw	0
  2325  079E  00C9               	movwf	(cambio@ok^(0+128)+1)
  2326  079F                     l1995:	
  2327                           ;Contador1.c: 202:             break;
  2328                           
  2329                           
  2330                           ;Contador1.c: 206:       if (ok == 2) {
  2331  079F  3002               	movlw	2
  2332  07A0  0648               	xorwf	cambio@ok^(0+128),w
  2333  07A1  0449               	iorwf	(cambio@ok+1)^(0+128),w
  2334  07A2  1D03               	btfss	3,2
  2335  07A3  2FA5               	goto	u1921
  2336  07A4  2FA6               	goto	u1920
  2337  07A5                     u1921:
  2338  07A5  2FAB               	goto	l112
  2339  07A6                     u1920:
  2340  07A6                     l1997:
  2341                           
  2342                           ;Contador1.c: 207:         ok = 3;
  2343  07A6  3003               	movlw	3
  2344  07A7  00C8               	movwf	cambio@ok^(0+128)
  2345  07A8  3000               	movlw	0
  2346  07A9  00C9               	movwf	(cambio@ok^(0+128)+1)
  2347                           
  2348                           ;Contador1.c: 208:         break;
  2349  07AA  2FB0               	goto	l1999
  2350  07AB                     l112:	
  2351                           ;Contador1.c: 210:     }
  2352                           
  2353                           
  2354                           ;Contador1.c: 138:     while (PORTAbits.RA4 == 0) {
  2355  07AB  0140               	movlb	0	; select bank0
  2356  07AC  1E0C               	btfss	12,4	;volatile
  2357  07AD  2FAF               	goto	u1931
  2358  07AE  2FB0               	goto	u1930
  2359  07AF                     u1931:
  2360  07AF  2E73               	goto	l1923
  2361  07B0                     u1930:
  2362  07B0                     l1999:
  2363                           
  2364                           ;Contador1.c: 211:     variable = 0;
  2365  07B0  3000               	movlw	0
  2366  07B1  0141               	movlb	1	; select bank1
  2367  07B2  00C4               	movwf	cambio@variable^(0+128)
  2368  07B3  3000               	movlw	0
  2369  07B4  00C5               	movwf	(cambio@variable+1)^(0+128)
  2370  07B5  3000               	movlw	0
  2371  07B6  00C6               	movwf	(cambio@variable+2)^(0+128)
  2372  07B7                     l2001:
  2373                           
  2374                           ;Contador1.c: 212:     if (ok == 3) {
  2375  07B7  3003               	movlw	3
  2376  07B8  0648               	xorwf	cambio@ok^(0+128),w
  2377  07B9  0449               	iorwf	(cambio@ok+1)^(0+128),w
  2378  07BA  1D03               	btfss	3,2
  2379  07BB  2FBD               	goto	u1941
  2380  07BC  2FBE               	goto	u1940
  2381  07BD                     u1941:
  2382  07BD  2DF4               	goto	l1895
  2383  07BE                     u1940:
  2384  07BE                     l2003:
  2385  07BE                     l2005:
  2386                           
  2387                           ;Contador1.c: 214:       Lcd_Cmd(1);
  2388  07BE  3001               	movlw	1
  2389  07BF  318E  2691  3185   	fcall	_Lcd_Cmd
  2390  07C2                     l2007:
  2391                           
  2392                           ;Contador1.c: 215:       sprintf(s, "Modo contador ");
  2393  07C2  3041               	movlw	low (STR_11| (0+32768))
  2394  07C3  0140               	movlb	0	; select bank0
  2395  07C4  00E6               	movwf	sprintf@fmt
  2396  07C5  3088               	movlw	high (STR_11| (0+32768))
  2397  07C6  00E7               	movwf	sprintf@fmt+1
  2398  07C7  30A7               	movlw	(low (_s| 0))& (0+255)
  2399  07C8  318C  2499  3185   	fcall	_sprintf
  2400  07CB                     l2009:
  2401                           
  2402                           ;Contador1.c: 216:       Lcd_Out2(1, 0, s);
  2403  07CB  01F3               	clrf	Lcd_Out2@x
  2404  07CC  30A7               	movlw	(low (_s| 0))& (0+255)
  2405  07CD  0140               	movlb	0	; select bank0
  2406  07CE  00EA               	movwf	??_cambio
  2407  07CF  086A               	movf	??_cambio,w
  2408  07D0  00F4               	movwf	Lcd_Out2@buffer
  2409  07D1  3001               	movlw	1
  2410  07D2  318D  2517  3185   	fcall	_Lcd_Out2
  2411  07D5                     l2011:
  2412                           
  2413                           ;Contador1.c: 217:       LATAbits.LATA2 = 1;
  2414  07D5  0140               	movlb	0	; select bank0
  2415  07D6  1518               	bsf	24,2	;volatile
  2416  07D7                     l2013:
  2417                           
  2418                           ;Contador1.c: 218:       _delay((unsigned long)((1000)*(1000000/4000.0)));
  2419  07D7  3002               	movlw	2
  2420  07D8  0140               	movlb	0	; select bank0
  2421  07D9  00EB               	movwf	??_cambio+1
  2422  07DA  3045               	movlw	69
  2423  07DB  00EA               	movwf	??_cambio
  2424  07DC  30A9               	movlw	169
  2425  07DD                     u2257:
  2426  07DD  0B89               	decfsz	9,f
  2427  07DE  2FDD               	goto	u2257
  2428  07DF  0BEA               	decfsz	??_cambio,f
  2429  07E0  2FDD               	goto	u2257
  2430  07E1  0BEB               	decfsz	??_cambio+1,f
  2431  07E2  2FDD               	goto	u2257
  2432  07E3  3200               	nop2
  2433  07E4                     l136:	
  2434                           ;Contador1.c: 219:       break;
  2435                           
  2436  07E4  0008               	return
  2437  07E5                     __end_of_cambio:
  2438                           
  2439                           	psect	text2
  2440  0C99                     __ptext2:	
  2441 ;; *************** function _sprintf *****************
  2442 ;; Defined at:
  2443 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  s               1    wreg     PTR unsigned char 
  2446 ;;		 -> s(20), 
  2447 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2448 ;;		 -> STR_18(12), STR_17(15), STR_16(12), STR_15(14), 
  2449 ;;		 -> STR_14(14), STR_13(10), STR_12(12), STR_11(15), 
  2450 ;;		 -> STR_10(11), STR_9(14), STR_8(11), STR_7(14), 
  2451 ;;		 -> STR_6(17), STR_5(15), STR_4(17), STR_3(14), 
  2452 ;;		 -> STR_2(16), STR_1(14), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  s               1    8[BANK1 ] PTR unsigned char 
  2455 ;;		 -> s(20), 
  2456 ;;  f               5    3[BANK1 ] struct _IO_FILE
  2457 ;;  ret             2    0        int 
  2458 ;;  ap              1    2[BANK1 ] PTR void [1]
  2459 ;;		 -> ?_sprintf(2), 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   70[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2469 ;;      Params:         0       4       0       0       0       0       0       0
  2470 ;;      Locals:         0       0       9       0       0       0       0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0       0
  2472 ;;      Totals:         1       4       9       0       0       0       0       0
  2473 ;;Total ram usage:       14 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    7
  2476 ;; This function calls:
  2477 ;;		_vfprintf
  2478 ;; This function is called by:
  2479 ;;		_cambio
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _sprintf
  2486  0C99                     _sprintf:
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2490                           ;sprintf@s stored from wreg
  2491  0C99  0141               	movlb	1	; select bank1
  2492  0C9A  00C3               	movwf	sprintf@s^(0+128)
  2493  0C9B                     l1833:
  2494  0C9B  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2495  0C9C  00FD               	movwf	??_sprintf
  2496  0C9D  087D               	movf	??_sprintf,w
  2497  0C9E  00BD               	movwf	sprintf@ap^(0+128)
  2498  0C9F  0843               	movf	sprintf@s^(0+128),w
  2499  0CA0  00FD               	movwf	??_sprintf
  2500  0CA1  087D               	movf	??_sprintf,w
  2501  0CA2  00BE               	movwf	sprintf@f^(0+128)
  2502  0CA3                     l1835:
  2503  0CA3  01BF               	clrf	(sprintf@f^(0+128)+1)
  2504  0CA4  01C0               	clrf	((sprintf@f+1)^(0+128)+1)
  2505  0CA5                     l1837:
  2506  0CA5  01C1               	clrf	(sprintf@f^(0+128)+3)
  2507  0CA6  01C2               	clrf	((sprintf@f+1)^(0+128)+3)
  2508  0CA7                     l1839:
  2509  0CA7  0140               	movlb	0	; select bank0
  2510  0CA8  0867               	movf	sprintf@fmt+1,w
  2511  0CA9  00DF               	movwf	vfprintf@fmt+1
  2512  0CAA  0866               	movf	sprintf@fmt,w
  2513  0CAB  00DE               	movwf	vfprintf@fmt
  2514  0CAC  30BD               	movlw	(low (sprintf@ap| 0))& (0+255)
  2515  0CAD  00FD               	movwf	??_sprintf
  2516  0CAE  087D               	movf	??_sprintf,w
  2517  0CAF  00E0               	movwf	vfprintf@ap
  2518  0CB0  30BE               	movlw	(low (sprintf@f| 0))& (0+255)
  2519  0CB1  318C  24E6  318C   	fcall	_vfprintf
  2520  0CB4                     l1841:
  2521  0CB4  0141               	movlb	1	; select bank1
  2522  0CB5  083F               	movf	(sprintf@f^(0+128)+1),w
  2523  0CB6  0743               	addwf	sprintf@s^(0+128),w
  2524  0CB7  00FD               	movwf	??_sprintf
  2525  0CB8  087D               	movf	??_sprintf,w
  2526  0CB9  0086               	movwf	6
  2527  0CBA  0187               	clrf	7
  2528  0CBB  0181               	clrf	1
  2529  0CBC                     l693:
  2530  0CBC  0008               	return
  2531  0CBD                     __end_of_sprintf:
  2532                           
  2533                           	psect	text3
  2534  0CE6                     __ptext3:	
  2535 ;; *************** function _vfprintf *****************
  2536 ;; Defined at:
  2537 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  fp              1    wreg     PTR struct _IO_FILE
  2540 ;;		 -> sprintf@f(5), 
  2541 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2542 ;;		 -> STR_18(12), STR_17(15), STR_16(12), STR_15(14), 
  2543 ;;		 -> STR_14(14), STR_13(10), STR_12(12), STR_11(15), 
  2544 ;;		 -> STR_10(11), STR_9(14), STR_8(11), STR_7(14), 
  2545 ;;		 -> STR_6(17), STR_5(15), STR_4(17), STR_3(14), 
  2546 ;;		 -> STR_2(16), STR_1(14), 
  2547 ;;  ap              1   64[BANK0 ] PTR PTR void 
  2548 ;;		 -> sprintf@ap(1), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  2551 ;;		 -> sprintf@f(5), 
  2552 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  2553 ;;		 -> STR_18(12), STR_17(15), STR_16(12), STR_15(14), 
  2554 ;;		 -> STR_14(14), STR_13(10), STR_12(12), STR_11(15), 
  2555 ;;		 -> STR_10(11), STR_9(14), STR_8(11), STR_7(14), 
  2556 ;;		 -> STR_6(17), STR_5(15), STR_4(17), STR_3(14), 
  2557 ;;		 -> STR_2(16), STR_1(14), 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  2   62[BANK0 ] int 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2567 ;;      Params:         0       3       0       0       0       0       0       0
  2568 ;;      Locals:         0       3       0       0       0       0       0       0
  2569 ;;      Temps:          0       2       0       0       0       0       0       0
  2570 ;;      Totals:         0       8       0       0       0       0       0       0
  2571 ;;Total ram usage:        8 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    6
  2574 ;; This function calls:
  2575 ;;		_vfpfcnvrt
  2576 ;; This function is called by:
  2577 ;;		_sprintf
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function _vfprintf
  2583  0CE6                     _vfprintf:
  2584                           
  2585                           ;incstack = 0
  2586                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2587                           ;vfprintf@fp stored from wreg
  2588  0CE6  0140               	movlb	0	; select bank0
  2589  0CE7  00E3               	movwf	vfprintf@fp
  2590  0CE8                     l1795:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2593  0CE8  085F               	movf	vfprintf@fmt+1,w
  2594  0CE9  00E5               	movwf	vfprintf@cfmt+1
  2595  0CEA  085E               	movf	vfprintf@fmt,w
  2596  0CEB  00E4               	movwf	vfprintf@cfmt
  2597  0CEC                     l1797:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2600  0CEC  0141               	movlb	1	; select bank1
  2601  0CED  01A0               	clrf	_nout^(0+128)
  2602  0CEE  01A1               	clrf	(_nout+1)^(0+128)
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2605  0CEF  2D04               	goto	l1801
  2606  0CF0                     l1799:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2609  0CF0  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2610  0CF1  00E1               	movwf	??_vfprintf
  2611  0CF2  0861               	movf	??_vfprintf,w
  2612  0CF3  00CE               	movwf	vfpfcnvrt@fmt
  2613  0CF4  0860               	movf	vfprintf@ap,w
  2614  0CF5  00E2               	movwf	??_vfprintf+1
  2615  0CF6  0862               	movf	??_vfprintf+1,w
  2616  0CF7  00CF               	movwf	vfpfcnvrt@ap
  2617  0CF8  0863               	movf	vfprintf@fp,w
  2618  0CF9  318F  2723  318C   	fcall	_vfpfcnvrt
  2619  0CFC  0140               	movlb	0	; select bank0
  2620  0CFD  084E               	movf	?_vfpfcnvrt,w
  2621  0CFE  0141               	movlb	1	; select bank1
  2622  0CFF  07A0               	addwf	_nout^(0+128),f
  2623  0D00  0140               	movlb	0	; select bank0
  2624  0D01  084F               	movf	?_vfpfcnvrt+1,w
  2625  0D02  0141               	movlb	1	; select bank1
  2626  0D03  3DA1               	addwfc	(_nout+1)^(0+128),f
  2627  0D04                     l1801:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2630  0D04  0140               	movlb	0	; select bank0
  2631  0D05  0864               	movf	vfprintf@cfmt,w
  2632  0D06  0084               	movwf	4
  2633  0D07  0865               	movf	vfprintf@cfmt+1,w
  2634  0D08  0085               	movwf	5
  2635  0D09  0012               	moviw fsr0++
  2636  0D0A  1D03               	btfss	3,2
  2637  0D0B  2D0D               	goto	u1751
  2638  0D0C  2D0E               	goto	u1750
  2639  0D0D                     u1751:
  2640  0D0D  2CF0               	goto	l1799
  2641  0D0E                     u1750:
  2642  0D0E                     l1803:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2645  0D0E  0141               	movlb	1	; select bank1
  2646  0D0F  0821               	movf	(_nout+1)^(0+128),w
  2647  0D10  0140               	movlb	0	; select bank0
  2648  0D11  00DF               	movwf	?_vfprintf+1
  2649  0D12  0141               	movlb	1	; select bank1
  2650  0D13  0820               	movf	_nout^(0+128),w
  2651  0D14  0140               	movlb	0	; select bank0
  2652  0D15  00DE               	movwf	?_vfprintf
  2653  0D16                     l765:
  2654  0D16  0008               	return
  2655  0D17                     __end_of_vfprintf:
  2656                           
  2657                           	psect	text4
  2658  0F23                     __ptext4:	
  2659 ;; *************** function _vfpfcnvrt *****************
  2660 ;; Defined at:
  2661 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  fp              1    wreg     PTR struct _IO_FILE
  2664 ;;		 -> sprintf@f(5), 
  2665 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2666 ;;		 -> vfprintf@cfmt(2), 
  2667 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2668 ;;		 -> sprintf@ap(1), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2671 ;;		 -> sprintf@f(5), 
  2672 ;;  ll              8   53[BANK0 ] long long 
  2673 ;;  llu             8    0        unsigned long long 
  2674 ;;  f               4    0        unsigned long long 
  2675 ;;  ct              3    0        unsigned char [3]
  2676 ;;  vp              2    0        PTR void 
  2677 ;;  i               2    0        int 
  2678 ;;  done            2    0        int 
  2679 ;;  cp              2    0        PTR unsigned char 
  2680 ;;  c               1    0        unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2   46[BANK0 ] int 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2690 ;;      Params:         0       2       0       0       0       0       0       0
  2691 ;;      Locals:         0       9       0       0       0       0       0       0
  2692 ;;      Temps:          0       5       0       0       0       0       0       0
  2693 ;;      Totals:         0      16       0       0       0       0       0       0
  2694 ;;Total ram usage:       16 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    5
  2697 ;; This function calls:
  2698 ;;		_dtoa
  2699 ;;		_fputc
  2700 ;; This function is called by:
  2701 ;;		_vfprintf
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _vfpfcnvrt
  2707  0F23                     _vfpfcnvrt:
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2711                           ;vfpfcnvrt@fp stored from wreg
  2712  0F23  0140               	movlb	0	; select bank0
  2713  0F24  00DD               	movwf	vfpfcnvrt@fp
  2714  0F25                     l1689:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2717  0F25  084E               	movf	vfpfcnvrt@fmt,w
  2718  0F26  0086               	movwf	6
  2719  0F27  0187               	clrf	7
  2720  0F28  3F40               	moviw [0]fsr1
  2721  0F29  00D0               	movwf	??_vfpfcnvrt
  2722  0F2A  3F41               	moviw [1]fsr1
  2723  0F2B  00D1               	movwf	??_vfpfcnvrt+1
  2724  0F2C  0850               	movf	??_vfpfcnvrt,w
  2725  0F2D  0084               	movwf	4
  2726  0F2E  0851               	movf	??_vfpfcnvrt+1,w
  2727  0F2F  0085               	movwf	5
  2728  0F30  0012               	moviw fsr0++
  2729  0F31  3A25               	xorlw	37
  2730  0F32  1D03               	btfss	3,2
  2731  0F33  2F35               	goto	u1591
  2732  0F34  2F36               	goto	u1590
  2733  0F35                     u1591:
  2734  0F35  2FDC               	goto	l1725
  2735  0F36                     u1590:
  2736  0F36                     l1691:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2739  0F36  084E               	movf	vfpfcnvrt@fmt,w
  2740  0F37  0086               	movwf	6
  2741  0F38  0187               	clrf	7
  2742  0F39  3001               	movlw	1
  2743  0F3A  0781               	addwf	1,f
  2744  0F3B  3141               	addfsr 1,1
  2745  0F3C  1803               	skipnc
  2746  0F3D  0A81               	incf	1,f
  2747  0F3E                     l1693:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2750  0F3E  0141               	movlb	1	; select bank1
  2751  0F3F  01A2               	clrf	_width^(0+128)
  2752  0F40  01A3               	clrf	(_width+1)^(0+128)
  2753  0F41  0140               	movlb	0	; select bank0
  2754  0F42  01EE               	clrf	_flags
  2755  0F43  01EF               	clrf	_flags+1
  2756  0F44                     l1695:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2759  0F44  30FF               	movlw	255
  2760  0F45  0141               	movlb	1	; select bank1
  2761  0F46  00A4               	movwf	_prec^(0+128)
  2762  0F47  30FF               	movlw	255
  2763  0F48  00A5               	movwf	(_prec^(0+128)+1)
  2764  0F49                     l1697:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2767  0F49  0140               	movlb	0	; select bank0
  2768  0F4A  084E               	movf	vfpfcnvrt@fmt,w
  2769  0F4B  0086               	movwf	6
  2770  0F4C  0187               	clrf	7
  2771  0F4D  3F40               	moviw [0]fsr1
  2772  0F4E  00D0               	movwf	??_vfpfcnvrt
  2773  0F4F  3F41               	moviw [1]fsr1
  2774  0F50  00D1               	movwf	??_vfpfcnvrt+1
  2775  0F51  0850               	movf	??_vfpfcnvrt,w
  2776  0F52  0084               	movwf	4
  2777  0F53  0851               	movf	??_vfpfcnvrt+1,w
  2778  0F54  0085               	movwf	5
  2779  0F55  0012               	moviw fsr0++
  2780  0F56  3A64               	xorlw	100
  2781  0F57  1903               	btfsc	3,2
  2782  0F58  2F5A               	goto	u1601
  2783  0F59  2F5B               	goto	u1600
  2784  0F5A                     u1601:
  2785  0F5A  2F6C               	goto	l1701
  2786  0F5B                     u1600:
  2787  0F5B                     l1699:
  2788  0F5B  084E               	movf	vfpfcnvrt@fmt,w
  2789  0F5C  0086               	movwf	6
  2790  0F5D  0187               	clrf	7
  2791  0F5E  3F40               	moviw [0]fsr1
  2792  0F5F  00D0               	movwf	??_vfpfcnvrt
  2793  0F60  3F41               	moviw [1]fsr1
  2794  0F61  00D1               	movwf	??_vfpfcnvrt+1
  2795  0F62  0850               	movf	??_vfpfcnvrt,w
  2796  0F63  0084               	movwf	4
  2797  0F64  0851               	movf	??_vfpfcnvrt+1,w
  2798  0F65  0085               	movwf	5
  2799  0F66  0012               	moviw fsr0++
  2800  0F67  3A69               	xorlw	105
  2801  0F68  1D03               	btfss	3,2
  2802  0F69  2F6B               	goto	u1611
  2803  0F6A  2F6C               	goto	u1610
  2804  0F6B                     u1611:
  2805  0F6B  2FA7               	goto	l1709
  2806  0F6C                     u1610:
  2807  0F6C                     l1701:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2810  0F6C  084E               	movf	vfpfcnvrt@fmt,w
  2811  0F6D  0086               	movwf	6
  2812  0F6E  0187               	clrf	7
  2813  0F6F  3001               	movlw	1
  2814  0F70  0781               	addwf	1,f
  2815  0F71  3141               	addfsr 1,1
  2816  0F72  1803               	skipnc
  2817  0F73  0A81               	incf	1,f
  2818  0F74                     l1703:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2821  0F74  084F               	movf	vfpfcnvrt@ap,w
  2822  0F75  0086               	movwf	6
  2823  0F76  0187               	clrf	7
  2824  0F77  0801               	movf	1,w
  2825  0F78  0084               	movwf	4
  2826  0F79  0185               	clrf	5
  2827  0F7A  3002               	movlw	2
  2828  0F7B  0781               	addwf	1,f
  2829  0F7C  3F00               	moviw [0]fsr0
  2830  0F7D  00D0               	movwf	??_vfpfcnvrt
  2831  0F7E  3F01               	moviw [1]fsr0
  2832  0F7F  00D1               	movwf	??_vfpfcnvrt+1
  2833  0F80  0850               	movf	??_vfpfcnvrt,w
  2834  0F81  00D5               	movwf	vfpfcnvrt@ll
  2835  0F82  0851               	movf	??_vfpfcnvrt+1,w
  2836  0F83  00D6               	movwf	vfpfcnvrt@ll+1
  2837  0F84  0D89               	rlf	9,f
  2838  0F85  3B89               	subwfb	9,f
  2839  0F86  0989               	comf	9,f
  2840  0F87  00D7               	movwf	vfpfcnvrt@ll+2
  2841  0F88  00D8               	movwf	vfpfcnvrt@ll+3
  2842  0F89  00D9               	movwf	vfpfcnvrt@ll+4
  2843  0F8A  00DA               	movwf	vfpfcnvrt@ll+5
  2844  0F8B  00DB               	movwf	vfpfcnvrt@ll+6
  2845  0F8C  00DC               	movwf	vfpfcnvrt@ll+7
  2846  0F8D                     l1705:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2849  0F8D  0855               	movf	vfpfcnvrt@ll,w
  2850  0F8E  00B0               	movwf	dtoa@d
  2851  0F8F  0856               	movf	vfpfcnvrt@ll+1,w
  2852  0F90  00B1               	movwf	dtoa@d+1
  2853  0F91  0857               	movf	vfpfcnvrt@ll+2,w
  2854  0F92  00B2               	movwf	dtoa@d+2
  2855  0F93  0858               	movf	vfpfcnvrt@ll+3,w
  2856  0F94  00B3               	movwf	dtoa@d+3
  2857  0F95  0859               	movf	vfpfcnvrt@ll+4,w
  2858  0F96  00B4               	movwf	dtoa@d+4
  2859  0F97  085A               	movf	vfpfcnvrt@ll+5,w
  2860  0F98  00B5               	movwf	dtoa@d+5
  2861  0F99  085B               	movf	vfpfcnvrt@ll+6,w
  2862  0F9A  00B6               	movwf	dtoa@d+6
  2863  0F9B  085C               	movf	vfpfcnvrt@ll+7,w
  2864  0F9C  00B7               	movwf	dtoa@d+7
  2865  0F9D  085D               	movf	vfpfcnvrt@fp,w
  2866  0F9E  3182  229D  318F   	fcall	_dtoa
  2867  0FA1  0140               	movlb	0	; select bank0
  2868  0FA2  0831               	movf	?_dtoa+1,w
  2869  0FA3  00CF               	movwf	?_vfpfcnvrt+1
  2870  0FA4  0830               	movf	?_dtoa,w
  2871  0FA5  00CE               	movwf	?_vfpfcnvrt
  2872  0FA6  2FFF               	goto	l758
  2873  0FA7                     l1709:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2876  0FA7  084E               	movf	vfpfcnvrt@fmt,w
  2877  0FA8  0086               	movwf	6
  2878  0FA9  0187               	clrf	7
  2879  0FAA  3F40               	moviw [0]fsr1
  2880  0FAB  00D0               	movwf	??_vfpfcnvrt
  2881  0FAC  3F41               	moviw [1]fsr1
  2882  0FAD  00D1               	movwf	??_vfpfcnvrt+1
  2883  0FAE  0850               	movf	??_vfpfcnvrt,w
  2884  0FAF  0084               	movwf	4
  2885  0FB0  0851               	movf	??_vfpfcnvrt+1,w
  2886  0FB1  0085               	movwf	5
  2887  0FB2  0012               	moviw fsr0++
  2888  0FB3  3A25               	xorlw	37
  2889  0FB4  1D03               	btfss	3,2
  2890  0FB5  2FB7               	goto	u1621
  2891  0FB6  2FB8               	goto	u1620
  2892  0FB7                     u1621:
  2893  0FB7  2FD1               	goto	l1719
  2894  0FB8                     u1620:
  2895  0FB8                     l1711:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2898  0FB8  084E               	movf	vfpfcnvrt@fmt,w
  2899  0FB9  0086               	movwf	6
  2900  0FBA  0187               	clrf	7
  2901  0FBB  3001               	movlw	1
  2902  0FBC  0781               	addwf	1,f
  2903  0FBD  3141               	addfsr 1,1
  2904  0FBE  1803               	skipnc
  2905  0FBF  0A81               	incf	1,f
  2906  0FC0                     l1713:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2909  0FC0  3025               	movlw	37
  2910  0FC1  00F0               	movwf	fputc@c
  2911  0FC2  3000               	movlw	0
  2912  0FC3  00F1               	movwf	fputc@c+1
  2913  0FC4  085D               	movf	vfpfcnvrt@fp,w
  2914  0FC5  00D0               	movwf	??_vfpfcnvrt
  2915  0FC6  0850               	movf	??_vfpfcnvrt,w
  2916  0FC7  00F2               	movwf	fputc@fp
  2917  0FC8  318D  2560  318F   	fcall	_fputc
  2918  0FCB                     l1715:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2921  0FCB  3001               	movlw	1
  2922  0FCC  0140               	movlb	0	; select bank0
  2923  0FCD  00CE               	movwf	?_vfpfcnvrt
  2924  0FCE  3000               	movlw	0
  2925  0FCF  00CF               	movwf	?_vfpfcnvrt+1
  2926  0FD0  2FFF               	goto	l758
  2927  0FD1                     l1719:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2930  0FD1  084E               	movf	vfpfcnvrt@fmt,w
  2931  0FD2  0086               	movwf	6
  2932  0FD3  0187               	clrf	7
  2933  0FD4  3001               	movlw	1
  2934  0FD5  0781               	addwf	1,f
  2935  0FD6  3141               	addfsr 1,1
  2936  0FD7  1803               	skipnc
  2937  0FD8  0A81               	incf	1,f
  2938  0FD9                     l1721:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2941  0FD9  01CE               	clrf	?_vfpfcnvrt
  2942  0FDA  01CF               	clrf	?_vfpfcnvrt+1
  2943  0FDB  2FFF               	goto	l758
  2944  0FDC                     l1725:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2947  0FDC  084E               	movf	vfpfcnvrt@fmt,w
  2948  0FDD  0086               	movwf	6
  2949  0FDE  0187               	clrf	7
  2950  0FDF  3F40               	moviw [0]fsr1
  2951  0FE0  00D0               	movwf	??_vfpfcnvrt
  2952  0FE1  3F41               	moviw [1]fsr1
  2953  0FE2  00D1               	movwf	??_vfpfcnvrt+1
  2954  0FE3  0850               	movf	??_vfpfcnvrt,w
  2955  0FE4  0084               	movwf	4
  2956  0FE5  0851               	movf	??_vfpfcnvrt+1,w
  2957  0FE6  0085               	movwf	5
  2958  0FE7  0800               	movf	0,w	;code access
  2959  0FE8  00D2               	movwf	??_vfpfcnvrt+2
  2960  0FE9  01D3               	clrf	??_vfpfcnvrt+3
  2961  0FEA  0852               	movf	??_vfpfcnvrt+2,w
  2962  0FEB  00F0               	movwf	fputc@c
  2963  0FEC  0853               	movf	??_vfpfcnvrt+3,w
  2964  0FED  00F1               	movwf	fputc@c+1
  2965  0FEE  085D               	movf	vfpfcnvrt@fp,w
  2966  0FEF  00D4               	movwf	??_vfpfcnvrt+4
  2967  0FF0  0854               	movf	??_vfpfcnvrt+4,w
  2968  0FF1  00F2               	movwf	fputc@fp
  2969  0FF2  318D  2560  318F   	fcall	_fputc
  2970  0FF5                     l1727:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2973  0FF5  0140               	movlb	0	; select bank0
  2974  0FF6  084E               	movf	vfpfcnvrt@fmt,w
  2975  0FF7  0086               	movwf	6
  2976  0FF8  0187               	clrf	7
  2977  0FF9  3001               	movlw	1
  2978  0FFA  0781               	addwf	1,f
  2979  0FFB  3141               	addfsr 1,1
  2980  0FFC  1803               	skipnc
  2981  0FFD  0A81               	incf	1,f
  2982  0FFE  2FCB               	goto	l1715
  2983  0FFF                     l758:
  2984  0FFF  0008               	return
  2985  1000                     __end_of_vfpfcnvrt:
  2986                           
  2987                           	psect	text5
  2988  029D                     __ptext5:	
  2989 ;; *************** function _dtoa *****************
  2990 ;; Defined at:
  2991 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  fp              1    wreg     PTR struct _IO_FILE
  2994 ;;		 -> sprintf@f(5), 
  2995 ;;  d               8   16[BANK0 ] long long 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2998 ;;		 -> sprintf@f(5), 
  2999 ;;  n               8   36[BANK0 ] long long 
  3000 ;;  i               2   44[BANK0 ] int 
  3001 ;;  s               2   34[BANK0 ] int 
  3002 ;;  w               2   32[BANK0 ] int 
  3003 ;;  p               2   30[BANK0 ] int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2   16[BANK0 ] int 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3013 ;;      Params:         0       8       0       0       0       0       0       0
  3014 ;;      Locals:         0      19       0       0       0       0       0       0
  3015 ;;      Temps:          0       3       0       0       0       0       0       0
  3016 ;;      Totals:         0      30       0       0       0       0       0       0
  3017 ;;Total ram usage:       30 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    4
  3020 ;; This function calls:
  3021 ;;		___aodiv
  3022 ;;		___aomod
  3023 ;;		_abs
  3024 ;;		_pad
  3025 ;; This function is called by:
  3026 ;;		_vfpfcnvrt
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _dtoa
  3032  029D                     _dtoa:
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3036                           ;dtoa@fp stored from wreg
  3037  029D  0140               	movlb	0	; select bank0
  3038  029E  00BD               	movwf	dtoa@fp
  3039  029F                     l1631:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  3042  029F  0830               	movf	dtoa@d,w
  3043  02A0  00C4               	movwf	dtoa@n
  3044  02A1  0831               	movf	dtoa@d+1,w
  3045  02A2  00C5               	movwf	dtoa@n+1
  3046  02A3  0832               	movf	dtoa@d+2,w
  3047  02A4  00C6               	movwf	dtoa@n+2
  3048  02A5  0833               	movf	dtoa@d+3,w
  3049  02A6  00C7               	movwf	dtoa@n+3
  3050  02A7  0834               	movf	dtoa@d+4,w
  3051  02A8  00C8               	movwf	dtoa@n+4
  3052  02A9  0835               	movf	dtoa@d+5,w
  3053  02AA  00C9               	movwf	dtoa@n+5
  3054  02AB  0836               	movf	dtoa@d+6,w
  3055  02AC  00CA               	movwf	dtoa@n+6
  3056  02AD  0837               	movf	dtoa@d+7,w
  3057  02AE  00CB               	movwf	dtoa@n+7
  3058  02AF                     l1633:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  3061  02AF  3044               	movlw	low dtoa@n
  3062  02B0  0086               	movwf	6
  3063  02B1  3000               	movlw	high dtoa@n
  3064  02B2  0087               	movwf	7
  3065  02B3  3F47               	moviw [7]fsr1
  3066  02B4  00B8               	movwf	??_dtoa
  3067  02B5  1BB8               	btfsc	??_dtoa,7
  3068  02B6  2AB8               	goto	u1431
  3069  02B7  2ABA               	goto	u1430
  3070  02B8                     u1431:
  3071  02B8  3001               	movlw	1
  3072  02B9  2ABB               	goto	u1440
  3073  02BA                     u1430:
  3074  02BA  3000               	movlw	0
  3075  02BB                     u1440:
  3076  02BB  0140               	movlb	0	; select bank0
  3077  02BC  00B9               	movwf	??_dtoa+1
  3078  02BD  01BA               	clrf	??_dtoa+2
  3079  02BE  0839               	movf	??_dtoa+1,w
  3080  02BF  00C2               	movwf	dtoa@s
  3081  02C0  083A               	movf	??_dtoa+2,w
  3082  02C1  00C3               	movwf	dtoa@s+1
  3083  02C2                     l1635:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  3086  02C2  0842               	movf	dtoa@s,w
  3087  02C3  0443               	iorwf	dtoa@s+1,w
  3088  02C4  1903               	btfsc	3,2
  3089  02C5  2AC7               	goto	u1451
  3090  02C6  2AC8               	goto	u1450
  3091  02C7                     u1451:
  3092  02C7  2AE6               	goto	l728
  3093  02C8                     u1450:
  3094  02C8                     l1637:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  3097  02C8  09C4               	comf	dtoa@n,f
  3098  02C9  09C5               	comf	dtoa@n+1,f
  3099  02CA  09C6               	comf	dtoa@n+2,f
  3100  02CB  09C7               	comf	dtoa@n+3,f
  3101  02CC  09C8               	comf	dtoa@n+4,f
  3102  02CD  09C9               	comf	dtoa@n+5,f
  3103  02CE  09CA               	comf	dtoa@n+6,f
  3104  02CF  09CB               	comf	dtoa@n+7,f
  3105  02D0  0AC4               	incf	dtoa@n,f
  3106  02D1  1D03               	skipz
  3107  02D2  2AE6               	goto	u146lld
  3108  02D3  0AC5               	incf	dtoa@n+1,f
  3109  02D4  1D03               	skipz
  3110  02D5  2AE6               	goto	u146lld
  3111  02D6  0AC6               	incf	dtoa@n+2,f
  3112  02D7  1D03               	skipz
  3113  02D8  2AE6               	goto	u146lld
  3114  02D9  0AC7               	incf	dtoa@n+3,f
  3115  02DA  1D03               	skipz
  3116  02DB  2AE6               	goto	u146lld
  3117  02DC  0AC8               	incf	dtoa@n+4,f
  3118  02DD  1D03               	skipz
  3119  02DE  2AE6               	goto	u146lld
  3120  02DF  0AC9               	incf	dtoa@n+5,f
  3121  02E0  1D03               	skipz
  3122  02E1  2AE6               	goto	u146lld
  3123  02E2  0ACA               	incf	dtoa@n+6,f
  3124  02E3  1D03               	skipz
  3125  02E4  2AE6               	goto	u146lld
  3126  02E5  0ACB               	incf	dtoa@n+7,f
  3127  02E6                     u146lld:
  3128  02E6                     l728:	
  3129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 284:     }
  3130                           
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  3133  02E6  0141               	movlb	1	; select bank1
  3134  02E7  1BA5               	btfsc	(_prec+1)^(0+128),7
  3135  02E8  2AEA               	goto	u1471
  3136  02E9  2AEB               	goto	u1470
  3137  02EA                     u1471:
  3138  02EA  2AF0               	goto	l729
  3139  02EB                     u1470:
  3140  02EB                     l1639:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  3143  02EB  30FD               	movlw	253
  3144  02EC  0140               	movlb	0	; select bank0
  3145  02ED  05EE               	andwf	_flags,f
  3146  02EE  30FF               	movlw	255
  3147  02EF  05EF               	andwf	_flags+1,f
  3148  02F0                     l729:	
  3149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 289:     }
  3150                           
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  3153  02F0  0141               	movlb	1	; select bank1
  3154  02F1  0825               	movf	(_prec+1)^(0+128),w
  3155  02F2  3A80               	xorlw	128
  3156  02F3  0140               	movlb	0	; select bank0
  3157  02F4  00B8               	movwf	??_dtoa
  3158  02F5  3080               	movlw	128
  3159  02F6  0238               	subwf	??_dtoa,w
  3160  02F7  1D03               	skipz
  3161  02F8  2AFC               	goto	u1485
  3162  02F9  3001               	movlw	1
  3163  02FA  0141               	movlb	1	; select bank1
  3164  02FB  0224               	subwf	_prec^(0+128),w
  3165  02FC                     u1485:
  3166  02FC  1803               	skipnc
  3167  02FD  2AFF               	goto	u1481
  3168  02FE  2B00               	goto	u1480
  3169  02FF                     u1481:
  3170  02FF  2B06               	goto	l1643
  3171  0300                     u1480:
  3172  0300                     l1641:
  3173  0300  3001               	movlw	1
  3174  0301  0140               	movlb	0	; select bank0
  3175  0302  00BE               	movwf	dtoa@p
  3176  0303  3000               	movlw	0
  3177  0304  00BF               	movwf	dtoa@p+1
  3178  0305  2B0E               	goto	l733
  3179  0306                     l1643:
  3180  0306  0141               	movlb	1	; select bank1
  3181  0307  0825               	movf	(_prec+1)^(0+128),w
  3182  0308  0140               	movlb	0	; select bank0
  3183  0309  00BF               	movwf	dtoa@p+1
  3184  030A  0141               	movlb	1	; select bank1
  3185  030B  0824               	movf	_prec^(0+128),w
  3186  030C  0140               	movlb	0	; select bank0
  3187  030D  00BE               	movwf	dtoa@p
  3188  030E                     l733:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  3191  030E  0141               	movlb	1	; select bank1
  3192  030F  0823               	movf	(_width+1)^(0+128),w
  3193  0310  0140               	movlb	0	; select bank0
  3194  0311  00C1               	movwf	dtoa@w+1
  3195  0312  0141               	movlb	1	; select bank1
  3196  0313  0822               	movf	_width^(0+128),w
  3197  0314  0140               	movlb	0	; select bank0
  3198  0315  00C0               	movwf	dtoa@w
  3199  0316                     l1645:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  3202  0316  0842               	movf	dtoa@s,w
  3203  0317  0443               	iorwf	dtoa@s+1,w
  3204  0318  1D03               	btfss	3,2
  3205  0319  2B1B               	goto	u1491
  3206  031A  2B1C               	goto	u1490
  3207  031B                     u1491:
  3208  031B  2B20               	goto	l1649
  3209  031C                     u1490:
  3210  031C                     l1647:
  3211  031C  1D6E               	btfss	_flags,2
  3212  031D  2B1F               	goto	u1501
  3213  031E  2B20               	goto	u1500
  3214  031F                     u1501:
  3215  031F  2B24               	goto	l734
  3216  0320                     u1500:
  3217  0320                     l1649:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  3220  0320  30FF               	movlw	255
  3221  0321  07C0               	addwf	dtoa@w,f
  3222  0322  30FF               	movlw	255
  3223  0323  3DC1               	addwfc	dtoa@w+1,f
  3224  0324                     l734:	
  3225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 294:     }
  3226                           
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  3229  0324  301F               	movlw	31
  3230  0325  00CC               	movwf	dtoa@i
  3231  0326  3000               	movlw	0
  3232  0327  00CD               	movwf	dtoa@i+1
  3233  0328                     l1651:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  3236  0328  0142               	movlb	2	; select bank2
  3237  0329  01BF               	clrf	(_dbuf^(0+256)+31)
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3240  032A  2B94               	goto	l737
  3241  032B                     l1653:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  3244  032B  30FF               	movlw	255
  3245  032C  0140               	movlb	0	; select bank0
  3246  032D  07CC               	addwf	dtoa@i,f
  3247  032E  30FF               	movlw	255
  3248  032F  3DCD               	addwfc	dtoa@i+1,f
  3249  0330                     l1655:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  3252  0330  300A               	movlw	10
  3253  0331  00A0               	movwf	___aomod@divisor
  3254  0332  01A1               	clrf	___aomod@divisor+1
  3255  0333  01A2               	clrf	___aomod@divisor+2
  3256  0334  01A3               	clrf	___aomod@divisor+3
  3257  0335  01A4               	clrf	___aomod@divisor+4
  3258  0336  01A5               	clrf	___aomod@divisor+5
  3259  0337  01A6               	clrf	___aomod@divisor+6
  3260  0338  01A7               	clrf	___aomod@divisor+7
  3261  0339  0844               	movf	dtoa@n,w
  3262  033A  00A8               	movwf	___aomod@dividend
  3263  033B  0845               	movf	dtoa@n+1,w
  3264  033C  00A9               	movwf	___aomod@dividend+1
  3265  033D  0846               	movf	dtoa@n+2,w
  3266  033E  00AA               	movwf	___aomod@dividend+2
  3267  033F  0847               	movf	dtoa@n+3,w
  3268  0340  00AB               	movwf	___aomod@dividend+3
  3269  0341  0848               	movf	dtoa@n+4,w
  3270  0342  00AC               	movwf	___aomod@dividend+4
  3271  0343  0849               	movf	dtoa@n+5,w
  3272  0344  00AD               	movwf	___aomod@dividend+5
  3273  0345  084A               	movf	dtoa@n+6,w
  3274  0346  00AE               	movwf	___aomod@dividend+6
  3275  0347  084B               	movf	dtoa@n+7,w
  3276  0348  00AF               	movwf	___aomod@dividend+7
  3277  0349  3180  20B2  3182   	fcall	___aomod
  3278  034C  0140               	movlb	0	; select bank0
  3279  034D  0821               	movf	?___aomod+1,w
  3280  034E  00F4               	movwf	abs@a+1
  3281  034F  0820               	movf	?___aomod,w
  3282  0350  00F3               	movwf	abs@a
  3283  0351  318C  245E  3182   	fcall	_abs
  3284  0354  0873               	movf	?_abs,w
  3285  0355  3E30               	addlw	48
  3286  0356  0140               	movlb	0	; select bank0
  3287  0357  00B8               	movwf	??_dtoa
  3288  0358  084C               	movf	dtoa@i,w
  3289  0359  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3290  035A  0086               	movwf	6
  3291  035B  3001               	movlw	1	; select bank2/3
  3292  035C  0087               	movwf	7
  3293  035D  0838               	movf	??_dtoa,w
  3294  035E  0081               	movwf	1
  3295  035F                     l1657:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  3298  035F  30FF               	movlw	255
  3299  0360  07BE               	addwf	dtoa@p,f
  3300  0361  30FF               	movlw	255
  3301  0362  3DBF               	addwfc	dtoa@p+1,f
  3302  0363                     l1659:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  3305  0363  30FF               	movlw	255
  3306  0364  07C0               	addwf	dtoa@w,f
  3307  0365  30FF               	movlw	255
  3308  0366  3DC1               	addwfc	dtoa@w+1,f
  3309  0367                     l1661:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  3312  0367  300A               	movlw	10
  3313  0368  00A0               	movwf	___aodiv@divisor
  3314  0369  01A1               	clrf	___aodiv@divisor+1
  3315  036A  01A2               	clrf	___aodiv@divisor+2
  3316  036B  01A3               	clrf	___aodiv@divisor+3
  3317  036C  01A4               	clrf	___aodiv@divisor+4
  3318  036D  01A5               	clrf	___aodiv@divisor+5
  3319  036E  01A6               	clrf	___aodiv@divisor+6
  3320  036F  01A7               	clrf	___aodiv@divisor+7
  3321  0370  0844               	movf	dtoa@n,w
  3322  0371  00A8               	movwf	___aodiv@dividend
  3323  0372  0845               	movf	dtoa@n+1,w
  3324  0373  00A9               	movwf	___aodiv@dividend+1
  3325  0374  0846               	movf	dtoa@n+2,w
  3326  0375  00AA               	movwf	___aodiv@dividend+2
  3327  0376  0847               	movf	dtoa@n+3,w
  3328  0377  00AB               	movwf	___aodiv@dividend+3
  3329  0378  0848               	movf	dtoa@n+4,w
  3330  0379  00AC               	movwf	___aodiv@dividend+4
  3331  037A  0849               	movf	dtoa@n+5,w
  3332  037B  00AD               	movwf	___aodiv@dividend+5
  3333  037C  084A               	movf	dtoa@n+6,w
  3334  037D  00AE               	movwf	___aodiv@dividend+6
  3335  037E  084B               	movf	dtoa@n+7,w
  3336  037F  00AF               	movwf	___aodiv@dividend+7
  3337  0380  3181  219C  3182   	fcall	___aodiv
  3338  0383  0140               	movlb	0	; select bank0
  3339  0384  0820               	movf	?___aodiv,w
  3340  0385  00C4               	movwf	dtoa@n
  3341  0386  0821               	movf	?___aodiv+1,w
  3342  0387  00C5               	movwf	dtoa@n+1
  3343  0388  0822               	movf	?___aodiv+2,w
  3344  0389  00C6               	movwf	dtoa@n+2
  3345  038A  0823               	movf	?___aodiv+3,w
  3346  038B  00C7               	movwf	dtoa@n+3
  3347  038C  0824               	movf	?___aodiv+4,w
  3348  038D  00C8               	movwf	dtoa@n+4
  3349  038E  0825               	movf	?___aodiv+5,w
  3350  038F  00C9               	movwf	dtoa@n+5
  3351  0390  0826               	movf	?___aodiv+6,w
  3352  0391  00CA               	movwf	dtoa@n+6
  3353  0392  0827               	movf	?___aodiv+7,w
  3354  0393  00CB               	movwf	dtoa@n+7
  3355  0394                     l737:	
  3356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 305:     }
  3357                           
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3360  0394  0140               	movlb	0	; select bank0
  3361  0395  084D               	movf	dtoa@i+1,w
  3362  0396  3A80               	xorlw	128
  3363  0397  00B8               	movwf	??_dtoa
  3364  0398  3080               	movlw	128
  3365  0399  0238               	subwf	??_dtoa,w
  3366  039A  1D03               	skipz
  3367  039B  2B9E               	goto	u1515
  3368  039C  3001               	movlw	1
  3369  039D  024C               	subwf	dtoa@i,w
  3370  039E                     u1515:
  3371  039E  1C03               	skipc
  3372  039F  2BA1               	goto	u1511
  3373  03A0  2BA2               	goto	u1510
  3374  03A1                     u1511:
  3375  03A1  2BCF               	goto	l1671
  3376  03A2                     u1510:
  3377  03A2                     l1663:
  3378  03A2  0140               	movlb	0	; select bank0
  3379  03A3  0844               	movf	dtoa@n,w
  3380  03A4  0445               	iorwf	dtoa@n+1,w
  3381  03A5  0446               	iorwf	dtoa@n+2,w
  3382  03A6  0447               	iorwf	dtoa@n+3,w
  3383  03A7  0448               	iorwf	dtoa@n+4,w
  3384  03A8  0449               	iorwf	dtoa@n+5,w
  3385  03A9  044A               	iorwf	dtoa@n+6,w
  3386  03AA  044B               	iorwf	dtoa@n+7,w
  3387  03AB  1D03               	skipz
  3388  03AC  2BAE               	goto	u1521
  3389  03AD  2BAF               	goto	u1520
  3390  03AE                     u1521:
  3391  03AE  2B2B               	goto	l1653
  3392  03AF                     u1520:
  3393  03AF                     l1665:
  3394  03AF  083F               	movf	dtoa@p+1,w
  3395  03B0  3A80               	xorlw	128
  3396  03B1  00B8               	movwf	??_dtoa
  3397  03B2  3080               	movlw	128
  3398  03B3  0238               	subwf	??_dtoa,w
  3399  03B4  1D03               	skipz
  3400  03B5  2BB8               	goto	u1535
  3401  03B6  3001               	movlw	1
  3402  03B7  023E               	subwf	dtoa@p,w
  3403  03B8                     u1535:
  3404  03B8  1803               	skipnc
  3405  03B9  2BBB               	goto	u1531
  3406  03BA  2BBC               	goto	u1530
  3407  03BB                     u1531:
  3408  03BB  2B2B               	goto	l1653
  3409  03BC                     u1530:
  3410  03BC                     l1667:
  3411  03BC  0140               	movlb	0	; select bank0
  3412  03BD  0841               	movf	dtoa@w+1,w
  3413  03BE  3A80               	xorlw	128
  3414  03BF  00B8               	movwf	??_dtoa
  3415  03C0  3080               	movlw	128
  3416  03C1  0238               	subwf	??_dtoa,w
  3417  03C2  1D03               	skipz
  3418  03C3  2BC6               	goto	u1545
  3419  03C4  3001               	movlw	1
  3420  03C5  0240               	subwf	dtoa@w,w
  3421  03C6                     u1545:
  3422  03C6  1C03               	skipc
  3423  03C7  2BC9               	goto	u1541
  3424  03C8  2BCA               	goto	u1540
  3425  03C9                     u1541:
  3426  03C9  2BCF               	goto	l1671
  3427  03CA                     u1540:
  3428  03CA                     l1669:
  3429  03CA  0140               	movlb	0	; select bank0
  3430  03CB  18EE               	btfsc	_flags,1
  3431  03CC  2BCE               	goto	u1551
  3432  03CD  2BCF               	goto	u1550
  3433  03CE                     u1551:
  3434  03CE  2B2B               	goto	l1653
  3435  03CF                     u1550:
  3436  03CF                     l1671:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  3439  03CF  0140               	movlb	0	; select bank0
  3440  03D0  0842               	movf	dtoa@s,w
  3441  03D1  0443               	iorwf	dtoa@s+1,w
  3442  03D2  1D03               	btfss	3,2
  3443  03D3  2BD5               	goto	u1561
  3444  03D4  2BD6               	goto	u1560
  3445  03D5                     u1561:
  3446  03D5  2BDA               	goto	l1675
  3447  03D6                     u1560:
  3448  03D6                     l1673:
  3449  03D6  1D6E               	btfss	_flags,2
  3450  03D7  2BD9               	goto	u1571
  3451  03D8  2BDA               	goto	u1570
  3452  03D9                     u1571:
  3453  03D9  2BF6               	goto	l1685
  3454  03DA                     u1570:
  3455  03DA                     l1675:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  3458  03DA  30FF               	movlw	255
  3459  03DB  07CC               	addwf	dtoa@i,f
  3460  03DC  30FF               	movlw	255
  3461  03DD  3DCD               	addwfc	dtoa@i+1,f
  3462  03DE                     l1677:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  3465  03DE  0842               	movf	dtoa@s,w
  3466  03DF  0443               	iorwf	dtoa@s+1,w
  3467  03E0  1D03               	btfss	3,2
  3468  03E1  2BE3               	goto	u1581
  3469  03E2  2BE4               	goto	u1580
  3470  03E3                     u1581:
  3471  03E3  2BE9               	goto	l1681
  3472  03E4                     u1580:
  3473  03E4                     l1679:
  3474  03E4  302B               	movlw	43
  3475  03E5  00BB               	movwf	_dtoa$648
  3476  03E6  3000               	movlw	0
  3477  03E7  00BC               	movwf	_dtoa$648+1
  3478  03E8  2BED               	goto	l1683
  3479  03E9                     l1681:
  3480  03E9  302D               	movlw	45
  3481  03EA  00BB               	movwf	_dtoa$648
  3482  03EB  3000               	movlw	0
  3483  03EC  00BC               	movwf	_dtoa$648+1
  3484  03ED                     l1683:
  3485  03ED  083B               	movf	_dtoa$648,w
  3486  03EE  00B8               	movwf	??_dtoa
  3487  03EF  084C               	movf	dtoa@i,w
  3488  03F0  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3489  03F1  0086               	movwf	6
  3490  03F2  3001               	movlw	1	; select bank2/3
  3491  03F3  0087               	movwf	7
  3492  03F4  0838               	movf	??_dtoa,w
  3493  03F5  0081               	movwf	1
  3494  03F6                     l1685:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  3497  03F6  084C               	movf	dtoa@i,w
  3498  03F7  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3499  03F8  00B8               	movwf	??_dtoa
  3500  03F9  0838               	movf	??_dtoa,w
  3501  03FA  00A4               	movwf	pad@buf
  3502  03FB  0841               	movf	dtoa@w+1,w
  3503  03FC  00A6               	movwf	pad@p+1
  3504  03FD  0840               	movf	dtoa@w,w
  3505  03FE  00A5               	movwf	pad@p
  3506  03FF  083D               	movf	dtoa@fp,w
  3507  0400  318D  25AF  3182   	fcall	_pad
  3508  0403  0140               	movlb	0	; select bank0
  3509  0404  0825               	movf	?_pad+1,w
  3510  0405  00B1               	movwf	?_dtoa+1
  3511  0406  0824               	movf	?_pad,w
  3512  0407  00B0               	movwf	?_dtoa
  3513  0408                     l751:
  3514  0408  0008               	return
  3515  0409                     __end_of_dtoa:
  3516                           
  3517                           	psect	text6
  3518  0DAF                     __ptext6:	
  3519 ;; *************** function _pad *****************
  3520 ;; Defined at:
  3521 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  fp              1    wreg     PTR struct _IO_FILE
  3524 ;;		 -> sprintf@f(5), 
  3525 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3526 ;;		 -> dbuf(32), 
  3527 ;;  p               2    5[BANK0 ] int 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3530 ;;		 -> sprintf@f(5), 
  3531 ;;  w               2    9[BANK0 ] int 
  3532 ;;  i               2    7[BANK0 ] int 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    4[BANK0 ] int 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3542 ;;      Params:         0       3       0       0       0       0       0       0
  3543 ;;      Locals:         0       5       0       0       0       0       0       0
  3544 ;;      Temps:          1       0       0       0       0       0       0       0
  3545 ;;      Totals:         1       8       0       0       0       0       0       0
  3546 ;;Total ram usage:        9 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    3
  3549 ;; This function calls:
  3550 ;;		_fputc
  3551 ;;		_fputs
  3552 ;;		_strlen
  3553 ;; This function is called by:
  3554 ;;		_dtoa
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _pad
  3560  0DAF                     _pad:
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3564                           ;pad@fp stored from wreg
  3565  0DAF  0140               	movlb	0	; select bank0
  3566  0DB0  00AB               	movwf	pad@fp
  3567  0DB1                     l1605:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3570  0DB1  1C6E               	btfss	_flags,0
  3571  0DB2  2DB4               	goto	u1381
  3572  0DB3  2DB5               	goto	u1380
  3573  0DB4                     u1381:
  3574  0DB4  2DBD               	goto	l1609
  3575  0DB5                     u1380:
  3576  0DB5                     l1607:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3579  0DB5  082B               	movf	pad@fp,w
  3580  0DB6  00FC               	movwf	??_pad
  3581  0DB7  087C               	movf	??_pad,w
  3582  0DB8  00F8               	movwf	fputs@fp
  3583  0DB9  0824               	movf	pad@buf,w
  3584  0DBA  318C  24BD  318D   	fcall	_fputs
  3585  0DBD                     l1609:
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3588  0DBD  0140               	movlb	0	; select bank0
  3589  0DBE  1BA6               	btfsc	pad@p+1,7
  3590  0DBF  2DC1               	goto	u1391
  3591  0DC0  2DC2               	goto	u1390
  3592  0DC1                     u1391:
  3593  0DC1  2DC7               	goto	l1613
  3594  0DC2                     u1390:
  3595  0DC2                     l1611:
  3596  0DC2  0826               	movf	pad@p+1,w
  3597  0DC3  00AA               	movwf	pad@w+1
  3598  0DC4  0825               	movf	pad@p,w
  3599  0DC5  00A9               	movwf	pad@w
  3600  0DC6  2DC9               	goto	l720
  3601  0DC7                     l1613:
  3602  0DC7  01A9               	clrf	pad@w
  3603  0DC8  01AA               	clrf	pad@w+1
  3604  0DC9                     l720:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3607  0DC9  01A7               	clrf	pad@i
  3608  0DCA  01A8               	clrf	pad@i+1
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3611  0DCB  2DDD               	goto	l1619
  3612  0DCC                     l1615:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3615  0DCC  3020               	movlw	32
  3616  0DCD  00F0               	movwf	fputc@c
  3617  0DCE  3000               	movlw	0
  3618  0DCF  00F1               	movwf	fputc@c+1
  3619  0DD0  0140               	movlb	0	; select bank0
  3620  0DD1  082B               	movf	pad@fp,w
  3621  0DD2  00FC               	movwf	??_pad
  3622  0DD3  087C               	movf	??_pad,w
  3623  0DD4  00F2               	movwf	fputc@fp
  3624  0DD5  318D  2560  318D   	fcall	_fputc
  3625  0DD8                     l1617:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3628  0DD8  3001               	movlw	1
  3629  0DD9  0140               	movlb	0	; select bank0
  3630  0DDA  07A7               	addwf	pad@i,f
  3631  0DDB  3000               	movlw	0
  3632  0DDC  3DA8               	addwfc	pad@i+1,f
  3633  0DDD                     l1619:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3636  0DDD  0828               	movf	pad@i+1,w
  3637  0DDE  3A80               	xorlw	128
  3638  0DDF  00FC               	movwf	??_pad
  3639  0DE0  082A               	movf	pad@w+1,w
  3640  0DE1  3A80               	xorlw	128
  3641  0DE2  027C               	subwf	??_pad,w
  3642  0DE3  1D03               	skipz
  3643  0DE4  2DE7               	goto	u1405
  3644  0DE5  0829               	movf	pad@w,w
  3645  0DE6  0227               	subwf	pad@i,w
  3646  0DE7                     u1405:
  3647  0DE7  1C03               	skipc
  3648  0DE8  2DEA               	goto	u1401
  3649  0DE9  2DEB               	goto	u1400
  3650  0DEA                     u1401:
  3651  0DEA  2DCC               	goto	l1615
  3652  0DEB                     u1400:
  3653  0DEB                     l723:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3656  0DEB  0140               	movlb	0	; select bank0
  3657  0DEC  186E               	btfsc	_flags,0
  3658  0DED  2DEF               	goto	u1411
  3659  0DEE  2DF0               	goto	u1410
  3660  0DEF                     u1411:
  3661  0DEF  2DF8               	goto	l1623
  3662  0DF0                     u1410:
  3663  0DF0                     l1621:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3666  0DF0  082B               	movf	pad@fp,w
  3667  0DF1  00FC               	movwf	??_pad
  3668  0DF2  087C               	movf	??_pad,w
  3669  0DF3  00F8               	movwf	fputs@fp
  3670  0DF4  0824               	movf	pad@buf,w
  3671  0DF5  318C  24BD  318D   	fcall	_fputs
  3672  0DF8                     l1623:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  3675  0DF8  0140               	movlb	0	; select bank0
  3676  0DF9  0824               	movf	pad@buf,w
  3677  0DFA  3180  2005  318D   	fcall	_strlen
  3678  0DFD  0140               	movlb	0	; select bank0
  3679  0DFE  0829               	movf	pad@w,w
  3680  0DFF  0770               	addwf	?_strlen,w
  3681  0E00  00A4               	movwf	?_pad
  3682  0E01  082A               	movf	pad@w+1,w
  3683  0E02  3D71               	addwfc	?_strlen+1,w
  3684  0E03  00A5               	movwf	?_pad+1
  3685  0E04                     l725:
  3686  0E04  0008               	return
  3687  0E05                     __end_of_pad:
  3688                           
  3689                           	psect	text7
  3690  0005                     __ptext7:	
  3691 ;; *************** function _strlen *****************
  3692 ;; Defined at:
  3693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  s               1    wreg     PTR const unsigned char 
  3696 ;;		 -> dbuf(32), 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  s               1    4[COMMON] PTR const unsigned char 
  3699 ;;		 -> dbuf(32), 
  3700 ;;  a               1    3[COMMON] PTR const unsigned char 
  3701 ;;		 -> dbuf(32), 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2    0[COMMON] unsigned int 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3711 ;;      Params:         2       0       0       0       0       0       0       0
  3712 ;;      Locals:         2       0       0       0       0       0       0       0
  3713 ;;      Temps:          1       0       0       0       0       0       0       0
  3714 ;;      Totals:         5       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        5 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_pad
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _strlen
  3726  0005                     _strlen:
  3727                           
  3728                           ;incstack = 0
  3729                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3730                           ;strlen@s stored from wreg
  3731  0005  00F4               	movwf	strlen@s
  3732  0006                     l1527:
  3733  0006  0874               	movf	strlen@s,w
  3734  0007  00F2               	movwf	??_strlen
  3735  0008  0872               	movf	??_strlen,w
  3736  0009  00F3               	movwf	strlen@a
  3737  000A  280F               	goto	l1531
  3738  000B                     l1529:
  3739  000B  3001               	movlw	1
  3740  000C  00F2               	movwf	??_strlen
  3741  000D  0872               	movf	??_strlen,w
  3742  000E  07F4               	addwf	strlen@s,f
  3743  000F                     l1531:
  3744  000F  0874               	movf	strlen@s,w
  3745  0010  0086               	movwf	6
  3746  0011  3001               	movlw	1	; select bank2/3
  3747  0012  0087               	movwf	7
  3748  0013  0801               	movf	1,w
  3749  0014  1D03               	btfss	3,2
  3750  0015  2817               	goto	u1161
  3751  0016  2818               	goto	u1160
  3752  0017                     u1161:
  3753  0017  280B               	goto	l1529
  3754  0018                     u1160:
  3755  0018                     l1533:
  3756  0018  0873               	movf	strlen@a,w
  3757  0019  0274               	subwf	strlen@s,w
  3758  001A  00F0               	movwf	?_strlen
  3759  001B  01F1               	clrf	?_strlen+1
  3760  001C  1BF0               	btfsc	?_strlen,7
  3761  001D  03F1               	decf	?_strlen+1,f
  3762  001E                     l801:
  3763  001E  0008               	return
  3764  001F                     __end_of_strlen:
  3765                           
  3766                           	psect	text8
  3767  0CBD                     __ptext8:	
  3768 ;; *************** function _fputs *****************
  3769 ;; Defined at:
  3770 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  s               1    wreg     PTR const unsigned char 
  3773 ;;		 -> dbuf(32), 
  3774 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3775 ;;		 -> sprintf@f(5), 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3778 ;;		 -> dbuf(32), 
  3779 ;;  i               2    1[BANK0 ] int 
  3780 ;;  c               1    0[BANK0 ] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  2    8[COMMON] int 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3790 ;;      Params:         1       0       0       0       0       0       0       0
  3791 ;;      Locals:         0       4       0       0       0       0       0       0
  3792 ;;      Temps:          3       0       0       0       0       0       0       0
  3793 ;;      Totals:         4       4       0       0       0       0       0       0
  3794 ;;Total ram usage:        8 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    2
  3797 ;; This function calls:
  3798 ;;		_fputc
  3799 ;; This function is called by:
  3800 ;;		_pad
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _fputs
  3806  0CBD                     _fputs:
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3810                           ;fputs@s stored from wreg
  3811  0CBD  0140               	movlb	0	; select bank0
  3812  0CBE  00A3               	movwf	fputs@s
  3813  0CBF                     l1519:
  3814  0CBF  01A1               	clrf	fputs@i
  3815  0CC0  01A2               	clrf	fputs@i+1
  3816  0CC1  2CD5               	goto	l1525
  3817  0CC2                     l1521:
  3818  0CC2  0820               	movf	fputs@c,w
  3819  0CC3  00F9               	movwf	??_fputs
  3820  0CC4  01FA               	clrf	??_fputs+1
  3821  0CC5  0879               	movf	??_fputs,w
  3822  0CC6  00F0               	movwf	fputc@c
  3823  0CC7  087A               	movf	??_fputs+1,w
  3824  0CC8  00F1               	movwf	fputc@c+1
  3825  0CC9  0878               	movf	fputs@fp,w
  3826  0CCA  00FB               	movwf	??_fputs+2
  3827  0CCB  087B               	movf	??_fputs+2,w
  3828  0CCC  00F2               	movwf	fputc@fp
  3829  0CCD  318D  2560  318C   	fcall	_fputc
  3830  0CD0                     l1523:
  3831  0CD0  3001               	movlw	1
  3832  0CD1  0140               	movlb	0	; select bank0
  3833  0CD2  07A1               	addwf	fputs@i,f
  3834  0CD3  3000               	movlw	0
  3835  0CD4  3DA2               	addwfc	fputs@i+1,f
  3836  0CD5                     l1525:
  3837  0CD5  0821               	movf	fputs@i,w
  3838  0CD6  0723               	addwf	fputs@s,w
  3839  0CD7  00F9               	movwf	??_fputs
  3840  0CD8  0879               	movf	??_fputs,w
  3841  0CD9  0086               	movwf	6
  3842  0CDA  3001               	movlw	1	; select bank2/3
  3843  0CDB  0087               	movwf	7
  3844  0CDC  0801               	movf	1,w
  3845  0CDD  00FA               	movwf	??_fputs+1
  3846  0CDE  087A               	movf	??_fputs+1,w
  3847  0CDF  00A0               	movwf	fputs@c
  3848  0CE0  0820               	movf	fputs@c,w
  3849  0CE1  1D03               	btfss	3,2
  3850  0CE2  2CE4               	goto	u1151
  3851  0CE3  2CE5               	goto	u1150
  3852  0CE4                     u1151:
  3853  0CE4  2CC2               	goto	l1521
  3854  0CE5                     u1150:
  3855  0CE5                     l792:
  3856  0CE5  0008               	return
  3857  0CE6                     __end_of_fputs:
  3858                           
  3859                           	psect	text9
  3860  0D60                     __ptext9:	
  3861 ;; *************** function _fputc *****************
  3862 ;; Defined at:
  3863 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  c               2    0[COMMON] int 
  3866 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3867 ;;		 -> sprintf@f(5), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    0[COMMON] int 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3879 ;;      Params:         3       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0
  3881 ;;      Temps:          5       0       0       0       0       0       0       0
  3882 ;;      Totals:         8       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        8 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    1
  3886 ;; This function calls:
  3887 ;;		_putch
  3888 ;; This function is called by:
  3889 ;;		_pad
  3890 ;;		_vfpfcnvrt
  3891 ;;		_fputs
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function _fputc
  3897  0D60                     _fputc:
  3898  0D60                     l1503:	
  3899                           ;incstack = 0
  3900                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3901                           
  3902  0D60  0872               	movf	fputc@fp,w
  3903  0D61  1903               	btfsc	3,2
  3904  0D62  2D64               	goto	u1111
  3905  0D63  2D65               	goto	u1110
  3906  0D64                     u1111:
  3907  0D64  2D6A               	goto	l1507
  3908  0D65                     u1110:
  3909  0D65                     l1505:
  3910  0D65  0872               	movf	fputc@fp,w
  3911  0D66  1D03               	btfss	3,2
  3912  0D67  2D69               	goto	u1121
  3913  0D68  2D6A               	goto	u1120
  3914  0D69                     u1121:
  3915  0D69  2D6F               	goto	l1509
  3916  0D6A                     u1120:
  3917  0D6A                     l1507:
  3918  0D6A  0870               	movf	fputc@c,w
  3919  0D6B  318C  2457  318D   	fcall	_putch
  3920  0D6E  2DAE               	goto	l784
  3921  0D6F                     l1509:
  3922  0D6F  0872               	movf	fputc@fp,w
  3923  0D70  3E03               	addlw	3
  3924  0D71  0086               	movwf	6
  3925  0D72  0187               	clrf	7
  3926  0D73  0016               	moviw fsr1++
  3927  0D74  0401               	iorwf	1,w
  3928  0D75  1903               	btfsc	3,2
  3929  0D76  2D78               	goto	u1131
  3930  0D77  2D79               	goto	u1130
  3931  0D78                     u1131:
  3932  0D78  2D96               	goto	l1513
  3933  0D79                     u1130:
  3934  0D79                     l1511:
  3935  0D79  0872               	movf	fputc@fp,w
  3936  0D7A  3E03               	addlw	3
  3937  0D7B  0086               	movwf	6
  3938  0D7C  0187               	clrf	7
  3939  0D7D  3F40               	moviw [0]fsr1
  3940  0D7E  00F3               	movwf	??_fputc
  3941  0D7F  3F41               	moviw [1]fsr1
  3942  0D80  00F4               	movwf	??_fputc+1
  3943  0D81  0A72               	incf	fputc@fp,w
  3944  0D82  0086               	movwf	6
  3945  0D83  0187               	clrf	7
  3946  0D84  3F40               	moviw [0]fsr1
  3947  0D85  00F5               	movwf	??_fputc+2
  3948  0D86  3F41               	moviw [1]fsr1
  3949  0D87  00F6               	movwf	??_fputc+3
  3950  0D88  0876               	movf	??_fputc+3,w
  3951  0D89  3A80               	xorlw	128
  3952  0D8A  00F7               	movwf	??_fputc+4
  3953  0D8B  0874               	movf	??_fputc+1,w
  3954  0D8C  3A80               	xorlw	128
  3955  0D8D  0277               	subwf	??_fputc+4,w
  3956  0D8E  1D03               	skipz
  3957  0D8F  2D92               	goto	u1145
  3958  0D90  0873               	movf	??_fputc,w
  3959  0D91  0275               	subwf	??_fputc+2,w
  3960  0D92                     u1145:
  3961  0D92  1803               	skipnc
  3962  0D93  2D95               	goto	u1141
  3963  0D94  2D96               	goto	u1140
  3964  0D95                     u1141:
  3965  0D95  2DAE               	goto	l784
  3966  0D96                     u1140:
  3967  0D96                     l1513:
  3968  0D96  0870               	movf	fputc@c,w
  3969  0D97  00F3               	movwf	??_fputc
  3970  0D98  0872               	movf	fputc@fp,w
  3971  0D99  0086               	movwf	6
  3972  0D9A  0187               	clrf	7
  3973  0D9B  0A72               	incf	fputc@fp,w
  3974  0D9C  0084               	movwf	4
  3975  0D9D  0185               	clrf	5
  3976  0D9E  0800               	movf	0,w
  3977  0D9F  0701               	addwf	1,w
  3978  0DA0  00F4               	movwf	??_fputc+1
  3979  0DA1  0874               	movf	??_fputc+1,w
  3980  0DA2  0086               	movwf	6
  3981  0DA3  0187               	clrf	7
  3982  0DA4  0873               	movf	??_fputc,w
  3983  0DA5  0081               	movwf	1
  3984  0DA6                     l1515:
  3985  0DA6  0A72               	incf	fputc@fp,w
  3986  0DA7  0086               	movwf	6
  3987  0DA8  0187               	clrf	7
  3988  0DA9  3001               	movlw	1
  3989  0DAA  0781               	addwf	1,f
  3990  0DAB  3141               	addfsr 1,1
  3991  0DAC  1803               	skipnc
  3992  0DAD  0A81               	incf	1,f
  3993  0DAE                     l784:
  3994  0DAE  0008               	return
  3995  0DAF                     __end_of_fputc:
  3996                           
  3997                           	psect	text10
  3998  0C57                     __ptext10:	
  3999 ;; *************** function _putch *****************
  4000 ;; Defined at:
  4001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  c               1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  c               1    0[COMMON] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4015 ;;      Params:         0       0       0       0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_fputc
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _putch
  4030  0C57                     _putch:
  4031  0C57                     l795:	
  4032                           ;incstack = 0
  4033                           ; Regs used in _putch: [wreg]
  4034                           
  4035  0C57  0008               	return
  4036  0C58                     __end_of_putch:
  4037                           
  4038                           	psect	text11
  4039  0C5E                     __ptext11:	
  4040 ;; *************** function _abs *****************
  4041 ;; Defined at:
  4042 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  a               2    3[COMMON] int 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    3[COMMON] int 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4056 ;;      Params:         2       0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0
  4058 ;;      Temps:          2       0       0       0       0       0       0       0
  4059 ;;      Totals:         4       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        4 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_dtoa
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _abs
  4071  0C5E                     _abs:
  4072  0C5E                     l1627:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _abs: [wreg+status,2+status,0]
  4075                           
  4076  0C5E  0874               	movf	abs@a+1,w
  4077  0C5F  3A80               	xorlw	128
  4078  0C60  00F5               	movwf	??_abs
  4079  0C61  3080               	movlw	128
  4080  0C62  0275               	subwf	??_abs,w
  4081  0C63  1D03               	skipz
  4082  0C64  2C67               	goto	u1425
  4083  0C65  3001               	movlw	1
  4084  0C66  0273               	subwf	abs@a,w
  4085  0C67                     u1425:
  4086  0C67  1803               	skipnc
  4087  0C68  2C6A               	goto	u1421
  4088  0C69  2C6B               	goto	u1420
  4089  0C6A                     u1421:
  4090  0C6A  2C77               	goto	l769
  4091  0C6B                     u1420:
  4092  0C6B                     l1629:
  4093  0C6B  0973               	comf	abs@a,w
  4094  0C6C  00F5               	movwf	??_abs
  4095  0C6D  0974               	comf	abs@a+1,w
  4096  0C6E  00F6               	movwf	??_abs+1
  4097  0C6F  0AF5               	incf	??_abs,f
  4098  0C70  1903               	skipnz
  4099  0C71  0AF6               	incf	??_abs+1,f
  4100  0C72  0875               	movf	??_abs,w
  4101  0C73  00F3               	movwf	?_abs
  4102  0C74  0876               	movf	??_abs+1,w
  4103  0C75  00F4               	movwf	?_abs+1
  4104  0C76  2C77               	goto	l772
  4105  0C77                     l769:
  4106  0C77                     l772:
  4107  0C77  0008               	return
  4108  0C78                     __end_of_abs:
  4109                           
  4110                           	psect	text12
  4111  00B2                     __ptext12:	
  4112 ;; *************** function ___aomod *****************
  4113 ;; Defined at:
  4114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  divisor         8    0[BANK0 ] long long 
  4117 ;;  dividend        8    8[BANK0 ] long long 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  sign            1    2[COMMON] unsigned char 
  4120 ;;  counter         1    1[COMMON] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  8    0[BANK0 ] long long 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4130 ;;      Params:         0      16       0       0       0       0       0       0
  4131 ;;      Locals:         2       0       0       0       0       0       0       0
  4132 ;;      Temps:          1       0       0       0       0       0       0       0
  4133 ;;      Totals:         3      16       0       0       0       0       0       0
  4134 ;;Total ram usage:       19 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_dtoa
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function ___aomod
  4145  00B2                     ___aomod:
  4146  00B2                     l1575:	
  4147                           ;incstack = 0
  4148                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4149                           
  4150  00B2  01F2               	clrf	___aomod@sign
  4151  00B3                     l1577:
  4152  00B3  3028               	movlw	low ___aomod@dividend
  4153  00B4  0086               	movwf	6
  4154  00B5  3000               	movlw	high ___aomod@dividend
  4155  00B6  0087               	movwf	7
  4156  00B7  3F47               	moviw [7]fsr1
  4157  00B8  00F0               	movwf	??___aomod
  4158  00B9  1FF0               	btfss	??___aomod,7
  4159  00BA  28BC               	goto	u1281
  4160  00BB  28BD               	goto	u1280
  4161  00BC                     u1281:
  4162  00BC  28DE               	goto	l1581
  4163  00BD                     u1280:
  4164  00BD                     l1579:
  4165  00BD  0140               	movlb	0	; select bank0
  4166  00BE  09A8               	comf	___aomod@dividend,f
  4167  00BF  09A9               	comf	___aomod@dividend+1,f
  4168  00C0  09AA               	comf	___aomod@dividend+2,f
  4169  00C1  09AB               	comf	___aomod@dividend+3,f
  4170  00C2  09AC               	comf	___aomod@dividend+4,f
  4171  00C3  09AD               	comf	___aomod@dividend+5,f
  4172  00C4  09AE               	comf	___aomod@dividend+6,f
  4173  00C5  09AF               	comf	___aomod@dividend+7,f
  4174  00C6  0AA8               	incf	___aomod@dividend,f
  4175  00C7  1D03               	skipz
  4176  00C8  28DC               	goto	u129lld
  4177  00C9  0AA9               	incf	___aomod@dividend+1,f
  4178  00CA  1D03               	skipz
  4179  00CB  28DC               	goto	u129lld
  4180  00CC  0AAA               	incf	___aomod@dividend+2,f
  4181  00CD  1D03               	skipz
  4182  00CE  28DC               	goto	u129lld
  4183  00CF  0AAB               	incf	___aomod@dividend+3,f
  4184  00D0  1D03               	skipz
  4185  00D1  28DC               	goto	u129lld
  4186  00D2  0AAC               	incf	___aomod@dividend+4,f
  4187  00D3  1D03               	skipz
  4188  00D4  28DC               	goto	u129lld
  4189  00D5  0AAD               	incf	___aomod@dividend+5,f
  4190  00D6  1D03               	skipz
  4191  00D7  28DC               	goto	u129lld
  4192  00D8  0AAE               	incf	___aomod@dividend+6,f
  4193  00D9  1D03               	skipz
  4194  00DA  28DC               	goto	u129lld
  4195  00DB  0AAF               	incf	___aomod@dividend+7,f
  4196  00DC                     u129lld:
  4197  00DC  01F2               	clrf	___aomod@sign
  4198  00DD  0AF2               	incf	___aomod@sign,f
  4199  00DE                     l1581:
  4200  00DE  3020               	movlw	low ___aomod@divisor
  4201  00DF  0086               	movwf	6
  4202  00E0  3000               	movlw	high ___aomod@divisor
  4203  00E1  0087               	movwf	7
  4204  00E2  3F47               	moviw [7]fsr1
  4205  00E3  00F0               	movwf	??___aomod
  4206  00E4  1FF0               	btfss	??___aomod,7
  4207  00E5  28E7               	goto	u1301
  4208  00E6  28E8               	goto	u1300
  4209  00E7                     u1301:
  4210  00E7  2907               	goto	l1585
  4211  00E8                     u1300:
  4212  00E8                     l1583:
  4213  00E8  0140               	movlb	0	; select bank0
  4214  00E9  09A0               	comf	___aomod@divisor,f
  4215  00EA  09A1               	comf	___aomod@divisor+1,f
  4216  00EB  09A2               	comf	___aomod@divisor+2,f
  4217  00EC  09A3               	comf	___aomod@divisor+3,f
  4218  00ED  09A4               	comf	___aomod@divisor+4,f
  4219  00EE  09A5               	comf	___aomod@divisor+5,f
  4220  00EF  09A6               	comf	___aomod@divisor+6,f
  4221  00F0  09A7               	comf	___aomod@divisor+7,f
  4222  00F1  0AA0               	incf	___aomod@divisor,f
  4223  00F2  1D03               	skipz
  4224  00F3  2907               	goto	u131lld
  4225  00F4  0AA1               	incf	___aomod@divisor+1,f
  4226  00F5  1D03               	skipz
  4227  00F6  2907               	goto	u131lld
  4228  00F7  0AA2               	incf	___aomod@divisor+2,f
  4229  00F8  1D03               	skipz
  4230  00F9  2907               	goto	u131lld
  4231  00FA  0AA3               	incf	___aomod@divisor+3,f
  4232  00FB  1D03               	skipz
  4233  00FC  2907               	goto	u131lld
  4234  00FD  0AA4               	incf	___aomod@divisor+4,f
  4235  00FE  1D03               	skipz
  4236  00FF  2907               	goto	u131lld
  4237  0100  0AA5               	incf	___aomod@divisor+5,f
  4238  0101  1D03               	skipz
  4239  0102  2907               	goto	u131lld
  4240  0103  0AA6               	incf	___aomod@divisor+6,f
  4241  0104  1D03               	skipz
  4242  0105  2907               	goto	u131lld
  4243  0106  0AA7               	incf	___aomod@divisor+7,f
  4244  0107                     u131lld:
  4245  0107                     l1585:
  4246  0107  0140               	movlb	0	; select bank0
  4247  0108  0820               	movf	___aomod@divisor,w
  4248  0109  0421               	iorwf	___aomod@divisor+1,w
  4249  010A  0422               	iorwf	___aomod@divisor+2,w
  4250  010B  0423               	iorwf	___aomod@divisor+3,w
  4251  010C  0424               	iorwf	___aomod@divisor+4,w
  4252  010D  0425               	iorwf	___aomod@divisor+5,w
  4253  010E  0426               	iorwf	___aomod@divisor+6,w
  4254  010F  0427               	iorwf	___aomod@divisor+7,w
  4255  0110  1903               	skipnz
  4256  0111  2913               	goto	u1321
  4257  0112  2914               	goto	u1320
  4258  0113                     u1321:
  4259  0113  2967               	goto	l1601
  4260  0114                     u1320:
  4261  0114                     l1587:
  4262  0114  01F1               	clrf	___aomod@counter
  4263  0115  0AF1               	incf	___aomod@counter,f
  4264  0116  2923               	goto	l1593
  4265  0117                     l1589:
  4266  0117  35A0               	lslf	___aomod@divisor,f
  4267  0118  0DA1               	rlf	___aomod@divisor+1,f
  4268  0119  0DA2               	rlf	___aomod@divisor+2,f
  4269  011A  0DA3               	rlf	___aomod@divisor+3,f
  4270  011B  0DA4               	rlf	___aomod@divisor+4,f
  4271  011C  0DA5               	rlf	___aomod@divisor+5,f
  4272  011D  0DA6               	rlf	___aomod@divisor+6,f
  4273  011E  0DA7               	rlf	___aomod@divisor+7,f
  4274  011F                     l1591:
  4275  011F  3001               	movlw	1
  4276  0120  00F0               	movwf	??___aomod
  4277  0121  0870               	movf	??___aomod,w
  4278  0122  07F1               	addwf	___aomod@counter,f
  4279  0123                     l1593:
  4280  0123  1FA7               	btfss	___aomod@divisor+7,7
  4281  0124  2926               	goto	u1331
  4282  0125  2927               	goto	u1330
  4283  0126                     u1331:
  4284  0126  2917               	goto	l1589
  4285  0127                     u1330:
  4286  0127                     l1595:
  4287  0127  0827               	movf	___aomod@divisor+7,w
  4288  0128  022F               	subwf	___aomod@dividend+7,w
  4289  0129  1D03               	skipz
  4290  012A  2945               	goto	u1345
  4291  012B  0826               	movf	___aomod@divisor+6,w
  4292  012C  022E               	subwf	___aomod@dividend+6,w
  4293  012D  1D03               	skipz
  4294  012E  2945               	goto	u1345
  4295  012F  0825               	movf	___aomod@divisor+5,w
  4296  0130  022D               	subwf	___aomod@dividend+5,w
  4297  0131  1D03               	skipz
  4298  0132  2945               	goto	u1345
  4299  0133  0824               	movf	___aomod@divisor+4,w
  4300  0134  022C               	subwf	___aomod@dividend+4,w
  4301  0135  1D03               	skipz
  4302  0136  2945               	goto	u1345
  4303  0137  0823               	movf	___aomod@divisor+3,w
  4304  0138  022B               	subwf	___aomod@dividend+3,w
  4305  0139  1D03               	skipz
  4306  013A  2945               	goto	u1345
  4307  013B  0822               	movf	___aomod@divisor+2,w
  4308  013C  022A               	subwf	___aomod@dividend+2,w
  4309  013D  1D03               	skipz
  4310  013E  2945               	goto	u1345
  4311  013F  0821               	movf	___aomod@divisor+1,w
  4312  0140  0229               	subwf	___aomod@dividend+1,w
  4313  0141  1D03               	skipz
  4314  0142  2945               	goto	u1345
  4315  0143  0820               	movf	___aomod@divisor,w
  4316  0144  0228               	subwf	___aomod@dividend,w
  4317  0145                     u1345:
  4318  0145  1C03               	skipc
  4319  0146  2948               	goto	u1341
  4320  0147  2949               	goto	u1340
  4321  0148                     u1341:
  4322  0148  2959               	goto	l1599
  4323  0149                     u1340:
  4324  0149                     l1597:
  4325  0149  0820               	movf	___aomod@divisor,w
  4326  014A  02A8               	subwf	___aomod@dividend,f
  4327  014B  0821               	movf	___aomod@divisor+1,w
  4328  014C  3BA9               	subwfb	___aomod@dividend+1,f
  4329  014D  0822               	movf	___aomod@divisor+2,w
  4330  014E  3BAA               	subwfb	___aomod@dividend+2,f
  4331  014F  0823               	movf	___aomod@divisor+3,w
  4332  0150  3BAB               	subwfb	___aomod@dividend+3,f
  4333  0151  0824               	movf	___aomod@divisor+4,w
  4334  0152  3BAC               	subwfb	___aomod@dividend+4,f
  4335  0153  0825               	movf	___aomod@divisor+5,w
  4336  0154  3BAD               	subwfb	___aomod@dividend+5,f
  4337  0155  0826               	movf	___aomod@divisor+6,w
  4338  0156  3BAE               	subwfb	___aomod@dividend+6,f
  4339  0157  0827               	movf	___aomod@divisor+7,w
  4340  0158  3BAF               	subwfb	___aomod@dividend+7,f
  4341  0159                     l1599:
  4342  0159  36A7               	lsrf	___aomod@divisor+7,f
  4343  015A  0CA6               	rrf	___aomod@divisor+6,f
  4344  015B  0CA5               	rrf	___aomod@divisor+5,f
  4345  015C  0CA4               	rrf	___aomod@divisor+4,f
  4346  015D  0CA3               	rrf	___aomod@divisor+3,f
  4347  015E  0CA2               	rrf	___aomod@divisor+2,f
  4348  015F  0CA1               	rrf	___aomod@divisor+1,f
  4349  0160  0CA0               	rrf	___aomod@divisor,f
  4350  0161  3001               	movlw	1
  4351  0162  02F1               	subwf	___aomod@counter,f
  4352  0163  1D03               	btfss	3,2
  4353  0164  2966               	goto	u1351
  4354  0165  2967               	goto	u1350
  4355  0166                     u1351:
  4356  0166  2927               	goto	l1595
  4357  0167                     u1350:
  4358  0167                     l1601:
  4359  0167  0872               	movf	___aomod@sign,w
  4360  0168  1903               	btfsc	3,2
  4361  0169  296B               	goto	u1361
  4362  016A  296C               	goto	u1360
  4363  016B                     u1361:
  4364  016B  298A               	goto	l343
  4365  016C                     u1360:
  4366  016C                     l1603:
  4367  016C  09A8               	comf	___aomod@dividend,f
  4368  016D  09A9               	comf	___aomod@dividend+1,f
  4369  016E  09AA               	comf	___aomod@dividend+2,f
  4370  016F  09AB               	comf	___aomod@dividend+3,f
  4371  0170  09AC               	comf	___aomod@dividend+4,f
  4372  0171  09AD               	comf	___aomod@dividend+5,f
  4373  0172  09AE               	comf	___aomod@dividend+6,f
  4374  0173  09AF               	comf	___aomod@dividend+7,f
  4375  0174  0AA8               	incf	___aomod@dividend,f
  4376  0175  1D03               	skipz
  4377  0176  298A               	goto	u137lld
  4378  0177  0AA9               	incf	___aomod@dividend+1,f
  4379  0178  1D03               	skipz
  4380  0179  298A               	goto	u137lld
  4381  017A  0AAA               	incf	___aomod@dividend+2,f
  4382  017B  1D03               	skipz
  4383  017C  298A               	goto	u137lld
  4384  017D  0AAB               	incf	___aomod@dividend+3,f
  4385  017E  1D03               	skipz
  4386  017F  298A               	goto	u137lld
  4387  0180  0AAC               	incf	___aomod@dividend+4,f
  4388  0181  1D03               	skipz
  4389  0182  298A               	goto	u137lld
  4390  0183  0AAD               	incf	___aomod@dividend+5,f
  4391  0184  1D03               	skipz
  4392  0185  298A               	goto	u137lld
  4393  0186  0AAE               	incf	___aomod@dividend+6,f
  4394  0187  1D03               	skipz
  4395  0188  298A               	goto	u137lld
  4396  0189  0AAF               	incf	___aomod@dividend+7,f
  4397  018A                     u137lld:
  4398  018A                     l343:
  4399  018A  0140               	movlb	0	; select bank0
  4400  018B  0828               	movf	___aomod@dividend,w
  4401  018C  00A0               	movwf	?___aomod
  4402  018D  0829               	movf	___aomod@dividend+1,w
  4403  018E  00A1               	movwf	?___aomod+1
  4404  018F  082A               	movf	___aomod@dividend+2,w
  4405  0190  00A2               	movwf	?___aomod+2
  4406  0191  082B               	movf	___aomod@dividend+3,w
  4407  0192  00A3               	movwf	?___aomod+3
  4408  0193  082C               	movf	___aomod@dividend+4,w
  4409  0194  00A4               	movwf	?___aomod+4
  4410  0195  082D               	movf	___aomod@dividend+5,w
  4411  0196  00A5               	movwf	?___aomod+5
  4412  0197  082E               	movf	___aomod@dividend+6,w
  4413  0198  00A6               	movwf	?___aomod+6
  4414  0199  082F               	movf	___aomod@dividend+7,w
  4415  019A  00A7               	movwf	?___aomod+7
  4416  019B                     l344:
  4417  019B  0008               	return
  4418  019C                     __end_of___aomod:
  4419                           
  4420                           	psect	text13
  4421  019C                     __ptext13:	
  4422 ;; *************** function ___aodiv *****************
  4423 ;; Defined at:
  4424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  divisor         8    0[BANK0 ] long long 
  4427 ;;  dividend        8    8[BANK0 ] long long 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  quotient        8    3[COMMON] long long 
  4430 ;;  sign            1    2[COMMON] unsigned char 
  4431 ;;  counter         1    1[COMMON] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  8    0[BANK0 ] long long 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4441 ;;      Params:         0      16       0       0       0       0       0       0
  4442 ;;      Locals:        10       0       0       0       0       0       0       0
  4443 ;;      Temps:          1       0       0       0       0       0       0       0
  4444 ;;      Totals:        11      16       0       0       0       0       0       0
  4445 ;;Total ram usage:       27 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_dtoa
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function ___aodiv
  4456  019C                     ___aodiv:
  4457  019C                     l1537:	
  4458                           ;incstack = 0
  4459                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4460                           
  4461  019C  01F2               	clrf	___aodiv@sign
  4462  019D                     l1539:
  4463  019D  3020               	movlw	low ___aodiv@divisor
  4464  019E  0086               	movwf	6
  4465  019F  3000               	movlw	high ___aodiv@divisor
  4466  01A0  0087               	movwf	7
  4467  01A1  3F47               	moviw [7]fsr1
  4468  01A2  00F0               	movwf	??___aodiv
  4469  01A3  1FF0               	btfss	??___aodiv,7
  4470  01A4  29A6               	goto	u1171
  4471  01A5  29A7               	goto	u1170
  4472  01A6                     u1171:
  4473  01A6  29C8               	goto	l1543
  4474  01A7                     u1170:
  4475  01A7                     l1541:
  4476  01A7  0140               	movlb	0	; select bank0
  4477  01A8  09A0               	comf	___aodiv@divisor,f
  4478  01A9  09A1               	comf	___aodiv@divisor+1,f
  4479  01AA  09A2               	comf	___aodiv@divisor+2,f
  4480  01AB  09A3               	comf	___aodiv@divisor+3,f
  4481  01AC  09A4               	comf	___aodiv@divisor+4,f
  4482  01AD  09A5               	comf	___aodiv@divisor+5,f
  4483  01AE  09A6               	comf	___aodiv@divisor+6,f
  4484  01AF  09A7               	comf	___aodiv@divisor+7,f
  4485  01B0  0AA0               	incf	___aodiv@divisor,f
  4486  01B1  1D03               	skipz
  4487  01B2  29C6               	goto	u118lld
  4488  01B3  0AA1               	incf	___aodiv@divisor+1,f
  4489  01B4  1D03               	skipz
  4490  01B5  29C6               	goto	u118lld
  4491  01B6  0AA2               	incf	___aodiv@divisor+2,f
  4492  01B7  1D03               	skipz
  4493  01B8  29C6               	goto	u118lld
  4494  01B9  0AA3               	incf	___aodiv@divisor+3,f
  4495  01BA  1D03               	skipz
  4496  01BB  29C6               	goto	u118lld
  4497  01BC  0AA4               	incf	___aodiv@divisor+4,f
  4498  01BD  1D03               	skipz
  4499  01BE  29C6               	goto	u118lld
  4500  01BF  0AA5               	incf	___aodiv@divisor+5,f
  4501  01C0  1D03               	skipz
  4502  01C1  29C6               	goto	u118lld
  4503  01C2  0AA6               	incf	___aodiv@divisor+6,f
  4504  01C3  1D03               	skipz
  4505  01C4  29C6               	goto	u118lld
  4506  01C5  0AA7               	incf	___aodiv@divisor+7,f
  4507  01C6                     u118lld:
  4508  01C6  01F2               	clrf	___aodiv@sign
  4509  01C7  0AF2               	incf	___aodiv@sign,f
  4510  01C8                     l1543:
  4511  01C8  3028               	movlw	low ___aodiv@dividend
  4512  01C9  0086               	movwf	6
  4513  01CA  3000               	movlw	high ___aodiv@dividend
  4514  01CB  0087               	movwf	7
  4515  01CC  3F47               	moviw [7]fsr1
  4516  01CD  00F0               	movwf	??___aodiv
  4517  01CE  1FF0               	btfss	??___aodiv,7
  4518  01CF  29D1               	goto	u1191
  4519  01D0  29D2               	goto	u1190
  4520  01D1                     u1191:
  4521  01D1  29F5               	goto	l1549
  4522  01D2                     u1190:
  4523  01D2                     l1545:
  4524  01D2  0140               	movlb	0	; select bank0
  4525  01D3  09A8               	comf	___aodiv@dividend,f
  4526  01D4  09A9               	comf	___aodiv@dividend+1,f
  4527  01D5  09AA               	comf	___aodiv@dividend+2,f
  4528  01D6  09AB               	comf	___aodiv@dividend+3,f
  4529  01D7  09AC               	comf	___aodiv@dividend+4,f
  4530  01D8  09AD               	comf	___aodiv@dividend+5,f
  4531  01D9  09AE               	comf	___aodiv@dividend+6,f
  4532  01DA  09AF               	comf	___aodiv@dividend+7,f
  4533  01DB  0AA8               	incf	___aodiv@dividend,f
  4534  01DC  1D03               	skipz
  4535  01DD  29F1               	goto	u120lld
  4536  01DE  0AA9               	incf	___aodiv@dividend+1,f
  4537  01DF  1D03               	skipz
  4538  01E0  29F1               	goto	u120lld
  4539  01E1  0AAA               	incf	___aodiv@dividend+2,f
  4540  01E2  1D03               	skipz
  4541  01E3  29F1               	goto	u120lld
  4542  01E4  0AAB               	incf	___aodiv@dividend+3,f
  4543  01E5  1D03               	skipz
  4544  01E6  29F1               	goto	u120lld
  4545  01E7  0AAC               	incf	___aodiv@dividend+4,f
  4546  01E8  1D03               	skipz
  4547  01E9  29F1               	goto	u120lld
  4548  01EA  0AAD               	incf	___aodiv@dividend+5,f
  4549  01EB  1D03               	skipz
  4550  01EC  29F1               	goto	u120lld
  4551  01ED  0AAE               	incf	___aodiv@dividend+6,f
  4552  01EE  1D03               	skipz
  4553  01EF  29F1               	goto	u120lld
  4554  01F0  0AAF               	incf	___aodiv@dividend+7,f
  4555  01F1                     u120lld:
  4556  01F1                     l1547:
  4557  01F1  3001               	movlw	1
  4558  01F2  00F0               	movwf	??___aodiv
  4559  01F3  0870               	movf	??___aodiv,w
  4560  01F4  06F2               	xorwf	___aodiv@sign,f
  4561  01F5                     l1549:
  4562  01F5  3073               	movlw	low ___aodiv@quotient
  4563  01F6  0086               	movwf	6
  4564  01F7  3000               	movlw	high ___aodiv@quotient
  4565  01F8  0087               	movwf	7
  4566  01F9  3008               	movlw	8
  4567  01FA  00F0               	movwf	??___aodiv
  4568  01FB  3000               	movlw	0
  4569  01FC                     u1210:
  4570  01FC  001E               	movwi fsr1++
  4571  01FD  0BF0               	decfsz	??___aodiv,f
  4572  01FE  29FC               	goto	u1210
  4573  01FF                     l1551:
  4574  01FF  0140               	movlb	0	; select bank0
  4575  0200  0820               	movf	___aodiv@divisor,w
  4576  0201  0421               	iorwf	___aodiv@divisor+1,w
  4577  0202  0422               	iorwf	___aodiv@divisor+2,w
  4578  0203  0423               	iorwf	___aodiv@divisor+3,w
  4579  0204  0424               	iorwf	___aodiv@divisor+4,w
  4580  0205  0425               	iorwf	___aodiv@divisor+5,w
  4581  0206  0426               	iorwf	___aodiv@divisor+6,w
  4582  0207  0427               	iorwf	___aodiv@divisor+7,w
  4583  0208  1903               	skipnz
  4584  0209  2A0B               	goto	u1221
  4585  020A  2A0C               	goto	u1220
  4586  020B                     u1221:
  4587  020B  2A68               	goto	l1571
  4588  020C                     u1220:
  4589  020C                     l1553:
  4590  020C  01F1               	clrf	___aodiv@counter
  4591  020D  0AF1               	incf	___aodiv@counter,f
  4592  020E  2A1B               	goto	l1559
  4593  020F                     l1555:
  4594  020F  35A0               	lslf	___aodiv@divisor,f
  4595  0210  0DA1               	rlf	___aodiv@divisor+1,f
  4596  0211  0DA2               	rlf	___aodiv@divisor+2,f
  4597  0212  0DA3               	rlf	___aodiv@divisor+3,f
  4598  0213  0DA4               	rlf	___aodiv@divisor+4,f
  4599  0214  0DA5               	rlf	___aodiv@divisor+5,f
  4600  0215  0DA6               	rlf	___aodiv@divisor+6,f
  4601  0216  0DA7               	rlf	___aodiv@divisor+7,f
  4602  0217                     l1557:
  4603  0217  3001               	movlw	1
  4604  0218  00F0               	movwf	??___aodiv
  4605  0219  0870               	movf	??___aodiv,w
  4606  021A  07F1               	addwf	___aodiv@counter,f
  4607  021B                     l1559:
  4608  021B  1FA7               	btfss	___aodiv@divisor+7,7
  4609  021C  2A1E               	goto	u1231
  4610  021D  2A1F               	goto	u1230
  4611  021E                     u1231:
  4612  021E  2A0F               	goto	l1555
  4613  021F                     u1230:
  4614  021F                     l1561:
  4615  021F  35F3               	lslf	___aodiv@quotient,f
  4616  0220  0DF4               	rlf	___aodiv@quotient+1,f
  4617  0221  0DF5               	rlf	___aodiv@quotient+2,f
  4618  0222  0DF6               	rlf	___aodiv@quotient+3,f
  4619  0223  0DF7               	rlf	___aodiv@quotient+4,f
  4620  0224  0DF8               	rlf	___aodiv@quotient+5,f
  4621  0225  0DF9               	rlf	___aodiv@quotient+6,f
  4622  0226  0DFA               	rlf	___aodiv@quotient+7,f
  4623  0227                     l1563:
  4624  0227  0827               	movf	___aodiv@divisor+7,w
  4625  0228  022F               	subwf	___aodiv@dividend+7,w
  4626  0229  1D03               	skipz
  4627  022A  2A45               	goto	u1245
  4628  022B  0826               	movf	___aodiv@divisor+6,w
  4629  022C  022E               	subwf	___aodiv@dividend+6,w
  4630  022D  1D03               	skipz
  4631  022E  2A45               	goto	u1245
  4632  022F  0825               	movf	___aodiv@divisor+5,w
  4633  0230  022D               	subwf	___aodiv@dividend+5,w
  4634  0231  1D03               	skipz
  4635  0232  2A45               	goto	u1245
  4636  0233  0824               	movf	___aodiv@divisor+4,w
  4637  0234  022C               	subwf	___aodiv@dividend+4,w
  4638  0235  1D03               	skipz
  4639  0236  2A45               	goto	u1245
  4640  0237  0823               	movf	___aodiv@divisor+3,w
  4641  0238  022B               	subwf	___aodiv@dividend+3,w
  4642  0239  1D03               	skipz
  4643  023A  2A45               	goto	u1245
  4644  023B  0822               	movf	___aodiv@divisor+2,w
  4645  023C  022A               	subwf	___aodiv@dividend+2,w
  4646  023D  1D03               	skipz
  4647  023E  2A45               	goto	u1245
  4648  023F  0821               	movf	___aodiv@divisor+1,w
  4649  0240  0229               	subwf	___aodiv@dividend+1,w
  4650  0241  1D03               	skipz
  4651  0242  2A45               	goto	u1245
  4652  0243  0820               	movf	___aodiv@divisor,w
  4653  0244  0228               	subwf	___aodiv@dividend,w
  4654  0245                     u1245:
  4655  0245  1C03               	skipc
  4656  0246  2A48               	goto	u1241
  4657  0247  2A49               	goto	u1240
  4658  0248                     u1241:
  4659  0248  2A5A               	goto	l1569
  4660  0249                     u1240:
  4661  0249                     l1565:
  4662  0249  0820               	movf	___aodiv@divisor,w
  4663  024A  02A8               	subwf	___aodiv@dividend,f
  4664  024B  0821               	movf	___aodiv@divisor+1,w
  4665  024C  3BA9               	subwfb	___aodiv@dividend+1,f
  4666  024D  0822               	movf	___aodiv@divisor+2,w
  4667  024E  3BAA               	subwfb	___aodiv@dividend+2,f
  4668  024F  0823               	movf	___aodiv@divisor+3,w
  4669  0250  3BAB               	subwfb	___aodiv@dividend+3,f
  4670  0251  0824               	movf	___aodiv@divisor+4,w
  4671  0252  3BAC               	subwfb	___aodiv@dividend+4,f
  4672  0253  0825               	movf	___aodiv@divisor+5,w
  4673  0254  3BAD               	subwfb	___aodiv@dividend+5,f
  4674  0255  0826               	movf	___aodiv@divisor+6,w
  4675  0256  3BAE               	subwfb	___aodiv@dividend+6,f
  4676  0257  0827               	movf	___aodiv@divisor+7,w
  4677  0258  3BAF               	subwfb	___aodiv@dividend+7,f
  4678  0259                     l1567:
  4679  0259  1473               	bsf	___aodiv@quotient,0
  4680  025A                     l1569:
  4681  025A  36A7               	lsrf	___aodiv@divisor+7,f
  4682  025B  0CA6               	rrf	___aodiv@divisor+6,f
  4683  025C  0CA5               	rrf	___aodiv@divisor+5,f
  4684  025D  0CA4               	rrf	___aodiv@divisor+4,f
  4685  025E  0CA3               	rrf	___aodiv@divisor+3,f
  4686  025F  0CA2               	rrf	___aodiv@divisor+2,f
  4687  0260  0CA1               	rrf	___aodiv@divisor+1,f
  4688  0261  0CA0               	rrf	___aodiv@divisor,f
  4689  0262  3001               	movlw	1
  4690  0263  02F1               	subwf	___aodiv@counter,f
  4691  0264  1D03               	btfss	3,2
  4692  0265  2A67               	goto	u1251
  4693  0266  2A68               	goto	u1250
  4694  0267                     u1251:
  4695  0267  2A1F               	goto	l1561
  4696  0268                     u1250:
  4697  0268                     l1571:
  4698  0268  0872               	movf	___aodiv@sign,w
  4699  0269  1903               	btfsc	3,2
  4700  026A  2A6C               	goto	u1261
  4701  026B  2A6D               	goto	u1260
  4702  026C                     u1261:
  4703  026C  2A8B               	goto	l330
  4704  026D                     u1260:
  4705  026D                     l1573:
  4706  026D  09F3               	comf	___aodiv@quotient,f
  4707  026E  09F4               	comf	___aodiv@quotient+1,f
  4708  026F  09F5               	comf	___aodiv@quotient+2,f
  4709  0270  09F6               	comf	___aodiv@quotient+3,f
  4710  0271  09F7               	comf	___aodiv@quotient+4,f
  4711  0272  09F8               	comf	___aodiv@quotient+5,f
  4712  0273  09F9               	comf	___aodiv@quotient+6,f
  4713  0274  09FA               	comf	___aodiv@quotient+7,f
  4714  0275  0AF3               	incf	___aodiv@quotient,f
  4715  0276  1D03               	skipz
  4716  0277  2A8B               	goto	u127lld
  4717  0278  0AF4               	incf	___aodiv@quotient+1,f
  4718  0279  1D03               	skipz
  4719  027A  2A8B               	goto	u127lld
  4720  027B  0AF5               	incf	___aodiv@quotient+2,f
  4721  027C  1D03               	skipz
  4722  027D  2A8B               	goto	u127lld
  4723  027E  0AF6               	incf	___aodiv@quotient+3,f
  4724  027F  1D03               	skipz
  4725  0280  2A8B               	goto	u127lld
  4726  0281  0AF7               	incf	___aodiv@quotient+4,f
  4727  0282  1D03               	skipz
  4728  0283  2A8B               	goto	u127lld
  4729  0284  0AF8               	incf	___aodiv@quotient+5,f
  4730  0285  1D03               	skipz
  4731  0286  2A8B               	goto	u127lld
  4732  0287  0AF9               	incf	___aodiv@quotient+6,f
  4733  0288  1D03               	skipz
  4734  0289  2A8B               	goto	u127lld
  4735  028A  0AFA               	incf	___aodiv@quotient+7,f
  4736  028B                     u127lld:
  4737  028B                     l330:
  4738  028B  0873               	movf	___aodiv@quotient,w
  4739  028C  0140               	movlb	0	; select bank0
  4740  028D  00A0               	movwf	?___aodiv
  4741  028E  0874               	movf	___aodiv@quotient+1,w
  4742  028F  00A1               	movwf	?___aodiv+1
  4743  0290  0875               	movf	___aodiv@quotient+2,w
  4744  0291  00A2               	movwf	?___aodiv+2
  4745  0292  0876               	movf	___aodiv@quotient+3,w
  4746  0293  00A3               	movwf	?___aodiv+3
  4747  0294  0877               	movf	___aodiv@quotient+4,w
  4748  0295  00A4               	movwf	?___aodiv+4
  4749  0296  0878               	movf	___aodiv@quotient+5,w
  4750  0297  00A5               	movwf	?___aodiv+5
  4751  0298  0879               	movf	___aodiv@quotient+6,w
  4752  0299  00A6               	movwf	?___aodiv+6
  4753  029A  087A               	movf	___aodiv@quotient+7,w
  4754  029B  00A7               	movwf	?___aodiv+7
  4755  029C                     l331:
  4756  029C  0008               	return
  4757  029D                     __end_of___aodiv:
  4758                           
  4759                           	psect	text14
  4760  0D17                     __ptext14:	
  4761 ;; *************** function _Lcd_Out2 *****************
  4762 ;; Defined at:
  4763 ;;		line 116 in file "./flex_lcd.h"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  y               1    wreg     unsigned char 
  4766 ;;  x               1    3[COMMON] unsigned char 
  4767 ;;  buffer          1    4[COMMON] PTR unsigned char 
  4768 ;;		 -> s(20), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  y               1    7[COMMON] unsigned char 
  4771 ;;  data            1    8[COMMON] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4781 ;;      Params:         2       0       0       0       0       0       0       0
  4782 ;;      Locals:         2       0       0       0       0       0       0       0
  4783 ;;      Temps:          2       0       0       0       0       0       0       0
  4784 ;;      Totals:         6       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        6 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    1
  4788 ;; This function calls:
  4789 ;;		_Lcd_Chr_CP
  4790 ;;		_Lcd_Cmd
  4791 ;; This function is called by:
  4792 ;;		_cambio
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _Lcd_Out2
  4799  0D17                     _Lcd_Out2:
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4803                           ;Lcd_Out2@y stored from wreg
  4804  0D17  00F7               	movwf	Lcd_Out2@y
  4805  0D18                     l1807:
  4806                           
  4807                           ;./flex_lcd.h: 116: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 117: {;./flex_lcd.h: 118: unsigned char data;;./flex_lcd.h: 119: switch (y)
  4808  0D18  2D31               	goto	l1819
  4809  0D19                     l1809:
  4810  0D19  0873               	movf	Lcd_Out2@x,w
  4811  0D1A  3E80               	addlw	128
  4812  0D1B  00F5               	movwf	??_Lcd_Out2
  4813  0D1C  0875               	movf	??_Lcd_Out2,w
  4814  0D1D  00F8               	movwf	Lcd_Out2@data
  4815  0D1E  2D47               	goto	l1821
  4816  0D1F                     l1811:
  4817  0D1F  0873               	movf	Lcd_Out2@x,w
  4818  0D20  3EC0               	addlw	192
  4819  0D21  00F5               	movwf	??_Lcd_Out2
  4820  0D22  0875               	movf	??_Lcd_Out2,w
  4821  0D23  00F8               	movwf	Lcd_Out2@data
  4822  0D24  2D47               	goto	l1821
  4823  0D25                     l1813:
  4824  0D25  0873               	movf	Lcd_Out2@x,w
  4825  0D26  3E94               	addlw	148
  4826  0D27  00F5               	movwf	??_Lcd_Out2
  4827  0D28  0875               	movf	??_Lcd_Out2,w
  4828  0D29  00F8               	movwf	Lcd_Out2@data
  4829  0D2A  2D47               	goto	l1821
  4830  0D2B                     l1815:
  4831  0D2B  0873               	movf	Lcd_Out2@x,w
  4832  0D2C  3ED4               	addlw	212
  4833  0D2D  00F5               	movwf	??_Lcd_Out2
  4834  0D2E  0875               	movf	??_Lcd_Out2,w
  4835  0D2F  00F8               	movwf	Lcd_Out2@data
  4836  0D30  2D47               	goto	l1821
  4837  0D31                     l1819:
  4838  0D31  0877               	movf	Lcd_Out2@y,w
  4839  0D32  00F5               	movwf	??_Lcd_Out2
  4840  0D33  01F6               	clrf	??_Lcd_Out2+1
  4841                           
  4842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4843                           ; Switch size 1, requested type "simple"
  4844                           ; Number of cases is 1, Range of values is 0 to 0
  4845                           ; switch strategies available:
  4846                           ; Name         Instructions Cycles
  4847                           ; simple_byte            4     3 (average)
  4848                           ; direct_byte            8     6 (fixed)
  4849                           ; jumptable            260     6 (fixed)
  4850                           ;	Chosen strategy is simple_byte
  4851  0D34  0876               	movf	??_Lcd_Out2+1,w
  4852  0D35  3A00               	xorlw	0	; case 0
  4853  0D36  1903               	skipnz
  4854  0D37  2D39               	goto	l2203
  4855  0D38  2D47               	goto	l1821
  4856  0D39                     l2203:
  4857                           
  4858                           ; Switch size 1, requested type "simple"
  4859                           ; Number of cases is 4, Range of values is 1 to 4
  4860                           ; switch strategies available:
  4861                           ; Name         Instructions Cycles
  4862                           ; simple_byte           13     7 (average)
  4863                           ; direct_byte           17     9 (fixed)
  4864                           ; jumptable            263     9 (fixed)
  4865                           ;	Chosen strategy is simple_byte
  4866  0D39  0875               	movf	??_Lcd_Out2,w
  4867  0D3A  3A01               	xorlw	1	; case 1
  4868  0D3B  1903               	skipnz
  4869  0D3C  2D19               	goto	l1809
  4870  0D3D  3A03               	xorlw	3	; case 2
  4871  0D3E  1903               	skipnz
  4872  0D3F  2D1F               	goto	l1811
  4873  0D40  3A01               	xorlw	1	; case 3
  4874  0D41  1903               	skipnz
  4875  0D42  2D25               	goto	l1813
  4876  0D43  3A07               	xorlw	7	; case 4
  4877  0D44  1903               	skipnz
  4878  0D45  2D2B               	goto	l1815
  4879  0D46  2D47               	goto	l1821
  4880  0D47                     l1821:
  4881                           
  4882                           ;./flex_lcd.h: 127: Lcd_Cmd(data);
  4883  0D47  0878               	movf	Lcd_Out2@data,w
  4884  0D48  318E  2691  318D   	fcall	_Lcd_Cmd
  4885                           
  4886                           ;./flex_lcd.h: 128: while(*buffer)
  4887  0D4B  2D57               	goto	l1827
  4888  0D4C                     l1823:
  4889                           
  4890                           ;./flex_lcd.h: 129: {;./flex_lcd.h: 130:     Lcd_Chr_CP(*buffer);
  4891  0D4C  0874               	movf	Lcd_Out2@buffer,w
  4892  0D4D  0086               	movwf	6
  4893  0D4E  0187               	clrf	7
  4894  0D4F  0801               	movf	1,w
  4895  0D50  3180  201F  318D   	fcall	_Lcd_Chr_CP
  4896  0D53                     l1825:
  4897                           
  4898                           ;./flex_lcd.h: 131:     buffer++;
  4899  0D53  3001               	movlw	1
  4900  0D54  00F5               	movwf	??_Lcd_Out2
  4901  0D55  0875               	movf	??_Lcd_Out2,w
  4902  0D56  07F4               	addwf	Lcd_Out2@buffer,f
  4903  0D57                     l1827:
  4904                           
  4905                           ;./flex_lcd.h: 128: while(*buffer)
  4906  0D57  0874               	movf	Lcd_Out2@buffer,w
  4907  0D58  0086               	movwf	6
  4908  0D59  0187               	clrf	7
  4909  0D5A  0801               	movf	1,w
  4910  0D5B  1D03               	btfss	3,2
  4911  0D5C  2D5E               	goto	u1761
  4912  0D5D  2D5F               	goto	u1760
  4913  0D5E                     u1761:
  4914  0D5E  2D4C               	goto	l1823
  4915  0D5F                     u1760:
  4916  0D5F                     l89:
  4917  0D5F  0008               	return
  4918  0D60                     __end_of_Lcd_Out2:
  4919                           
  4920                           	psect	text15
  4921  001F                     __ptext15:	
  4922 ;; *************** function _Lcd_Chr_CP *****************
  4923 ;; Defined at:
  4924 ;;		line 137 in file "./flex_lcd.h"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  data            1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  data            1    2[COMMON] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg, status,2, status,0
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4938 ;;      Params:         0       0       0       0       0       0       0       0
  4939 ;;      Locals:         1       0       0       0       0       0       0       0
  4940 ;;      Temps:          2       0       0       0       0       0       0       0
  4941 ;;      Totals:         3       0       0       0       0       0       0       0
  4942 ;;Total ram usage:        3 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_Lcd_Out2
  4948 ;;		_Lcd_Out
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _Lcd_Chr_CP
  4954  001F                     _Lcd_Chr_CP:
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  4958                           ;Lcd_Chr_CP@data stored from wreg
  4959  001F  00F2               	movwf	Lcd_Chr_CP@data
  4960  0020                     l1763:
  4961                           
  4962                           ;./flex_lcd.h: 138: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  4963  0020  0140               	movlb	0	; select bank0
  4964  0021  130D               	bcf	13,6	;volatile
  4965  0022  160D               	bsf	13,4	;volatile
  4966  0023                     l1765:
  4967                           
  4968                           ;./flex_lcd.h: 139: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4969  0023  0872               	movf	Lcd_Chr_CP@data,w
  4970  0024  00F0               	movwf	??_Lcd_Chr_CP
  4971  0025  3007               	movlw	7
  4972  0026                     u1695:
  4973  0026  36F0               	lsrf	??_Lcd_Chr_CP,f
  4974  0027  0B89               	decfsz	9,f
  4975  0028  2826               	goto	u1695
  4976  0029  0870               	movf	??_Lcd_Chr_CP,w
  4977  002A  3901               	andlw	1
  4978  002B  00F1               	movwf	??_Lcd_Chr_CP+1
  4979  002C  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4980  002D  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  4981  002E  080E               	movf	14,w	;volatile
  4982  002F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4983  0030  397F               	andlw	-129
  4984  0031  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4985  0032  008E               	movwf	14	;volatile
  4986  0033  0872               	movf	Lcd_Chr_CP@data,w
  4987  0034  00F0               	movwf	??_Lcd_Chr_CP
  4988  0035  3006               	movlw	6
  4989  0036                     u1705:
  4990  0036  36F0               	lsrf	??_Lcd_Chr_CP,f
  4991  0037  0B89               	decfsz	9,f
  4992  0038  2836               	goto	u1705
  4993  0039  0870               	movf	??_Lcd_Chr_CP,w
  4994  003A  3901               	andlw	1
  4995  003B  00F1               	movwf	??_Lcd_Chr_CP+1
  4996  003C  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  4997  003D  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4998  003E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4999  003F  080E               	movf	14,w	;volatile
  5000  0040  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5001  0041  39BF               	andlw	-65
  5002  0042  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5003  0043  008E               	movwf	14	;volatile
  5004                           
  5005                           ;./flex_lcd.h: 140: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  5006  0044  0872               	movf	Lcd_Chr_CP@data,w
  5007  0045  00F0               	movwf	??_Lcd_Chr_CP
  5008  0046  3005               	movlw	5
  5009  0047                     u1715:
  5010  0047  36F0               	lsrf	??_Lcd_Chr_CP,f
  5011  0048  0B89               	decfsz	9,f
  5012  0049  2847               	goto	u1715
  5013  004A  0870               	movf	??_Lcd_Chr_CP,w
  5014  004B  3901               	andlw	1
  5015  004C  00F1               	movwf	??_Lcd_Chr_CP+1
  5016  004D  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5017  004E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5018  004F  080E               	movf	14,w	;volatile
  5019  0050  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5020  0051  39DF               	andlw	-33
  5021  0052  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5022  0053  008E               	movwf	14	;volatile
  5023  0054  0872               	movf	Lcd_Chr_CP@data,w
  5024  0055  00F0               	movwf	??_Lcd_Chr_CP
  5025  0056  3004               	movlw	4
  5026  0057                     u1725:
  5027  0057  36F0               	lsrf	??_Lcd_Chr_CP,f
  5028  0058  0B89               	decfsz	9,f
  5029  0059  2857               	goto	u1725
  5030  005A  0870               	movf	??_Lcd_Chr_CP,w
  5031  005B  3901               	andlw	1
  5032  005C  00F1               	movwf	??_Lcd_Chr_CP+1
  5033  005D  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5034  005E  080E               	movf	14,w	;volatile
  5035  005F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5036  0060  39EF               	andlw	-17
  5037  0061  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5038  0062  008E               	movwf	14	;volatile
  5039  0063                     l1767:
  5040                           
  5041                           ;./flex_lcd.h: 141: _delay(10);
  5042  0063  3003               	movlw	3
  5043  0064                     u2267:
  5044  0064  0B89               	decfsz	9,f
  5045  0065  2864               	goto	u2267
  5046  0066  0000               	nop
  5047  0067                     l1769:
  5048                           
  5049                           ;./flex_lcd.h: 142: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5050  0067  0140               	movlb	0	; select bank0
  5051  0068  170D               	bsf	13,6	;volatile
  5052  0069                     l1771:
  5053  0069  0000               	nop
  5054  006A                     l1773:
  5055  006A  0140               	movlb	0	; select bank0
  5056  006B  130D               	bcf	13,6	;volatile
  5057  006C                     l1775:
  5058                           
  5059                           ;./flex_lcd.h: 143: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  5060  006C  0872               	movf	Lcd_Chr_CP@data,w
  5061  006D  00F0               	movwf	??_Lcd_Chr_CP
  5062  006E  3003               	movlw	3
  5063  006F                     u1735:
  5064  006F  36F0               	lsrf	??_Lcd_Chr_CP,f
  5065  0070  0B89               	decfsz	9,f
  5066  0071  286F               	goto	u1735
  5067  0072  0870               	movf	??_Lcd_Chr_CP,w
  5068  0073  3901               	andlw	1
  5069  0074  00F1               	movwf	??_Lcd_Chr_CP+1
  5070  0075  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5071  0076  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5072  0077  080E               	movf	14,w	;volatile
  5073  0078  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5074  0079  397F               	andlw	-129
  5075  007A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5076  007B  008E               	movwf	14	;volatile
  5077  007C                     l1777:
  5078  007C  0872               	movf	Lcd_Chr_CP@data,w
  5079  007D  00F0               	movwf	??_Lcd_Chr_CP
  5080  007E  3002               	movlw	2
  5081  007F                     u1745:
  5082  007F  36F0               	lsrf	??_Lcd_Chr_CP,f
  5083  0080  0B89               	decfsz	9,f
  5084  0081  287F               	goto	u1745
  5085  0082  0870               	movf	??_Lcd_Chr_CP,w
  5086  0083  3901               	andlw	1
  5087  0084  00F1               	movwf	??_Lcd_Chr_CP+1
  5088  0085  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5089  0086  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5090  0087  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5091  0088  080E               	movf	14,w	;volatile
  5092  0089  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5093  008A  39BF               	andlw	-65
  5094  008B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5095  008C  008E               	movwf	14	;volatile
  5096  008D                     l1779:
  5097                           
  5098                           ;./flex_lcd.h: 144: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  5099  008D  3672               	lsrf	Lcd_Chr_CP@data,w
  5100  008E  3901               	andlw	1
  5101  008F  00F0               	movwf	??_Lcd_Chr_CP
  5102  0090  0EF0               	swapf	??_Lcd_Chr_CP,f
  5103  0091  0DF0               	rlf	??_Lcd_Chr_CP,f
  5104  0092  080E               	movf	14,w	;volatile
  5105  0093  0670               	xorwf	??_Lcd_Chr_CP,w
  5106  0094  39DF               	andlw	-33
  5107  0095  0670               	xorwf	??_Lcd_Chr_CP,w
  5108  0096  008E               	movwf	14	;volatile
  5109  0097                     l1781:
  5110  0097  0872               	movf	Lcd_Chr_CP@data,w
  5111  0098  3901               	andlw	1
  5112  0099  00F0               	movwf	??_Lcd_Chr_CP
  5113  009A  0EF0               	swapf	??_Lcd_Chr_CP,f
  5114  009B  080E               	movf	14,w	;volatile
  5115  009C  0670               	xorwf	??_Lcd_Chr_CP,w
  5116  009D  39EF               	andlw	-17
  5117  009E  0670               	xorwf	??_Lcd_Chr_CP,w
  5118  009F  008E               	movwf	14	;volatile
  5119  00A0                     l1783:
  5120                           
  5121                           ;./flex_lcd.h: 145: _delay(10);
  5122  00A0  3003               	movlw	3
  5123  00A1                     u2277:
  5124  00A1  0B89               	decfsz	9,f
  5125  00A2  28A1               	goto	u2277
  5126  00A3  0000               	nop
  5127  00A4                     l1785:
  5128                           
  5129                           ;./flex_lcd.h: 146: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5130  00A4  0140               	movlb	0	; select bank0
  5131  00A5  170D               	bsf	13,6	;volatile
  5132  00A6                     l1787:
  5133  00A6  0000               	nop
  5134  00A7                     l1789:
  5135  00A7  0140               	movlb	0	; select bank0
  5136  00A8  130D               	bcf	13,6	;volatile
  5137  00A9                     l1791:
  5138                           
  5139                           ;./flex_lcd.h: 147: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  5140  00A9  0000               	nop
  5141  00AA                     l1793:
  5142  00AA  30C4               	movlw	196
  5143  00AB                     u2287:
  5144  00AB  3200               	nop2
  5145  00AC  3200               	nop2
  5146  00AD  0B89               	decfsz	9,f
  5147  00AE  28AB               	goto	u2287
  5148  00AF  3200               	nop2
  5149  00B0  0000               	nop
  5150  00B1                     l92:
  5151  00B1  0008               	return
  5152  00B2                     __end_of_Lcd_Chr_CP:
  5153                           
  5154                           	psect	text16
  5155  0C78                     __ptext16:	
  5156 ;; *************** function _PIN_MANAGER_Initialize *****************
  5157 ;; Defined at:
  5158 ;;		line 62 in file "Contador1.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5172 ;;      Params:         0       0       0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function _PIN_MANAGER_Initialize
  5187  0C78                     _PIN_MANAGER_Initialize:
  5188  0C78                     l1871:	
  5189                           ;incstack = 0
  5190                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5191                           
  5192                           
  5193                           ;Contador1.c: 64:   LATA = 0x00;
  5194  0C78  0140               	movlb	0	; select bank0
  5195  0C79  0198               	clrf	24	;volatile
  5196                           
  5197                           ;Contador1.c: 65:   LATB = 0x00;
  5198  0C7A  0199               	clrf	25	;volatile
  5199                           
  5200                           ;Contador1.c: 66:   LATC = 0x00;
  5201  0C7B  019A               	clrf	26	;volatile
  5202  0C7C                     l1873:
  5203                           
  5204                           ;Contador1.c: 69:   TRISA = 0b00010000;
  5205  0C7C  3010               	movlw	16
  5206  0C7D  0092               	movwf	18	;volatile
  5207  0C7E                     l1875:
  5208                           
  5209                           ;Contador1.c: 70:   TRISB = 0b10100000;
  5210  0C7E  30A0               	movlw	160
  5211  0C7F  0093               	movwf	19	;volatile
  5212  0C80                     l1877:
  5213                           
  5214                           ;Contador1.c: 71:   TRISC = 0b00000100;
  5215  0C80  3004               	movlw	4
  5216  0C81  0094               	movwf	20	;volatile
  5217  0C82                     l1879:
  5218                           
  5219                           ;Contador1.c: 74:   ANSELC = 0;
  5220  0C82  017E               	movlb	62	; select bank62
  5221  0C83  01CE               	clrf	78	;volatile
  5222  0C84                     l1881:
  5223                           
  5224                           ;Contador1.c: 75:   ANSELB = 0;
  5225  0C84  01C3               	clrf	67	;volatile
  5226  0C85                     l1883:
  5227                           
  5228                           ;Contador1.c: 76:   ANSELA = 0;
  5229  0C85  01B8               	clrf	56	;volatile
  5230                           
  5231                           ;Contador1.c: 80:   WPUC = 0x04;
  5232  0C86  3004               	movlw	4
  5233  0C87  00CF               	movwf	79	;volatile
  5234                           
  5235                           ;Contador1.c: 83:   ODCONA = 0x04;
  5236  0C88  3004               	movlw	4
  5237  0C89  00BA               	movwf	58	;volatile
  5238  0C8A                     l1885:
  5239                           
  5240                           ;Contador1.c: 84:   ODCONB = 0x00;
  5241  0C8A  01C5               	clrf	69	;volatile
  5242  0C8B                     l1887:
  5243                           
  5244                           ;Contador1.c: 85:   ODCONC = 0x00;
  5245  0C8B  01D0               	clrf	80	;volatile
  5246                           
  5247                           ;Contador1.c: 88:   SLRCONA = 0x37;
  5248  0C8C  3037               	movlw	55
  5249  0C8D  00BB               	movwf	59	;volatile
  5250                           
  5251                           ;Contador1.c: 89:   SLRCONB = 0xFF;
  5252  0C8E  30FF               	movlw	255
  5253  0C8F  00C6               	movwf	70	;volatile
  5254                           
  5255                           ;Contador1.c: 90:   SLRCONC = 0xFF;
  5256  0C90  30FF               	movlw	255
  5257  0C91  00D1               	movwf	81	;volatile
  5258                           
  5259                           ;Contador1.c: 93:   INLVLA = 0x3F;
  5260  0C92  303F               	movlw	63
  5261  0C93  00BC               	movwf	60	;volatile
  5262                           
  5263                           ;Contador1.c: 94:   INLVLB = 0xFF;
  5264  0C94  30FF               	movlw	255
  5265  0C95  00C7               	movwf	71	;volatile
  5266                           
  5267                           ;Contador1.c: 95:   INLVLC = 0xFF;
  5268  0C96  30FF               	movlw	255
  5269  0C97  00D2               	movwf	82	;volatile
  5270  0C98                     l98:
  5271  0C98  0008               	return
  5272  0C99                     __end_of_PIN_MANAGER_Initialize:
  5273                           
  5274                           	psect	text17
  5275  0E05                     __ptext17:	
  5276 ;; *************** function _Lcd_Init *****************
  5277 ;; Defined at:
  5278 ;;		line 53 in file "./flex_lcd.h"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  data            1    4[COMMON] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5292 ;;      Params:         0       0       0       0       0       0       0       0
  5293 ;;      Locals:         1       0       0       0       0       0       0       0
  5294 ;;      Temps:          1       0       0       0       0       0       0       0
  5295 ;;      Totals:         2       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        2 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    1
  5299 ;; This function calls:
  5300 ;;		_Lcd_Cmd
  5301 ;; This function is called by:
  5302 ;;		_main
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _Lcd_Init
  5308  0E05                     _Lcd_Init:
  5309  0E05                     l1845:	
  5310                           ;incstack = 0
  5311                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5312                           
  5313                           
  5314                           ;./flex_lcd.h: 54: unsigned char data;;./flex_lcd.h: 55: TRISCbits.TRISC7 = 0;
  5315  0E05  0140               	movlb	0	; select bank0
  5316  0E06  1394               	bcf	20,7	;volatile
  5317                           
  5318                           ;./flex_lcd.h: 56: TRISCbits.TRISC6 = 0;
  5319  0E07  1314               	bcf	20,6	;volatile
  5320                           
  5321                           ;./flex_lcd.h: 57: TRISCbits.TRISC5 = 0;
  5322  0E08  1294               	bcf	20,5	;volatile
  5323                           
  5324                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  5325  0E09  1214               	bcf	20,4	;volatile
  5326                           
  5327                           ;./flex_lcd.h: 59: TRISBbits.TRISB6 = 0;
  5328  0E0A  1313               	bcf	19,6	;volatile
  5329                           
  5330                           ;./flex_lcd.h: 60: TRISBbits.TRISB4 = 0;
  5331  0E0B  1213               	bcf	19,4	;volatile
  5332                           
  5333                           ;./flex_lcd.h: 61: PORTCbits.RC7 = 0;
  5334  0E0C  138E               	bcf	14,7	;volatile
  5335                           
  5336                           ;./flex_lcd.h: 62: PORTCbits.RC6 = 0;
  5337  0E0D  130E               	bcf	14,6	;volatile
  5338                           
  5339                           ;./flex_lcd.h: 63: PORTCbits.RC5 = 0;
  5340  0E0E  128E               	bcf	14,5	;volatile
  5341                           
  5342                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  5343  0E0F  120E               	bcf	14,4	;volatile
  5344                           
  5345                           ;./flex_lcd.h: 65: PORTBbits.RB6 = 0;
  5346  0E10  130D               	bcf	13,6	;volatile
  5347                           
  5348                           ;./flex_lcd.h: 66: PORTBbits.RB4 = 0;
  5349  0E11  120D               	bcf	13,4	;volatile
  5350  0E12                     l1847:
  5351                           
  5352                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5353  0E12  30C4               	movlw	196
  5354  0E13                     u2297:
  5355  0E13  3200               	nop2
  5356  0E14  3200               	nop2
  5357  0E15  0B89               	decfsz	9,f
  5358  0E16  2E13               	goto	u2297
  5359  0E17  3200               	nop2
  5360  0E18  0000               	nop
  5361                           
  5362                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5363  0E19  30C4               	movlw	196
  5364  0E1A                     u2307:
  5365  0E1A  3200               	nop2
  5366  0E1B  3200               	nop2
  5367  0E1C  0B89               	decfsz	9,f
  5368  0E1D  2E1A               	goto	u2307
  5369  0E1E  3200               	nop2
  5370  0E1F  0000               	nop
  5371                           
  5372                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5373  0E20  30C4               	movlw	196
  5374  0E21                     u2317:
  5375  0E21  3200               	nop2
  5376  0E22  3200               	nop2
  5377  0E23  0B89               	decfsz	9,f
  5378  0E24  2E21               	goto	u2317
  5379  0E25  3200               	nop2
  5380  0E26  0000               	nop
  5381                           
  5382                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5383  0E27  30C4               	movlw	196
  5384  0E28                     u2327:
  5385  0E28  3200               	nop2
  5386  0E29  3200               	nop2
  5387  0E2A  0B89               	decfsz	9,f
  5388  0E2B  2E28               	goto	u2327
  5389  0E2C  3200               	nop2
  5390  0E2D  0000               	nop
  5391                           
  5392                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5393  0E2E  30C4               	movlw	196
  5394  0E2F                     u2337:
  5395  0E2F  3200               	nop2
  5396  0E30  3200               	nop2
  5397  0E31  0B89               	decfsz	9,f
  5398  0E32  2E2F               	goto	u2337
  5399  0E33  3200               	nop2
  5400  0E34  0000               	nop
  5401                           
  5402                           ;./flex_lcd.h: 72: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5403  0E35  30C4               	movlw	196
  5404  0E36                     u2347:
  5405  0E36  3200               	nop2
  5406  0E37  3200               	nop2
  5407  0E38  0B89               	decfsz	9,f
  5408  0E39  2E36               	goto	u2347
  5409  0E3A  3200               	nop2
  5410  0E3B  0000               	nop
  5411  0E3C                     l1849:
  5412                           
  5413                           ;./flex_lcd.h: 73: for(data = 1; data < 4; data ++)
  5414  0E3C  01F4               	clrf	Lcd_Init@data
  5415  0E3D  0AF4               	incf	Lcd_Init@data,f
  5416  0E3E                     l61:
  5417                           
  5418                           ;./flex_lcd.h: 74: {;./flex_lcd.h: 75:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  5419  0E3E  0140               	movlb	0	; select bank0
  5420  0E3F  138E               	bcf	14,7	;volatile
  5421  0E40  130E               	bcf	14,6	;volatile
  5422  0E41  168E               	bsf	14,5	;volatile
  5423  0E42  160E               	bsf	14,4	;volatile
  5424  0E43  130D               	bcf	13,6	;volatile
  5425                           
  5426                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  5427  0E44  120D               	bcf	13,4	;volatile
  5428  0E45  138E               	bcf	14,7	;volatile
  5429  0E46  130E               	bcf	14,6	;volatile
  5430  0E47  168E               	bsf	14,5	;volatile
  5431  0E48  160E               	bsf	14,4	;volatile
  5432                           
  5433                           ;./flex_lcd.h: 77:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5434  0E49  170D               	bsf	13,6	;volatile
  5435  0E4A  120D               	bcf	13,4	;volatile
  5436                           
  5437                           ;./flex_lcd.h: 78:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  5438  0E4B  0000               	nop
  5439                           
  5440                           ;./flex_lcd.h: 79:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  5441  0E4C  0140               	movlb	0	; select bank0
  5442  0E4D  138E               	bcf	14,7	;volatile
  5443  0E4E  130E               	bcf	14,6	;volatile
  5444  0E4F  168E               	bsf	14,5	;volatile
  5445  0E50  160E               	bsf	14,4	;volatile
  5446  0E51  130D               	bcf	13,6	;volatile
  5447                           
  5448                           ;./flex_lcd.h: 80:     PORTBbits.RB4 = 0;
  5449  0E52  120D               	bcf	13,4	;volatile
  5450  0E53                     l1853:
  5451                           
  5452                           ;./flex_lcd.h: 81:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5453  0E53  30C4               	movlw	196
  5454  0E54                     u2357:
  5455  0E54  3200               	nop2
  5456  0E55  3200               	nop2
  5457  0E56  0B89               	decfsz	9,f
  5458  0E57  2E54               	goto	u2357
  5459  0E58  3200               	nop2
  5460  0E59  0000               	nop
  5461  0E5A                     l1855:
  5462                           
  5463                           ;./flex_lcd.h: 82: }
  5464  0E5A  3001               	movlw	1
  5465  0E5B  00F3               	movwf	??_Lcd_Init
  5466  0E5C  0873               	movf	??_Lcd_Init,w
  5467  0E5D  07F4               	addwf	Lcd_Init@data,f
  5468  0E5E                     l1857:
  5469  0E5E  3004               	movlw	4
  5470  0E5F  0274               	subwf	Lcd_Init@data,w
  5471  0E60  1C03               	skipc
  5472  0E61  2E63               	goto	u1771
  5473  0E62  2E64               	goto	u1770
  5474  0E63                     u1771:
  5475  0E63  2E3E               	goto	l61
  5476  0E64                     u1770:
  5477  0E64                     l62:
  5478                           
  5479                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5480  0E64  0140               	movlb	0	; select bank0
  5481  0E65  138E               	bcf	14,7	;volatile
  5482  0E66  130E               	bcf	14,6	;volatile
  5483  0E67  168E               	bsf	14,5	;volatile
  5484  0E68  120E               	bcf	14,4	;volatile
  5485  0E69  130D               	bcf	13,6	;volatile
  5486  0E6A  120D               	bcf	13,4	;volatile
  5487                           
  5488                           ;./flex_lcd.h: 84: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5489  0E6B  138E               	bcf	14,7	;volatile
  5490  0E6C  130E               	bcf	14,6	;volatile
  5491  0E6D  168E               	bsf	14,5	;volatile
  5492  0E6E  120E               	bcf	14,4	;volatile
  5493  0E6F  170D               	bsf	13,6	;volatile
  5494  0E70  120D               	bcf	13,4	;volatile
  5495                           
  5496                           ;./flex_lcd.h: 85: _delay((unsigned long)((5)*(1000000/4000000.0)));
  5497  0E71  0000               	nop
  5498                           
  5499                           ;./flex_lcd.h: 86: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5500  0E72  0140               	movlb	0	; select bank0
  5501  0E73  138E               	bcf	14,7	;volatile
  5502  0E74  130E               	bcf	14,6	;volatile
  5503  0E75  168E               	bsf	14,5	;volatile
  5504  0E76  120E               	bcf	14,4	;volatile
  5505  0E77  130D               	bcf	13,6	;volatile
  5506  0E78  120D               	bcf	13,4	;volatile
  5507  0E79                     l1859:
  5508                           
  5509                           ;./flex_lcd.h: 87: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5510  0E79  30C4               	movlw	196
  5511  0E7A                     u2367:
  5512  0E7A  3200               	nop2
  5513  0E7B  3200               	nop2
  5514  0E7C  0B89               	decfsz	9,f
  5515  0E7D  2E7A               	goto	u2367
  5516  0E7E  3200               	nop2
  5517  0E7F  0000               	nop
  5518  0E80                     l1861:
  5519  0E80  3028               	movlw	40
  5520  0E81  318E  2691  318E   	fcall	_Lcd_Cmd
  5521  0E84                     l1863:
  5522  0E84  3010               	movlw	16
  5523  0E85  318E  2691  318E   	fcall	_Lcd_Cmd
  5524  0E88                     l1865:
  5525  0E88  3001               	movlw	1
  5526  0E89  318E  2691  318E   	fcall	_Lcd_Cmd
  5527  0E8C                     l1867:
  5528  0E8C                     l1869:
  5529  0E8C  300F               	movlw	15
  5530  0E8D  318E  2691  318E   	fcall	_Lcd_Cmd
  5531  0E90                     l63:
  5532  0E90  0008               	return
  5533  0E91                     __end_of_Lcd_Init:
  5534                           
  5535                           	psect	text18
  5536  0E91                     __ptext18:	
  5537 ;; *************** function _Lcd_Cmd *****************
  5538 ;; Defined at:
  5539 ;;		line 151 in file "./flex_lcd.h"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  data            1    wreg     unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  data            1    2[COMMON] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5553 ;;      Params:         0       0       0       0       0       0       0       0
  5554 ;;      Locals:         1       0       0       0       0       0       0       0
  5555 ;;      Temps:          2       0       0       0       0       0       0       0
  5556 ;;      Totals:         3       0       0       0       0       0       0       0
  5557 ;;Total ram usage:        3 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_Lcd_Init
  5563 ;;		_Lcd_Out2
  5564 ;;		_cambio
  5565 ;;		_main
  5566 ;;		_Lcd_Out
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _Lcd_Cmd
  5572  0E91                     _Lcd_Cmd:
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  5576                           ;Lcd_Cmd@data stored from wreg
  5577  0E91  00F2               	movwf	Lcd_Cmd@data
  5578  0E92                     l1733:
  5579                           
  5580                           ;./flex_lcd.h: 152: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5581  0E92  0140               	movlb	0	; select bank0
  5582  0E93  130D               	bcf	13,6	;volatile
  5583  0E94  120D               	bcf	13,4	;volatile
  5584  0E95                     l1735:
  5585                           
  5586                           ;./flex_lcd.h: 153: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  5587  0E95  0872               	movf	Lcd_Cmd@data,w
  5588  0E96  00F0               	movwf	??_Lcd_Cmd
  5589  0E97  3007               	movlw	7
  5590  0E98                     u1635:
  5591  0E98  36F0               	lsrf	??_Lcd_Cmd,f
  5592  0E99  0B89               	decfsz	9,f
  5593  0E9A  2E98               	goto	u1635
  5594  0E9B  0870               	movf	??_Lcd_Cmd,w
  5595  0E9C  3901               	andlw	1
  5596  0E9D  00F1               	movwf	??_Lcd_Cmd+1
  5597  0E9E  0CF1               	rrf	??_Lcd_Cmd+1,f
  5598  0E9F  0CF1               	rrf	??_Lcd_Cmd+1,f
  5599  0EA0  080E               	movf	14,w	;volatile
  5600  0EA1  0671               	xorwf	??_Lcd_Cmd+1,w
  5601  0EA2  397F               	andlw	-129
  5602  0EA3  0671               	xorwf	??_Lcd_Cmd+1,w
  5603  0EA4  008E               	movwf	14	;volatile
  5604  0EA5  0872               	movf	Lcd_Cmd@data,w
  5605  0EA6  00F0               	movwf	??_Lcd_Cmd
  5606  0EA7  3006               	movlw	6
  5607  0EA8                     u1645:
  5608  0EA8  36F0               	lsrf	??_Lcd_Cmd,f
  5609  0EA9  0B89               	decfsz	9,f
  5610  0EAA  2EA8               	goto	u1645
  5611  0EAB  0870               	movf	??_Lcd_Cmd,w
  5612  0EAC  3901               	andlw	1
  5613  0EAD  00F1               	movwf	??_Lcd_Cmd+1
  5614  0EAE  0EF1               	swapf	??_Lcd_Cmd+1,f
  5615  0EAF  0DF1               	rlf	??_Lcd_Cmd+1,f
  5616  0EB0  0DF1               	rlf	??_Lcd_Cmd+1,f
  5617  0EB1  080E               	movf	14,w	;volatile
  5618  0EB2  0671               	xorwf	??_Lcd_Cmd+1,w
  5619  0EB3  39BF               	andlw	-65
  5620  0EB4  0671               	xorwf	??_Lcd_Cmd+1,w
  5621  0EB5  008E               	movwf	14	;volatile
  5622                           
  5623                           ;./flex_lcd.h: 154: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  5624  0EB6  0872               	movf	Lcd_Cmd@data,w
  5625  0EB7  00F0               	movwf	??_Lcd_Cmd
  5626  0EB8  3005               	movlw	5
  5627  0EB9                     u1655:
  5628  0EB9  36F0               	lsrf	??_Lcd_Cmd,f
  5629  0EBA  0B89               	decfsz	9,f
  5630  0EBB  2EB9               	goto	u1655
  5631  0EBC  0870               	movf	??_Lcd_Cmd,w
  5632  0EBD  3901               	andlw	1
  5633  0EBE  00F1               	movwf	??_Lcd_Cmd+1
  5634  0EBF  0EF1               	swapf	??_Lcd_Cmd+1,f
  5635  0EC0  0DF1               	rlf	??_Lcd_Cmd+1,f
  5636  0EC1  080E               	movf	14,w	;volatile
  5637  0EC2  0671               	xorwf	??_Lcd_Cmd+1,w
  5638  0EC3  39DF               	andlw	-33
  5639  0EC4  0671               	xorwf	??_Lcd_Cmd+1,w
  5640  0EC5  008E               	movwf	14	;volatile
  5641  0EC6  0872               	movf	Lcd_Cmd@data,w
  5642  0EC7  00F0               	movwf	??_Lcd_Cmd
  5643  0EC8  3004               	movlw	4
  5644  0EC9                     u1665:
  5645  0EC9  36F0               	lsrf	??_Lcd_Cmd,f
  5646  0ECA  0B89               	decfsz	9,f
  5647  0ECB  2EC9               	goto	u1665
  5648  0ECC  0870               	movf	??_Lcd_Cmd,w
  5649  0ECD  3901               	andlw	1
  5650  0ECE  00F1               	movwf	??_Lcd_Cmd+1
  5651  0ECF  0EF1               	swapf	??_Lcd_Cmd+1,f
  5652  0ED0  080E               	movf	14,w	;volatile
  5653  0ED1  0671               	xorwf	??_Lcd_Cmd+1,w
  5654  0ED2  39EF               	andlw	-17
  5655  0ED3  0671               	xorwf	??_Lcd_Cmd+1,w
  5656  0ED4  008E               	movwf	14	;volatile
  5657  0ED5                     l1737:
  5658                           
  5659                           ;./flex_lcd.h: 155: _delay(10);
  5660  0ED5  3003               	movlw	3
  5661  0ED6                     u2377:
  5662  0ED6  0B89               	decfsz	9,f
  5663  0ED7  2ED6               	goto	u2377
  5664  0ED8  0000               	nop
  5665  0ED9                     l1739:
  5666                           
  5667                           ;./flex_lcd.h: 156: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5668  0ED9  0140               	movlb	0	; select bank0
  5669  0EDA  170D               	bsf	13,6	;volatile
  5670  0EDB                     l1741:
  5671  0EDB  0000               	nop
  5672  0EDC                     l1743:
  5673  0EDC  0140               	movlb	0	; select bank0
  5674  0EDD  130D               	bcf	13,6	;volatile
  5675  0EDE                     l1745:
  5676                           
  5677                           ;./flex_lcd.h: 157: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  5678  0EDE  0872               	movf	Lcd_Cmd@data,w
  5679  0EDF  00F0               	movwf	??_Lcd_Cmd
  5680  0EE0  3003               	movlw	3
  5681  0EE1                     u1675:
  5682  0EE1  36F0               	lsrf	??_Lcd_Cmd,f
  5683  0EE2  0B89               	decfsz	9,f
  5684  0EE3  2EE1               	goto	u1675
  5685  0EE4  0870               	movf	??_Lcd_Cmd,w
  5686  0EE5  3901               	andlw	1
  5687  0EE6  00F1               	movwf	??_Lcd_Cmd+1
  5688  0EE7  0CF1               	rrf	??_Lcd_Cmd+1,f
  5689  0EE8  0CF1               	rrf	??_Lcd_Cmd+1,f
  5690  0EE9  080E               	movf	14,w	;volatile
  5691  0EEA  0671               	xorwf	??_Lcd_Cmd+1,w
  5692  0EEB  397F               	andlw	-129
  5693  0EEC  0671               	xorwf	??_Lcd_Cmd+1,w
  5694  0EED  008E               	movwf	14	;volatile
  5695  0EEE                     l1747:
  5696  0EEE  0872               	movf	Lcd_Cmd@data,w
  5697  0EEF  00F0               	movwf	??_Lcd_Cmd
  5698  0EF0  3002               	movlw	2
  5699  0EF1                     u1685:
  5700  0EF1  36F0               	lsrf	??_Lcd_Cmd,f
  5701  0EF2  0B89               	decfsz	9,f
  5702  0EF3  2EF1               	goto	u1685
  5703  0EF4  0870               	movf	??_Lcd_Cmd,w
  5704  0EF5  3901               	andlw	1
  5705  0EF6  00F1               	movwf	??_Lcd_Cmd+1
  5706  0EF7  0EF1               	swapf	??_Lcd_Cmd+1,f
  5707  0EF8  0DF1               	rlf	??_Lcd_Cmd+1,f
  5708  0EF9  0DF1               	rlf	??_Lcd_Cmd+1,f
  5709  0EFA  080E               	movf	14,w	;volatile
  5710  0EFB  0671               	xorwf	??_Lcd_Cmd+1,w
  5711  0EFC  39BF               	andlw	-65
  5712  0EFD  0671               	xorwf	??_Lcd_Cmd+1,w
  5713  0EFE  008E               	movwf	14	;volatile
  5714  0EFF                     l1749:
  5715                           
  5716                           ;./flex_lcd.h: 158: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  5717  0EFF  3672               	lsrf	Lcd_Cmd@data,w
  5718  0F00  3901               	andlw	1
  5719  0F01  00F0               	movwf	??_Lcd_Cmd
  5720  0F02  0EF0               	swapf	??_Lcd_Cmd,f
  5721  0F03  0DF0               	rlf	??_Lcd_Cmd,f
  5722  0F04  080E               	movf	14,w	;volatile
  5723  0F05  0670               	xorwf	??_Lcd_Cmd,w
  5724  0F06  39DF               	andlw	-33
  5725  0F07  0670               	xorwf	??_Lcd_Cmd,w
  5726  0F08  008E               	movwf	14	;volatile
  5727  0F09                     l1751:
  5728  0F09  0872               	movf	Lcd_Cmd@data,w
  5729  0F0A  3901               	andlw	1
  5730  0F0B  00F0               	movwf	??_Lcd_Cmd
  5731  0F0C  0EF0               	swapf	??_Lcd_Cmd,f
  5732  0F0D  080E               	movf	14,w	;volatile
  5733  0F0E  0670               	xorwf	??_Lcd_Cmd,w
  5734  0F0F  39EF               	andlw	-17
  5735  0F10  0670               	xorwf	??_Lcd_Cmd,w
  5736  0F11  008E               	movwf	14	;volatile
  5737  0F12                     l1753:
  5738                           
  5739                           ;./flex_lcd.h: 159: _delay(10);
  5740  0F12  3003               	movlw	3
  5741  0F13                     u2387:
  5742  0F13  0B89               	decfsz	9,f
  5743  0F14  2F13               	goto	u2387
  5744  0F15  0000               	nop
  5745  0F16                     l1755:
  5746                           
  5747                           ;./flex_lcd.h: 160: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5748  0F16  0140               	movlb	0	; select bank0
  5749  0F17  170D               	bsf	13,6	;volatile
  5750  0F18                     l1757:
  5751  0F18  0000               	nop
  5752  0F19                     l1759:
  5753  0F19  0140               	movlb	0	; select bank0
  5754  0F1A  130D               	bcf	13,6	;volatile
  5755  0F1B                     l1761:
  5756                           
  5757                           ;./flex_lcd.h: 161: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5758  0F1B  30C4               	movlw	196
  5759  0F1C                     u2397:
  5760  0F1C  3200               	nop2
  5761  0F1D  3200               	nop2
  5762  0F1E  0B89               	decfsz	9,f
  5763  0F1F  2F1C               	goto	u2397
  5764  0F20  3200               	nop2
  5765  0F21  0000               	nop
  5766  0F22                     l95:
  5767  0F22  0008               	return
  5768  0F23                     __end_of_Lcd_Cmd:
  5769  007E                     btemp	set	126	;btemp
  5770  007E                     wtemp0	set	126
  5771                           
  5772                           	psect	config
  5773                           
  5774                           ;Config register CONFIG1 @ 0x8007
  5775                           ;	External Oscillator Mode Selection bits
  5776                           ;	FEXTOSC = OFF, Oscillator not enabled
  5777                           ;	Power-up Default Value for COSC bits
  5778                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  5779                           ;	Clock Out Enable bit
  5780                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5781                           ;	VDD Range Analog Calibration Selection bit
  5782                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5783  8007                     	org	32775
  5784  8007  3FED               	dw	16365
  5785                           
  5786                           ;Config register CONFIG2 @ 0x8008
  5787                           ;	Master Clear Enable bit
  5788                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5789                           ;	Power-up Timer Selection bits
  5790                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5791                           ;	WDT Operating Mode bits
  5792                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5793                           ;	Brown-out Reset Enable bits
  5794                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5795                           ;	Brown-out Reset Voltage Selection bit
  5796                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5797                           ;	PPSLOCKED One-Way Set Enable bit
  5798                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  5799                           ;	Stack Overflow/Underflow Reset Enable bit
  5800                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5801  8008                     	org	32776
  5802  8008  3FE7               	dw	16359
  5803                           
  5804                           ;Config register CONFIG4 @ 0x800A
  5805                           ;	Boot Block Size Selection bits
  5806                           ;	BBSIZE = BB512, 512 words boot block size
  5807                           ;	Boot Block Enable bit
  5808                           ;	BBEN = OFF, Boot Block is disabled
  5809                           ;	SAF Enable bit
  5810                           ;	SAFEN = OFF, SAF is disabled
  5811                           ;	Application Block Write Protection bit
  5812                           ;	WRTAPP = OFF, Application Block is not write-protected
  5813                           ;	Boot Block Write Protection bit
  5814                           ;	WRTB = OFF, Boot Block is not write-protected
  5815                           ;	Configuration Registers Write Protection bit
  5816                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5817                           ;	Storage Area Flash (SAF) Write Protection bit
  5818                           ;	WRTSAF = OFF, SAF is not write-protected
  5819                           ;	Low Voltage Programming Enable bit
  5820                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5821  800A                     	org	32778
  5822  800A  3FFF               	dw	16383
  5823                           
  5824                           ;Config register CONFIG5 @ 0x800B
  5825                           ;	User Program Flash Memory Code Protection bit
  5826                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5827  800B                     	org	32779
  5828  800B  3FFF               	dw	16383

Data Sizes:
    Strings     168
    Constant    0
    Data        1
    BSS         61
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     26      54
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[12]), STR_17(CODE[15]), STR_16(CODE[12]), STR_15(CODE[14]), 
		 -> STR_14(CODE[14]), STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[15]), 
		 -> STR_10(CODE[11]), STR_9(CODE[14]), STR_8(CODE[11]), STR_7(CODE[14]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[14]), 
		 -> STR_2(CODE[16]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[12]), STR_17(CODE[15]), STR_16(CODE[12]), STR_15(CODE[14]), 
		 -> STR_14(CODE[14]), STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[15]), 
		 -> STR_10(CODE[11]), STR_9(CODE[14]), STR_8(CODE[11]), STR_7(CODE[14]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[14]), 
		 -> STR_2(CODE[16]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[12]), STR_17(CODE[15]), STR_16(CODE[12]), STR_15(CODE[14]), 
		 -> STR_14(CODE[14]), STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[15]), 
		 -> STR_10(CODE[11]), STR_9(CODE[14]), STR_8(CODE[11]), STR_7(CODE[14]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[14]), 
		 -> STR_2(CODE[16]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S575_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _cambio->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_cambio
    _cambio->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_cambio
    _cambio->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   23585
                                             76 BANK0      2     2      0
                                             15 BANK1     11    11      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
             _PIN_MANAGER_Initialize
                             _cambio
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _cambio                                               8     8      0   11600
                                             74 BANK0      2     2      0
                                              9 BANK1      6     6      0
                            _Lcd_Cmd
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    7965
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             6     4      2    3269
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PIN_MANAGER_Initialize
   _cambio
     _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      36       8       67.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      B4      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 25 20:34:09 2020

                              _s 00A7                               l61 0E3E                               l62 0E64  
                             l63 0E90                               l92 00B1                               l95 0F22  
                             l89 0D5F                               l98 0C98                              l112 07AB  
                            l124 0789                              l136 07E4                              l144 047A  
                            l330 028B                              l331 029C                              l343 018A  
                            l344 019B                              l720 0DC9                              l801 001E  
                            l723 0DEB                              l725 0E04                              l733 030E  
                            l734 0324                              l751 0408                              l728 02E6  
                            l737 0394                              l729 02F0                              l772 0C77  
                            l765 0D16                              l693 0CBC                              l758 0FFF  
                            l784 0DAE                              l792 0CE5                              l769 0C77  
                            l795 0C57                              _abs 0C5E                              _pad 0DAF  
                            wreg 0009                             l2001 07B7                             l2011 07D5  
                           l2003 07BE                             ?_abs 0073                             l2013 07D7  
                           l2005 07BE                             l2101 04E4                             l2007 07C2  
                           l2111 04FE                             l2103 04E8                             l2009 07CB  
                           l2121 051D                             l2113 0503                             l2105 04ED  
                           l2041 0409                             l2203 0D39                             l2131 0548  
                           l2123 0527                             l2115 0505                             l2107 04F1  
                           l2051 042B                             l2043 040C                             l2141 055E  
                           l2133 054A                             l2125 0539                             l2117 0507  
                           l2109 04F8                             l2061 044A                             l2053 0433  
                           l2045 041D                             l1511 0D79                             l1503 0D60  
                           l2151 057B                             l2143 0566                             l2127 0543  
                           l2119 050B                             l2135 054C                             l2071 047D  
                           l2063 0454                             l2055 0438                             l2047 0420  
                           l1601 0167                             l1513 0D96                             l1505 0D65  
                           l1521 0CC2                             l2161 0598                             l2153 057F  
                           l2145 056B                             l2137 0551                             l2129 0546  
                           l2081 04A5                             l2073 0488                             l2065 0466  
                           l2057 043A                             l2049 0426                             l1603 016C  
                           l1515 0DA6                             l1507 0D6A                             l1523 0CD0  
                           l1531 000F                             l1611 0DC2                             l2171 05C2  
                           l2163 059E                             l2155 0586                             l2147 0572  
                           l2139 0558                             l2091 04C3                             l2083 04AF  
                           l2075 0492                             l2059 043E                             l2067 0470  
                           l1541 01A7                             l1509 0D6F                             l1525 0CD5  
                           l1533 0018                             l1621 0DF0                             l1613 0DC7  
                           l1605 0DB1                             l1701 0F6C                             l2181 05E5  
                           l2173 05D4                             l2165 05A2                             l2157 058C  
                           l2149 0576                             l2093 04CA                             l2077 0498  
                           l2085 04B2                             l2069 0477                             l1551 01FF  
                           l1543 01C8                             l1519 0CBF                             l1527 0006  
                           l1623 0DF8                             l1615 0DCC                             l1607 0DB5  
                           l1631 029F                             l1711 0FB8                             l1703 0F74  
                           l2175 05DE                             l2167 05A6                             l2159 0591  
                           l2095 04D0                             l2087 04B7                             l2079 049C  
                           l1561 021F                             l1553 020C                             l1545 01D2  
                           l1537 019C                             l1529 000B                             l1617 0DD8  
                           l1609 0DBD                             l1641 0300                             l1633 02AF  
                           l1721 0FD9                             l1713 0FC0                             l1705 0F8D  
                           l1801 0D04                             l2177 05E1                             l2169 05B8  
                           l2097 04D8                             l2089 04BE                             l1811 0D1F  
                           l1563 0227                             l1555 020F                             l1571 0268  
                           l1547 01F1                             l1539 019D                             l1627 0C5E  
                           l1619 0DDD                             l1651 0328                             l1643 0306  
                           l1635 02C2                             l1715 0FCB                             l1803 0D0E  
                           l2179 05E3                             l2099 04DD                             l1741 0EDB  
                           l1733 0E92                             l1813 0D25                             l1821 0D47  
                           l1573 026D                             l1565 0249                             l1557 0217  
                           l1549 01F5                             l1581 00DE                             l1629 0C6B  
                           l1661 0367                             l1653 032B                             l1645 0316  
                           l1637 02C8                             l1709 0FA7                             l1725 0FDC  
                           l1901 060B                             l1751 0F09                             l1743 0EDC  
                           l1735 0E95                             l1823 0D4C                             l1815 0D2B  
                           l1807 0D18                             l1567 0259                             l1559 021B  
                           l1591 011F                             l1583 00E8                             l1575 00B2  
                           l1663 03A2                             l1671 03CF                             l1655 0330  
                           l1647 031C                             l1639 02EB                             l1727 0FF5  
                           l1719 0FD1                             l1911 063D                             l1903 061D  
                           l1761 0F1B                             l1753 0F12                             l1745 0EDE  
                           l1737 0ED5                             l1825 0D53                             l1809 0D19  
                           l1569 025A                             l1593 0123                             l1585 0107  
                           l1577 00B3                             l1681 03E9                             l1673 03D6  
                           l1665 03AF                             l1657 035F                             l1649 0320  
                           l1841 0CB4                             l1833 0C9B                             l1921 0668  
                           l1905 0621                             l1913 0648                             l1755 0F16  
                           l1747 0EEE                             l1739 0ED9                             l1771 0069  
                           l1763 0020                             l1827 0D57                             l1819 0D31  
                           l1595 0127                             l1587 0114                             l1579 00BD  
                           l1683 03ED                             l1675 03DA                             l1667 03BC  
                           l1659 0363                             l1691 0F36                             l1835 0CA3  
                           l1931 0692                             l1923 0673                             l1915 064C  
                           l1907 062A                             l1757 0F18                             l1749 0EFF  
                           l1861 0E80                             l1853 0E53                             l1845 0E05  
                           l1781 0097                             l1773 006A                             l1765 0023  
                           l1597 0149                             l1589 0117                             l1677 03DE  
                           l1685 03F6                             l1669 03CA                             l1693 0F3E  
                           l1837 0CA5                             l1941 06C5                             l1933 069B  
                           l1925 067E                             l1917 0655                             l1909 0634  
                           l1759 0F19                             l1863 0E84                             l1855 0E5A  
                           l1847 0E12                             l1871 0C78                             l1791 00A9  
                           l1783 00A0                             l1775 006C                             l1767 0063  
                           l1599 0159                             l1679 03E4                             l1695 0F44  
                           l1839 0CA7                             l1951 06E7                             l1943 06CA  
                           l1935 06A5                             l1927 0688                             l1919 065F  
                           l1865 0E88                             l1857 0E5E                             l1849 0E3C  
                           l1881 0C84                             l1873 0C7C                             l1793 00AA  
                           l1785 00A4                             l1777 007C                             l1769 0067  
                           l1697 0F49                             l1689 0F25                             l1961 070C  
                           l1953 06EE                             l1945 06D7                             l1937 06AE  
                           l1929 068E                             l1867 0E8C                             l1859 0E79  
                           l1883 0C85                             l1875 0C7E                             l1787 00A6  
                           l1779 008D                             l1699 0F5B                             l1795 0CE8  
                           l1971 0737                             l1963 071E                             l1955 06F5  
                           l1947 06DC                             l1939 06B8                             l1891 05F1  
                           l1869 0E8C                             l1885 0C8A                             l1877 0C80  
                           l1789 00A7                             l1797 0CEC                             l1981 076B  
                           l1973 073B                             l1957 06F9                             l1949 06E2  
                           l1965 0729                             l1893 05F2                             ?_pad 0024  
                           l1887 0C8B                             l1879 0C82                             l1799 0CF0  
                           l1991 0795                             l1983 0776                             l1975 0744  
                           l1967 072E                             l1959 0702                             l1895 05F4  
                           l1993 079B                             l1985 0780                             l1977 074E  
                           l1969 0730                             l1897 05F9                             l1889 05EA  
                           l1987 0784                             l1979 0760                             l1995 079F  
                           l1899 0606                             l1997 07A6                             l1989 078E  
                           l1999 07B0                             STR_1 086D                             STR_2 0822  
                           STR_3 086D                             STR_4 0811                             STR_5 0832  
                           STR_6 0800                             STR_7 086D                             STR_8 0893  
                           STR_9 086D                             u1110 0D65                             u1111 0D64  
                           u1120 0D6A                             u2000 04B7                             u1121 0D69  
                           u2001 04B6                             u1210 01FC                             u1130 0D79  
                           u2010 04C3                             u1131 0D78                             u2011 04C2  
                           u1220 020C                             u1300 00E8                             u1140 0D96  
                           u2100 0503                             u2020 04CA                             u1221 020B  
                           u1301 00E7                             u1141 0D95                             u2101 0502  
                           u2021 04C9                             u1230 021F                             u1150 0CE5  
                           u2110 0551                             u2030 04D0                             u1231 021E  
                           u1151 0CE4                             u2111 0550                             u2031 04CF  
                           u1240 0249                             u1320 0114                             u1160 0018  
                           u1400 0DEB                             u2200 0591                             u2120 0558  
                           u2040 04DD                             u1241 0248                             u1321 0113  
                           u1145 0D92                             u1161 0017                             u1401 0DEA  
                           u2201 0590                             u2121 0557                             u2041 04DC  
                           u1250 0268                             u1170 01A7                             u1330 0127  
                           u1410 0DF0                             u2130 055E                             u2050 04E4  
                           u1251 0267                             u1171 01A6                             u1331 0126  
                           u1411 0DEF                             u2131 055D                             u2051 04E3  
                           u1260 026D                             u1340 0149                             u1420 0C6B  
                           u1500 0320                             u2140 056B                             u2060 04ED  
                           u1261 026C                             u1245 0245                             u1341 0148  
                           u1421 0C6A                             u1405 0DE7                             u1501 031F  
                           u2141 056A                             u2061 04EC                             _LATA 0018  
                           u1190 01D2                             u1350 0167                             u1510 03A2  
                           u1430 02BA                             u2150 0572                             u2070 04F1  
                           _LATB 0019                             u1191 01D1                             u1351 0166  
                           u1511 03A1                             u1431 02B8                             u2151 0571  
                           u2071 04F0                             _LATC 001A                             u1360 016C  
                           u1280 00BD                             u1520 03AF                             u1440 02BB  
                           u1600 0F5B                             u2160 057B                             u2080 04F8  
                           u1361 016B                             u1345 0145                             u1281 00BC  
                           u1425 0C67                             u1521 03AE                             u1601 0F5A  
                           u2161 057A                             u2081 04F7                             u2217 042F  
                           u1530 03BC                             u1450 02C8                             u1610 0F6C  
                           u2170 057F                             u2090 04FE                             u2307 0E1A  
                           u1531 03BB                             u1515 039E                             u1451 02C7  
                           u1611 0F6B                             u2227 05FF                             u2171 057E  
                           u2091 04FD                             u1380 0DB5                             u1540 03CA  
                           u1620 0FB8                             u2180 0586                             u2317 0E21  
                           u1381 0DB4                             u1541 03C9                             u1621 0FB7  
                           u2237 06BE                             u2181 0585                             u1390 0DC2  
                           u1550 03CF                             u1470 02EB                             u2190 058C  
                           u2327 0E28                             u1391 0DC1                             u1551 03CE  
                           u1535 03B8                             u1471 02EA                             u2247 06D0  
                           u2191 058B                             u1560 03D6                             u1480 0300  
                           u1800 0612                             u2337 0E2F                             u1705 0036  
                           u1561 03D5                             u1545 03C6                             u1481 02FF  
                           u2257 07DD                             u1801 0610                             u1570 03DA  
                           u1490 031C                             u1810 0613                             u1635 0E98  
                           u2347 0E36                             u2267 0064                             u1715 0047  
                           u1571 03D9                             u1491 031B                             u1580 03E4  
                           u1900 078E                             u1820 061D                             u1645 0EA8  
                           u2357 0E54                             u2277 00A1                             u1725 0057  
                           u1581 03E3                             u1485 02FC                             u1901 078D  
                           u1821 061C                             u1590 0F36                             u1750 0D0E  
                           u1910 079B                             u1830 0688                             u1655 0EB9  
                           u2367 0E7A                             u2287 00AB                             u1735 006F  
                           u1591 0F35                             u1751 0D0D                             u1911 079A  
                           u1831 0687                             u1760 0D5F                             u1920 07A6  
                           u1840 06CA                             u2377 0ED6                             u1665 0EC9  
                           u2297 0E13                             u1745 007F                             u1761 0D5E  
                           u1921 07A5                             u1841 06C9                             u1770 0E64  
                           u1930 07B0                             u1850 06DC                             u2387 0F13  
                           u1675 0EE1                             u1771 0E63                             u1931 07AF  
                           u1851 06DB                             u1940 07BE                             u1860 06E2  
                           u1780 05F9                             u2397 0F1C                             u1685 0EF1  
                           u1941 07BD                             u1861 06E1                             u1781 05F8  
                           u1870 06E7                             u1790 060B                             u1695 0026  
                           u1871 06E6                             u1791 060A                             u1880 072E  
                           u1960 042B                             u1881 072D                             u1961 042A  
                           u1890 0780                             u1970 0438                             u1891 077F  
                           u1971 0437                             u1980 0477                             u1981 0476  
                           u1990 0492                             u1991 0491                             _WPUC 1F4F  
                           abs@a 0073                             _dbuf 0120                             _main 0409  
                           _dtoa 029D                             _prec 00A4                             _nout 00A0  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             start 0002                  __end_of_Lcd_Cmd 0F23  
                     _Lcd_Chr_CP 001F                            ??_abs 0075                            ??_pad 007C  
                 Lcd_Out2@buffer 0074                  __end_of___aodiv 029D                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 019C                            STR_10 0893  
                          STR_11 0841                            STR_12 0887                            STR_13 089E  
                          STR_14 086D                            STR_15 085F                            STR_16 087B  
                          STR_17 0850                            STR_18 087B                     vfpfcnvrt@fmt 004E  
                          _TRISA 0012                            _TRISB 0013                            _TRISC 0014  
                 cambio@variable 00C4                            _flags 006E                            _fputc 0D60  
                          _fputs 0CBD                            pad@fp 002B                            _width 00A2  
                          _putch 0C57                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003E                            dtoa@s 0042  
                          dtoa@w 0040                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0CBD                 __end_of_Lcd_Init 0E91                 __end_of_Lcd_Out2 0D60  
                __initialization 07E5                     __end_of_main 05EA                     __end_of_dtoa 0409  
                         ??_main 006C                           ??_dtoa 0038                           ?_fputc 0070  
                         ?_fputs 0078                           _ANSELA 1F38                           ?_putch 0070  
                         _ANSELB 1F43                           _ANSELC 1F4E                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           u120lld 01F1  
                         u131lld 0107                        ??_Lcd_Cmd 0070                           u118lld 01C6  
                         u127lld 028B                           u137lld 018A                           u129lld 00DC  
                         u146lld 02E6                  cambio@operacion 00C7                     vfprintf@cfmt 0064  
                    ?_Lcd_Chr_CP 0070                        ??___aodiv 0070                        ??___aomod 0070  
                         _cambio 05EA                           _maximo 00D5                           main@A1 00D1  
                         main@A2 00CD                           main@A3 00D3                           main@A4 00CF  
                         pad@buf 0024                           dtoa@fp 003D                           _strlen 0005  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                           putch@c 0070                 __end_of_vfprintf 0D17  
                      ??_sprintf 007D          __end_of__initialization 07FD                   __pcstackCOMMON 0070  
                   __pidataBANK1 0004                    __end_of_fputc 0DAF                    __end_of_fputs 0CE6  
                  __end_of_putch 0C58                        ?_Lcd_Init 0070                        ?_Lcd_Out2 0073  
                        ??_fputc 0073                          ??_fputs 0079              __size_of_Lcd_Chr_CP 0093  
                        ??_putch 0070                       __pbssBANK0 006E                       __pbssBANK1 00A0  
                     __pbssBANK2 0120                       __pmaintext 0409                          ?_cambio 0070  
                        ?_strlen 0070               __size_of_vfpfcnvrt 00DD                       ??_Lcd_Init 0073  
                     ??_Lcd_Out2 0075                          _SLRCONA 1F3B                          _SLRCONB 1F46  
                        _SLRCONC 1F51                          _Lcd_Cmd 0E91                          ___aodiv 019C  
                        ___aomod 00B2                  __size_of_cambio 01FB                        ?_vfprintf 005E  
                        __ptext1 05EA                          __ptext2 0C99                          __ptext3 0CE6  
                        __ptext4 0F23                          __ptext5 029D                          __ptext6 0DAF  
                        __ptext7 0005                          __ptext8 0CBD                          __ptext9 0D60  
                __size_of_strlen 001A                     __size_of_abs 001A                     __size_of_pad 0056  
       ??_PIN_MANAGER_Initialize 0070                          main@aux 00CA                          _sprintf 0C99  
                        clrloop0 0C59             end_of_initialization 07FD                          fputc@fp 0072  
                        fputs@fp 0078                __end_of_vfpfcnvrt 1000                     ??_Lcd_Chr_CP 0070  
                      Lcd_Out2@x 0073                        Lcd_Out2@y 0077                       ??_vfprintf 0061  
                        strlen@a 0073                          strlen@s 0074                        _PORTAbits 000C  
                      _PORTBbits 000D                        _PORTCbits 000E                        _TRISBbits 0013  
                      _TRISCbits 0014               __end_of_Lcd_Chr_CP 00B2                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055                   __end_of_cambio 07E5  
                 __end_of_strlen 001F              start_initialization 07E5  __size_of_PIN_MANAGER_Initialize 0021  
                    __end_of_abs 0C78                      __end_of_pad 0E05                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 005E                         ??_cambio 006A  
                    __pdataBANK1 00D5                         ??_strlen 0072                        ___latbits 0001  
                  __pcstackBANK0 0020                    __pcstackBANK1 00BB                 ___aodiv@dividend 0028  
                       ?_Lcd_Cmd 0070           _PIN_MANAGER_Initialize 0C78                         ?___aodiv 0020  
                       ?___aomod 0020                 ___aodiv@quotient 0073                __size_of_vfprintf 0031  
                       ?_sprintf 0066                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001                         _LATAbits 0018                        clear_ram0 0C58  
                      _vfpfcnvrt 0F23                     Lcd_Init@data 0074                     Lcd_Out2@data 0078  
                       _Lcd_Init 0E05                         _Lcd_Out2 0D17                 __size_of_Lcd_Cmd 0092  
                     vfprintf@ap 0060                       vfprintf@fp 0063                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                       ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071                       sprintf@fmt 0066                   Lcd_Chr_CP@data 0072  
                       _dtoa$648 003B                         __ptext10 0C57                         __ptext11 0C5E  
                       __ptext12 00B2                         __ptext13 019C                         __ptext14 0D17  
                       __ptext15 001F                         __ptext16 0C78                         __ptext17 0E05  
                       __ptext18 0E91                         _contador 00A6                 __size_of_sprintf 0024  
                       cambio@ok 00C8                      Lcd_Cmd@data 0072                    __size_of_main 01E1  
                  __size_of_dtoa 016C                         _vfprintf 0CE6                 ___aomod@dividend 0028  
                 __pstringtext10 0887                   __pstringtext11 0893                   __pstringtext12 089E  
                 __pstringtext13 0000                        sprintf@ap 00BD          ?_PIN_MANAGER_Initialize 0070  
                ___aomod@divisor 0020                      ??_vfpfcnvrt 0050                  ___aomod@counter 0071  
                  __pstringtext1 0800                    __pstringtext2 0811                    __pstringtext3 0822  
                  __pstringtext4 0832                    __pstringtext5 0841                    __pstringtext6 0850  
                  __pstringtext7 085F                    __pstringtext8 086D                    __pstringtext9 087B  
                       sprintf@f 00BE                         sprintf@s 00C3                     ___aodiv@sign 0072  
 __end_of_PIN_MANAGER_Initialize 0C99                     ___aomod@sign 0072  
